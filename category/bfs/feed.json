{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"bfs\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/27/leetcode/127.Word%20Ladder/index/",
            "url": "http://example.com/2024/02/27/leetcode/127.Word%20Ladder/index/",
            "title": "127.Word Ladder",
            "date_published": "2024-02-27T06:21:44.238Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1sYWRkZXIvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      beginWord,</span><br><span class=\"line\">      wordList,</span><br><span class=\"line\">      <span class=\"attr\">links</span>: [beginWord]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(queue);</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.<span class=\"property\">beginWord</span> === endWord) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// console.log(obj.links);</span></span><br><span class=\"line\">      <span class=\"comment\">// rst.push(obj.time)</span></span><br><span class=\"line\">      <span class=\"comment\">// continue;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> obj.<span class=\"property\">time</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; obj.<span class=\"property\">wordList</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">isAdjacent</span>(obj.<span class=\"property\">beginWord</span>, obj.<span class=\"property\">wordList</span>[i])) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log([...obj.wordList.slice(0, i), ...obj.wordList.slice(i + 1)]);</span></span><br><span class=\"line\">        queue.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">time</span>: obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"attr\">beginWord</span>: obj.<span class=\"property\">wordList</span>[i],</span><br><span class=\"line\">          <span class=\"attr\">wordList</span>: [...obj.<span class=\"property\">wordList</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i), ...obj.<span class=\"property\">wordList</span>.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)],</span><br><span class=\"line\">          <span class=\"attr\">links</span>: [...obj.<span class=\"property\">links</span>, obj.<span class=\"property\">wordList</span>[i]]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>先收集关系，再遍历，但内存溢出了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!wordList.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === endWord)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    wordList.<span class=\"title function_\">unshift</span>(beginWord)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> near = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; wordList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      near[i] = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; wordList.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (wordList[i] !== wordList[j] &amp;&amp; <span class=\"title function_\">isAdjacent</span>(wordList[i], wordList[j])) &#123;</span><br><span class=\"line\">              near[i].<span class=\"title function_\">push</span>(j)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// console.log(near);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">ids</span>: near[<span class=\"number\">0</span>],</span><br><span class=\"line\">        <span class=\"attr\">used</span>: &#123;<span class=\"number\">0</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> ids = obj.<span class=\"property\">ids</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">of</span> ids) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (wordList[index] === endWord) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.<span class=\"property\">used</span>[index]) &#123;</span><br><span class=\"line\">            queue.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">time</span>: obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">ids</span>: near[index],</span><br><span class=\"line\">                <span class=\"attr\">used</span>: &#123;</span><br><span class=\"line\">                    ...obj.<span class=\"property\">used</span>,</span><br><span class=\"line\">                    [index]: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>基于我的答案的改进版</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!wordList.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item === endWord)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    wordList.<span class=\"title function_\">unshift</span>(beginWord);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> near = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; wordList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        near[i] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; wordList.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (wordList[i] !== wordList[j] &amp;&amp; <span class=\"title function_\">isAdjacent</span>(wordList[i], wordList[j])) &#123;</span><br><span class=\"line\">                near[i].<span class=\"title function_\">push</span>(j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// console.log(near);</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> used = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> queue = [<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> len = queue.<span class=\"property\">length</span>;</span><br><span class=\"line\">        time += <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (len &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            len -= <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> i = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">of</span> near[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wordList[index] === endWord) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> time;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!used[index]) &#123;</span><br><span class=\"line\">                    used[index] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    queue.<span class=\"title function_\">push</span>(index);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>找 26 个字母的组合反而更快</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span>(<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wordSet = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>(wordList)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [beginWord];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> steps = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> next = [];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// loop over each word in the queue</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> word <span class=\"keyword\">of</span> queue) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(word === endWord) <span class=\"keyword\">return</span> steps;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// loop over each char of the word </span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">// and replace the char with letters from [a - z]</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">26</span>; j++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> newWord = word.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i) + <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(j + <span class=\"number\">97</span>) + word.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">// if the new word exist in the word list add it to the queue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(wordSet.<span class=\"title function_\">has</span>(newWord)) &#123;</span><br><span class=\"line\">                        next.<span class=\"title function_\">push</span>(newWord);</span><br><span class=\"line\">                        wordSet.<span class=\"title function_\">delete</span>(newWord);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        queue = next</span><br><span class=\"line\">        steps++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "BFS"
            ]
        }
    ]
}