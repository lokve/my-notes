{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"01背包\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "url": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "title": "474.Ones and Zeroes",
            "date_published": "2024-01-29T07:31:35.788Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvb25lcy1hbmQtemVyb2VzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>01 背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">strs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span> (<span class=\"params\">strs, m, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: m + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span></span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: n + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> str <span class=\"keyword\">of</span> strs) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _m = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _n = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> s <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (s === <span class=\"string\">&quot;0&quot;</span>) &#123;</span><br><span class=\"line\">              _m += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              _n += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = m; i &gt;= _m; i--) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n; j &gt;= _n; j--) &#123;</span><br><span class=\"line\">              dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-_m][j-_n] + <span class=\"number\">1</span>, dp[i][j]);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[m][n];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMaxForm</span>([<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;111001&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;0&quot;</span>], <span class=\"number\">5</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>速度很快！！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span>(<span class=\"params\">S, M, N</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>:M+<span class=\"number\">1</span>&#125;,<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(N+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; S.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = S[i], zeros = <span class=\"number\">0</span>, ones = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; str.<span class=\"property\">length</span>; j++)</span><br><span class=\"line\">            str.<span class=\"title function_\">charAt</span>(j) === <span class=\"string\">&quot;0&quot;</span> ? zeros++ : ones++</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = M; j &gt;= zeros; j--)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = N; k &gt;= ones; k--)</span><br><span class=\"line\">                dp[j][k] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][k], dp[j-zeros][k-ones] + <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[M][N]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "title": "494.Target Sum",
            "date_published": "2024-01-24T08:54:17.023Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdGFyZ2V0LXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以将这组数看成两部分，P 和 N，其中 P 使用正号，N 使用负号，有以下推导:</span><br><span class=\"line\"></span><br><span class=\"line\">sum(P) - sum(N) = target</span><br><span class=\"line\">sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)</span><br><span class=\"line\">2 * sum(P) = target + sum(nums)</span><br></pre></td></tr></table></figure>\n<p>受上面公式启发，以及<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">题 416</span>，使用 <code>01背包</code> 解决问题</p>\n<p>这里 dp [i] 表示 nums 里面相加能产生的和的数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">S</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTargetSumWays = <span class=\"keyword\">function</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = (sum + S) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(W) !== W || W &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W+<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;</span><br><span class=\"line\">            dp[i] = dp[i] + dp[i - num]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">100</span>], -<span class=\"number\">200</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>DPS 解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWays</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">findTargetSumWay</span>(nums, <span class=\"number\">0</span>, S);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWay</span>(<span class=\"params\">nums, start, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (start === nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S === <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S + nums[start]) +</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S - nums[start])</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>], <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "title": "416.Partition Equal Subset Sum",
            "date_published": "2024-01-24T02:11:50.314Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找两组和相同的数，就是找是否有和是 <code>sum/2</code>  的组合</p>\n<p>通用方法，但是时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">calc</span>(nums, sum / <span class=\"number\">2</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calc</span>(<span class=\"params\">nums, rest</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">calc</span>(nums.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>), rest - nums[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>可以勉强在时间内通过，通过 dp 记录，可以减少一些判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalSum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">acc, item</span>) =&gt;</span> acc + item, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (totalSum % <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = totalSum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(target + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">idx, target</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[idx][target] !== -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> dp[idx][target];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = idx + <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, target - nums[idx]) || <span class=\"title function_\">dfs</span>(i, target)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[idx][target] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>, target);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>下面应该是最佳方案了</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU4JTgzJThDJUU1JThDJTg1JUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwMDElRTglODMlOEMlRTUlOEMlODUtMi5tZA==\">01 背包参考文章</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWR5bmFtaWMuaHRtbCMlRTUlODglOTIlRTUlODglODYlRTYlOTUlQjAlRTclQkIlODQlRTQlQjglQkElRTUlOTIlOEMlRTclOUIlQjglRTclQUQlODklRTclOUElODQlRTQlQjglQTQlRTklODMlQTglRTUlODglODY=\">答案来源</span></p>\n<p>从 dp 的结果来看，dp 是在不断的把 nums 各个数累加的和设为 true，其实到 dp [W]=true 就可以停止了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = sum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;                 <span class=\"comment\">// 0-1 背包一个物品只能用一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;   <span class=\"comment\">// 从后往前，先计算 dp[i] 再计算 dp[i-num]</span></span><br><span class=\"line\">            dp[i] = dp[i] || dp[i - num];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">canPartition</span>([<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,10])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true,  true, false]</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,8])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        }
    ]
}