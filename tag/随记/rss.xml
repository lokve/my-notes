<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>学习笔记 • Posts by &#34;随记&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Wed, 28 Jun 2017 15:00:00 +0800</pubDate>
        <lastBuildDate>Wed, 28 Jun 2017 15:00:00 +0800</lastBuildDate>
        <category>Bue笔记</category>
        <category>react源码解析</category>
        <category>react-redux</category>
        <category>Vue笔记</category>
        <category>随记</category>
        <category>算法基础</category>
        <category>javascript高级笔记</category>
        <category>leetcode</category>
        <category>动态规划</category>
        <category>DP</category>
        <category>分治算法</category>
        <category>01背包</category>
        <item>
            <guid isPermalink="true">http://example.com/2017/06/28/%E9%9A%8F%E8%AE%B0/2/</guid>
            <title>一些笔记</title>
            <link>http://example.com/2017/06/28/%E9%9A%8F%E8%AE%B0/2/</link>
            <category>随记</category>
            <pubDate>Wed, 28 Jun 2017 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;一些项目经验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些项目经验&#34;&gt;#&lt;/a&gt; 一些项目经验&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;vue 用 cdn, 就不需要给其子组件 (vuex, vue-router 等) 使用 Vue.use&lt;/li&gt;
&lt;li&gt;toString.apply 可以用于区分数据类型&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;toString.apply([]) // &amp;#x27;[object Array]&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;toString.apply(/aa/) // &amp;quot;[object RegExp]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;关于 scroll 进度条隐藏的小技巧&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;width: ? // 父级宽度 + 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;overflow-y: scroll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;padding-right: 20px;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/06/02/%E9%9A%8F%E8%AE%B0/1/</guid>
            <title>一些笔记</title>
            <link>http://example.com/2017/06/02/%E9%9A%8F%E8%AE%B0/1/</link>
            <category>随记</category>
            <pubDate>Fri, 02 Jun 2017 11:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;你不知道的javascript中-笔记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#你不知道的javascript中-笔记&#34;&gt;#&lt;/a&gt; 《你不知道的 javascript》(中) 笔记&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;undefined 和 undeclared 是两码事&lt;/li&gt;
&lt;li&gt;通过 typeof 来检查变量是否存在，还能够适应不同环境 (不局限于浏览器)&lt;/li&gt;
&lt;li&gt;数字用指数格式显示用 toExponential () 方法&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = 5E10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a;                  /* 50000000000 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toExponential();  /* &amp;quot;5e+10&amp;quot; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var b = a * a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b;                  /* 2.5e+21 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var c = 1 / a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c;                  /* 2e-11 */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;toPrecision (…) 方法用来指定有效数位的显示位数:&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = 42.59;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 1 );  // &amp;quot;4e+1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 2 );  // &amp;quot;43&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 3 );  // &amp;quot;42.6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 4 );  // &amp;quot;42.59&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 5 );  // &amp;quot;42.590&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.toPrecision( 6 );  // &amp;quot;42.5900&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;es6 中，可以使用 Number.EPSILON 来比较两个数字是否相等 (在指定的误差范围内), 这个值 (误差精度) 通常是 2^-52 (2.220446049250313e-16)&lt;br&gt;
 从 ES6 开始，该值定义在 Number.EPSILON 中，我们可以直接拿来用，也可以为 ES6 之前&lt;br&gt;
的版本写 polyfill:&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if (!Number.EPSILON) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Number.EPSILON = Math.pow(2,-52);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function numbersCloseEnoughToEqual(n1,n2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   return Math.abs( n1 - n2 ) &amp;lt; Number.EPSILON;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var a = 0.1 + 0.2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var b = 0.3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numbersCloseEnoughToEqual( a, b );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numbersCloseEnoughToEqual( 0.0000001, 0.0000002 );  // false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;按惯例我们用 void 0 来获得 undefined, void 运算符在其他地方也能派上用场，比如不让表达式返回任何结果 (即使其有副作用)。&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function doSomething() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 注:APP.ready 由程序自己定义 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (!APP.ready) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     // 稍后再试&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     return void setTimeout( doSomething,100 );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  var result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 其他&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 现在可以了吗?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if (doSomething()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 立即执行下一个任务 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;将原型作为默认值&lt;br&gt;
 Function.prototype 是一个空函数，RegExp.prototype 是一个 “空” 的正则表达式 (无任何匹配)，而 Array.prototype 是一个空数组。对未赋值的变量来说，它们是很好的默认值。&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function isThisCool(vals,fn,rx) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vals = vals || Array.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fn = fn || Function.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rx = rx || RegExp.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return rx.test(vals.map( fn ).join( &amp;quot;&amp;quot; )); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;isThisCool();       // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种方法的一个好处是 .prototypes 已被创建并且仅创建一次。相反，如果将 []、&lt;br&gt;
function (){} 和 /(?😃/ 作为默认值，则每次调用 isThisCool (…) 时它们都会被创建一次 (具体创建与否取决于 JavaScript 引擎，稍后它们可能会被垃圾回收)，这样无疑会造成内&lt;br&gt;
存和 CPU 资源的浪费。&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;JSON.stringify&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  b: 42,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c: &amp;quot;42&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  d: [1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JSON.stringify( a, [&amp;quot;c&amp;quot;,&amp;quot;d&amp;quot;], 3 );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;quot;c&amp;quot;: &amp;quot;42&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;quot;d&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      2,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;关于～～，推荐在数据能控制在小范围的时候使用&lt;br&gt;
一些开发人员使用～～来截除数字值的小数部分，以为这和 Math.floor (…) 的效果一样， 实际上并非如此。&lt;br&gt;
~~ 中的第一个～执行 ToInt32 并反转字位，然后第二个～再进行一次字位反转，即将所有字位反转回原值，最后得到的仍然是 ToInt32 的结果。&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~~ (1e20)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//1661992960&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;关于 &amp;lt;= 和&amp;gt;=&lt;br&gt;
JavaScript 中 &amp;lt;= 是 “不大于” 的意思 (即！(a &amp;gt; b)，处理为！(b &amp;lt; a))。同理 a &amp;gt;= b 处理为 b &amp;lt;= a。&lt;/li&gt;
&lt;/ol&gt;
   &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = &amp;#123; b: 42 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var b = &amp;#123; b: 43 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a &amp;lt; b;  // false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a == b; // false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a &amp;gt; b;  // false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a &amp;lt;= b; // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a &amp;gt;= b; // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;JavaScript 通过标签跳转能够实现 goto 的部分功能。continue 和 break 语句都可以带 一个标签，因此能够像 goto 那样进行跳转。例如:&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 标签为foo的循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;foo: for (var i=0; i&amp;lt;4; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  for (var j=0; j&amp;lt;4; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 如果j和i相等，继续外层循环 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (j == i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 跳转到foo的下一个循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      continue foo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 跳过奇数结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ((j * i) % 2 == 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 继续内层循环(没有标签的)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      continue; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log( i, j );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 1 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 2 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 2 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 3 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 3 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;关于 html 标签 id, 会在 js 全局变量上创建一个与 id 同名的变量&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&amp;#x27;foo&amp;#x27;&amp;gt;&amp;lt;/div&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log( foo ); // HTML元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;消息是双向传递的 ——yield&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function *foo(x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var y = x * (yield &amp;quot;Hello&amp;quot;); // &amp;lt;-- yield一个值!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var it = foo( 6 );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var res = it.next(); // 第一个next()，并不传入任何东西&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res.value;  // &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = it.next( 7 ); // 向等待的yield传入7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res.value; // 42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
