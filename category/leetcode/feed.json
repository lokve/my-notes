{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"leetcode\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/02/leetcode/188.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20IV/index/",
            "url": "http://example.com/2024/02/02/leetcode/188.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20IV/index/",
            "title": "188.Best Time to Buy and Sell Stock IV",
            "date_published": "2024-02-02T08:55:55.547Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1pdi9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\">#</a> 答案</h3>\n<p>通用解法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">0</span> &lt;= i &lt;= n:             <span class=\"comment\">// n is the number of days</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt;= k &lt;= k:        <span class=\"comment\">// k is the maximum number of transactions</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> s in &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;:    <span class=\"comment\">// s is the rest state</span></span><br><span class=\"line\">\t\t\t\tdp[i][k][s] = <span class=\"built_in\">max</span>(buy,sell,rest)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">k, prices</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">            dp[i] = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt;= k; j++) &#123;</span><br><span class=\"line\">                dp[i][j] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span> || j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(</span><br><span class=\"line\">                        dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>],</span><br><span class=\"line\">                        dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i]</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[len - <span class=\"number\">1</span>][k][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>(<span class=\"number\">4</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>缩减代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i20 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i21 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">// base case for second transaction</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i11 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">//base case for second transaction</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;prices.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">    d_i10 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i10, d_i11 + prices[i]);</span><br><span class=\"line\">    d_i11 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i11,  <span class=\"number\">0</span> - prices[i]);</span><br><span class=\"line\">    d_i20 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i20, d_i21 + prices[i]);</span><br><span class=\"line\">    d_i21 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i21, d_i10 - prices[i]);</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> d_i20</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/02/leetcode/123.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20III/index/",
            "url": "http://example.com/2024/02/02/leetcode/123.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20III/index/",
            "title": "123.Best Time to Buy and Sell Stock III",
            "date_published": "2024-02-02T08:43:53.026Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paWkvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\">#</a> 答案</h3>\n<p>通用解法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">0</span> &lt;= i &lt;= n:             <span class=\"comment\">// n is the number of days</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt;= k &lt;= k:        <span class=\"comment\">// k is the maximum number of transactions</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> s in &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;:    <span class=\"comment\">// s is the rest state</span></span><br><span class=\"line\">\t\t\t\tdp[i][k][s] = <span class=\"built_in\">max</span>(buy,sell,rest)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    dp[i] = []</span><br><span class=\"line\">    dp[i][<span class=\"number\">1</span>] = []</span><br><span class=\"line\">    dp[i][<span class=\"number\">2</span>] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>], <span class=\"number\">0</span> - prices[i])</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>缩减代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i20 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i21 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">// base case for second transaction</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i11 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">//base case for second transaction</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;prices.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">    d_i10 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i10, d_i11 + prices[i]);</span><br><span class=\"line\">    d_i11 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i11,  <span class=\"number\">0</span> - prices[i]);</span><br><span class=\"line\">    d_i20 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i20, d_i21 + prices[i]);</span><br><span class=\"line\">    d_i21 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i21, d_i10 - prices[i]);</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> d_i20</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/02/leetcode/%E4%B9%B0%E8%82%A1%E7%A5%A8/",
            "url": "http://example.com/2024/02/02/leetcode/%E4%B9%B0%E8%82%A1%E7%A5%A8/",
            "title": "买股票总结",
            "date_published": "2024-02-02T08:01:23.138Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paWkvc29sdXRpb25zLzEzMjY4MjQvY29tcGxldGUtZXhwbGFuYXRpb24tb2YtdGhlLWJ1eS1hbmQtc2VsbC1zdG9jay1wcm9ibGVtcy11c2luZy1kcC8=\">参考文章</span></p>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/01/leetcode/122.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II/index/",
            "url": "http://example.com/2024/02/01/leetcode/122.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II/index/",
            "title": "122.Best Time to Buy and Sell Stock II",
            "date_published": "2024-02-01T06:35:10.576Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paS8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>动态规划</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: prices.<span class=\"property\">length</span> + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>] + prices[i-<span class=\"number\">1</span>] - prices[i-<span class=\"number\">2</span>])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[prices.<span class=\"property\">length</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvMDEyMi4lRTQlQjklQjAlRTUlOEQlOTYlRTglODIlQTElRTclQTUlQTglRTclOUElODQlRTYlOUMlODAlRTQlQkQlQjMlRTYlOTclQjYlRTYlOUMlQkFJSS5tZA==\">看这里</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            rst += <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(prices[i] - prices[i - <span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxProfit);</span><br></pre></td></tr></table></figure>\n<p>动态规划解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    dp[i] = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len-<span class=\"number\">1</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/01/31/leetcode/121.Best%20Time%20to%20Buy%20and%20Sell%20Stock/index/",
            "url": "http://example.com/2024/01/31/leetcode/121.Best%20Time%20to%20Buy%20and%20Sell%20Stock/index/",
            "title": "121.Best Time to Buy and Sell Stock",
            "date_published": "2024-01-31T02:28:56.295Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找出所有的结果，取最大的，但是时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; prices.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst, prices[j] - prices[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvMDEyMS4lRTQlQjklQjAlRTUlOEQlOTYlRTglODIlQTElRTclQTUlQTglRTclOUElODQlRTYlOUMlODAlRTQlQkQlQjMlRTYlOTclQjYlRTYlOUMlQkEubWQ=\">看这里</span></p>\n<p>先找最小值，再找最大差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = prices[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(min, prices[i])</span><br><span class=\"line\">    rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst, prices[i]- min)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>动态规划解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dp = [];</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">    dp[i] = [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i-<span class=\"number\">1</span> === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"comment\">// Explanation：</span></span><br><span class=\"line\">        <span class=\"comment\">//   dp[i][0] </span></span><br><span class=\"line\">        <span class=\"comment\">// = max(dp[-1][0], dp[-1][1] + prices[i])</span></span><br><span class=\"line\">        <span class=\"comment\">// = max(0, -infinity + prices[i]) = 0</span></span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">        <span class=\"comment\">// Explanation：</span></span><br><span class=\"line\">        <span class=\"comment\">//   dp[i][1] </span></span><br><span class=\"line\">        <span class=\"comment\">// = max(dp[-1][1], dp[-1][0] - prices[i])</span></span><br><span class=\"line\">        <span class=\"comment\">// = max(-infinity, 0 - prices[i]) </span></span><br><span class=\"line\">        <span class=\"comment\">// = -prices[i]</span></span><br><span class=\"line\">      <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">    dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>],  -prices[i])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[n-<span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/01/30/leetcode/377.Combination%20Sum%20IV/index/",
            "url": "http://example.com/2024/01/30/leetcode/377.Combination%20Sum%20IV/index/",
            "title": "377.Combination Sum IV",
            "date_published": "2024-01-30T06:38:22.969Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWl2L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>完全背包的遍历顺序会影响结果是排列 (有顺序) 还是组合，当然只算最大 / 小值就无所谓遍历顺序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDUxOC4lRTklOUIlQjYlRTklOTIlQjElRTUlODUlOTElRTYlOEQlQTJJSS5odG1s\">参考</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum4 = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: target + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= target; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> coin <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt;= coin) &#123;</span><br><span class=\"line\">        dp[j] += dp[j - coin];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[target];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum4</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/30/leetcode/322.Coin%20Change/index/",
            "url": "http://example.com/2024/01/30/leetcode/322.Coin%20Change/index/",
            "title": "322.Coin Change",
            "date_published": "2024-01-30T02:19:50.642Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29pbi1jaGFuZ2UvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>完全背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">coins</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">amount</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> coinChange = <span class=\"keyword\">function</span>(<span class=\"params\">coins, amount</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (amount === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> max = <span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: amount + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(max);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> coin <span class=\"keyword\">of</span> coins) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = coin; j &lt;= amount; j++) &#123;</span><br><span class=\"line\">            dp[j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dp[j], dp[j - coin] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[amount] &gt;= max ? -<span class=\"number\">1</span> : dp[amount];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>], <span class=\"number\">11</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">2</span>], <span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>], <span class=\"number\">27</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">186</span>,<span class=\"number\">419</span>,<span class=\"number\">83</span>,<span class=\"number\">408</span>], <span class=\"number\">6249</span>));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "url": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "title": "474.Ones and Zeroes",
            "date_published": "2024-01-29T07:31:35.788Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvb25lcy1hbmQtemVyb2VzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>01 背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">strs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span> (<span class=\"params\">strs, m, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: m + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span></span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: n + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> str <span class=\"keyword\">of</span> strs) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _m = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _n = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> s <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (s === <span class=\"string\">&quot;0&quot;</span>) &#123;</span><br><span class=\"line\">              _m += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              _n += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = m; i &gt;= _m; i--) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n; j &gt;= _n; j--) &#123;</span><br><span class=\"line\">              dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-_m][j-_n] + <span class=\"number\">1</span>, dp[i][j]);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[m][n];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMaxForm</span>([<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;111001&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;0&quot;</span>], <span class=\"number\">5</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>速度很快！！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span>(<span class=\"params\">S, M, N</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>:M+<span class=\"number\">1</span>&#125;,<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(N+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; S.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = S[i], zeros = <span class=\"number\">0</span>, ones = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; str.<span class=\"property\">length</span>; j++)</span><br><span class=\"line\">            str.<span class=\"title function_\">charAt</span>(j) === <span class=\"string\">&quot;0&quot;</span> ? zeros++ : ones++</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = M; j &gt;= zeros; j--)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = N; k &gt;= ones; k--)</span><br><span class=\"line\">                dp[j][k] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][k], dp[j-zeros][k-ones] + <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[M][N]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/25/leetcode/139.Word%20Break/index/",
            "url": "http://example.com/2024/01/25/leetcode/139.Word%20Break/index/",
            "title": "139.Word Break",
            "date_published": "2024-01-25T07:34:19.707Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1icmVhay9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>用字符串匹配 <code>wordDict</code> ，并收集匹配到的 index，然后判断 index 能否从头连到尾</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordDict</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wordBreak = <span class=\"keyword\">function</span> (<span class=\"params\">s, wordDict</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w <span class=\"keyword\">of</span> wordDict) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> startArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> endArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = w.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (w[<span class=\"number\">0</span>] === s[i]) &#123;</span><br><span class=\"line\">          startArr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">          endArr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (endArr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> j = endArr.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j--)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> start = startArr[j];</span><br><span class=\"line\">          <span class=\"keyword\">let</span> end = endArr[j];</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (w[end - start] === s[i]) &#123;</span><br><span class=\"line\">            end += <span class=\"number\">1</span>;</span><br><span class=\"line\">            endArr[j] = end;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (end - start === len) &#123;</span><br><span class=\"line\">              arr.<span class=\"title function_\">push</span>([start, end]);</span><br><span class=\"line\">              startArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">              endArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            startArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            endArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!arr.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>] !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(s.<span class=\"property\">length</span> + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dp[item[<span class=\"number\">0</span>]]) &#123;</span><br><span class=\"line\">      dp[item[<span class=\"number\">1</span>]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[s.<span class=\"property\">length</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;cbca&quot;</span>, [<span class=\"string\">&quot;bc&quot;</span>,<span class=\"string\">&quot;ca&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;aaaaaaa&quot;</span>, [<span class=\"string\">&quot;aaaa&quot;</span>, <span class=\"string\">&quot;aaa&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;codedd&quot;</span>, [<span class=\"string\">&quot;edd&quot;</span>,<span class=\"string\">&quot;code&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;cars&quot;</span>, [<span class=\"string\">&quot;car&quot;</span>,<span class=\"string\">&quot;ca&quot;</span>,<span class=\"string\">&quot;rs&quot;</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>完全背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordDict</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wordBreak = <span class=\"keyword\">function</span> (<span class=\"params\">s, wordDict</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(s.<span class=\"property\">length</span> + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w <span class=\"keyword\">of</span> wordDict) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> len = w.<span class=\"property\">length</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &gt;= len &amp;&amp; s.<span class=\"title function_\">slice</span>(i-len, i) === w) &#123;</span><br><span class=\"line\">        dp[i] = dp[i] || dp[i-len];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[s.<span class=\"property\">length</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "title": "494.Target Sum",
            "date_published": "2024-01-24T08:54:17.023Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdGFyZ2V0LXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以将这组数看成两部分，P 和 N，其中 P 使用正号，N 使用负号，有以下推导:</span><br><span class=\"line\"></span><br><span class=\"line\">sum(P) - sum(N) = target</span><br><span class=\"line\">sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)</span><br><span class=\"line\">2 * sum(P) = target + sum(nums)</span><br></pre></td></tr></table></figure>\n<p>受上面公式启发，以及<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">题 416</span>，使用 <code>01背包</code> 解决问题</p>\n<p>这里 dp [i] 表示 nums 里面相加能产生的和的数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">S</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTargetSumWays = <span class=\"keyword\">function</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = (sum + S) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(W) !== W || W &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W+<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;</span><br><span class=\"line\">            dp[i] = dp[i] + dp[i - num]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">100</span>], -<span class=\"number\">200</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>DPS 解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWays</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">findTargetSumWay</span>(nums, <span class=\"number\">0</span>, S);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWay</span>(<span class=\"params\">nums, start, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (start === nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S === <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S + nums[start]) +</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S - nums[start])</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>], <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2024/01/24/leetcode/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "title": "背包问题总结",
            "date_published": "2024-01-24T03:12:05.268Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU4JTgzJThDJUU1JThDJTg1JUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwMDElRTglODMlOEMlRTUlOEMlODUtMS5tZA==\">参考文档</span></p>\n",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "title": "416.Partition Equal Subset Sum",
            "date_published": "2024-01-24T02:11:50.314Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找两组和相同的数，就是找是否有和是 <code>sum/2</code>  的组合</p>\n<p>通用方法，但是时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">calc</span>(nums, sum / <span class=\"number\">2</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calc</span>(<span class=\"params\">nums, rest</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">calc</span>(nums.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>), rest - nums[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>可以勉强在时间内通过，通过 dp 记录，可以减少一些判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalSum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">acc, item</span>) =&gt;</span> acc + item, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (totalSum % <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = totalSum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(target + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">idx, target</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[idx][target] !== -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> dp[idx][target];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = idx + <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, target - nums[idx]) || <span class=\"title function_\">dfs</span>(i, target)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[idx][target] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>, target);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>下面应该是最佳方案了</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU4JTgzJThDJUU1JThDJTg1JUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwMDElRTglODMlOEMlRTUlOEMlODUtMi5tZA==\">01 背包参考文章</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWR5bmFtaWMuaHRtbCMlRTUlODglOTIlRTUlODglODYlRTYlOTUlQjAlRTclQkIlODQlRTQlQjglQkElRTUlOTIlOEMlRTclOUIlQjglRTclQUQlODklRTclOUElODQlRTQlQjglQTQlRTklODMlQTglRTUlODglODY=\">答案来源</span></p>\n<p>从 dp 的结果来看，dp 是在不断的把 nums 各个数累加的和设为 true，其实到 dp [W]=true 就可以停止了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = sum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;                 <span class=\"comment\">// 0-1 背包一个物品只能用一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;   <span class=\"comment\">// 从后往前，先计算 dp[i] 再计算 dp[i-num]</span></span><br><span class=\"line\">            dp[i] = dp[i] || dp[i - num];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">canPartition</span>([<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,10])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true,  true, false]</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,8])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/23/leetcode/376.Wiggle%20Subsequence/index/",
            "url": "http://example.com/2024/01/23/leetcode/376.Wiggle%20Subsequence/index/",
            "title": "376.Wiggle Subsequence",
            "date_published": "2024-01-23T02:14:44.817Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd2lnZ2xlLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先找出差，0 不要，最后比较差的正负情况</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wiggleMaxLength = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> diffs = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] - nums[i-<span class=\"number\">1</span>] !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            diffs.<span class=\"title function_\">push</span>(nums[i] - nums[i-<span class=\"number\">1</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!diffs.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = diffs[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; diffs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (last &lt; <span class=\"number\">0</span> &amp;&amp; diffs[i] &gt; <span class=\"number\">0</span> || last &gt; <span class=\"number\">0</span> &amp;&amp; diffs[i] &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">            last = diffs[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wiggleMaxLength</span>([<span class=\"number\">1</span>,<span class=\"number\">17</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">5</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wiggleMaxLength</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">wiggleMaxLength</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums == <span class=\"literal\">null</span> || nums.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> up = <span class=\"number\">1</span>, down = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] &gt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            up = down + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[i] &lt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            down = up + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(up, down);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>DP</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wiggleMaxLength = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"comment\">// [[DEC, INC]]</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: len&#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] == nums[j]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] &gt; nums[j]) &#123;</span><br><span class=\"line\">                dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][<span class=\"number\">0</span>] + <span class=\"number\">1</span>, dp[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][<span class=\"number\">1</span>] + <span class=\"number\">1</span>, dp[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, ...dp[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// console.log(dp);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/22/leetcode/646.Maximum%20Length%20of%20Pair%20Chain/index/",
            "url": "http://example.com/2024/01/22/leetcode/646.Maximum%20Length%20of%20Pair%20Chain/index/",
            "title": "646.Maximum Length of Pair Chain",
            "date_published": "2024-01-22T08:42:45.806Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4aW11bS1sZW5ndGgtb2YtcGFpci1jaGFpbi9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>借用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1pbmNyZWFzaW5nLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\"> 300 题</span>的思路，先排序，再算数量，不过时间和空间都很差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">pairs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findLongestChain = <span class=\"keyword\">function</span>(<span class=\"params\">pairs</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!pairs.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pairs.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    pairs.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= pairs.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pairs[i][<span class=\"number\">0</span>] &gt; pairs[j][<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], dp[j] + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], max)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findLongestChain</span>([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">pairs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findLongestChain = <span class=\"keyword\">function</span>(<span class=\"params\">pairs</span>) &#123;</span><br><span class=\"line\">        pairs.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> prev = pairs[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; pairs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> cur = pairs[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cur[<span class=\"number\">0</span>] &gt; prev[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                res++;</span><br><span class=\"line\">                prev = cur;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/22/leetcode/300.Longest%20Increasing%20Subsequence/index/",
            "url": "http://example.com/2024/01/22/leetcode/300.Longest%20Increasing%20Subsequence/index/",
            "title": "300.Longest Increasing Subsequence",
            "date_published": "2024-01-22T02:23:05.826Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1pbmNyZWFzaW5nLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>把所有的情况都列出来，答案应该是对的，但是超时了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLIS = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!nums.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [[nums[<span class=\"number\">0</span>]]];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> has = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; dp.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &gt; dp[j][dp[j].<span class=\"property\">length</span> - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                dp.<span class=\"title function_\">push</span>([...dp[j], nums[i]])</span><br><span class=\"line\">                has = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, dp[j].<span class=\"property\">length</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!has) &#123;</span><br><span class=\"line\">            dp.<span class=\"title function_\">push</span>([nums[i]])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">101</span>,<span class=\"number\">18</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这位老哥说的好，在明确知道使用 dp 来解决后，dp [i] 其实都是有迹可循的</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here is an confusion fo mine when understanding what really the dp[i] is in the method, hope it might help the people who face the same problem like me.</span><br><span class=\"line\"></span><br><span class=\"line\">When you do DP/Max-Travese method, actually your steps is like this:</span><br><span class=\"line\">First, give a start, here &#x27;[1] * len(nums)&#x27;, becasue for each points in array, at least itself is a increasing subsequence;</span><br><span class=\"line\">Then, use DP/Max-Travese method to fill in the DP[] step by step, here comes what confused me.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**What really DP[i] represents? **</span></span><br><span class=\"line\">You might say, &#x27;&#x27;DP[i] represents LIS of the array[start to i]&#x27;&#x27;, but this kind of saying is only partly right, which is the key point of confusing, it needed to be added a constrain, together should be like this, &#x27;&#x27;DP[i] represents &#x27;fake LIS&#x27; which ended by array[i] of the array [start to i]&#x27;&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Now let me explain with an example array, [2,5,4,3,1], and the related DP array is dp[],</span><br><span class=\"line\">if you consider the &#x27;dp[i] represents LIS of the array[start to i]&#x27;, the related dp[] should be,[1,2,2,2,2];</span><br><span class=\"line\">if you consider the &#x27;dp[i] represents &#x27;fake LIS&#x27; which ended by array[i] of the array[start to i]&#x27;, dp[], should be [1,2,2,2,1], and only by this is realy what the code says.</span><br><span class=\"line\"></span><br><span class=\"line\">This &#x27;fake LIS&#x27; is really important, for it can help you to store an &#x27;fake LIS&#x27; ended by array[i],</span><br><span class=\"line\">so you can use it later to see if you can get a longer array after. But a &#x27;real LIS&#x27; can&#x27;t help store the result needed.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for your reading.</span><br></pre></td></tr></table></figure>\n<p>每次循环，但凡前面出现比 <code>nums[i]</code>  小的值， <code>dp[i]</code>  至少是 <code>dp[j]+1</code> ，然后是他们中的最大一个</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** [10,9,2,5,3,7,101,18]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1, 1,1,2,2,3,4  ,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  [0,1,0,3,2,3]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1,2,1,3,3,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  [0,7,8,9,1,2,3,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1,2,3,4,2,3,4,5]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLIS = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!nums.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &gt; nums[j]) &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], dp[j] + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], max)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">101</span>,<span class=\"number\">18</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/19/leetcode/91.Decode%20Ways/index/",
            "url": "http://example.com/2024/01/19/leetcode/91.Decode%20Ways/index/",
            "title": "91.Decode Ways",
            "date_published": "2024-01-19T06:53:06.787Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGVjb2RlLXdheXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>尝试了这么多例子才出，已经搞懵了</p>\n<p>这个题目本质是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2xpbWJpbmctc3RhaXJzL2Rlc2NyaXB0aW9uLw==\">爬楼梯</span>，但是要考虑 <code>0</code>  和 <code>&gt;26</code>  的情况</p>\n<ul>\n<li>当  <code>s[i] === 0</code>  的时候，如果和前一个字母组成的数  <code>&gt;26</code>  或者  <code>=0</code> ，整个结果就是 0 了；不然他们只能是一个整体，所以 <code>dp[i] = dp[i-2]</code></li>\n<li>当  <code>s[i-1] === 0</code>  时，他和前一个字母只能是一个整体，所以  <code>dp[i] = dp[i-1]</code></li>\n<li>其他的时候就符合爬楼梯， <code>dp[i] = dp[i-2] + dp[i-1]</code></li>\n<li>另外， <code>i=1</code>  的时候需要额外处理或者事先处理</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numDecodings = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!s) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = s.<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> str = s.<span class=\"title function_\">slice</span>(i-<span class=\"number\">1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (+s[i-<span class=\"number\">1</span>] &gt; <span class=\"number\">2</span> || +s[i-<span class=\"number\">1</span>] === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = i === <span class=\"number\">1</span> ? dp[i-<span class=\"number\">1</span>] : dp[i-<span class=\"number\">2</span>]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (s[i-<span class=\"number\">1</span>] === <span class=\"string\">&#x27;0&#x27;</span> || +str &gt; <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">            dp[i] = dp[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = i === <span class=\"number\">1</span> ? dp[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span> : dp[i-<span class=\"number\">2</span>] + dp[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;12&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;226&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;06&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;10&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;2101&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;18011&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;27&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;1123&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;1201234&quot;</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>判断更加的简化了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numDecodings = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!s || s[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> oneDigit = <span class=\"built_in\">parseInt</span>(s[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> twoDigits = <span class=\"built_in\">parseInt</span>(s.<span class=\"title function_\">substring</span>(i - <span class=\"number\">2</span>, i));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oneDigit !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            dp[i] += dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">10</span> &lt;= twoDigits &amp;&amp; twoDigits &lt;= <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">            dp[i] += dp[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/16/leetcode/279.Perfect%20Squares/index/",
            "url": "http://example.com/2024/01/16/leetcode/279.Perfect%20Squares/index/",
            "title": "279.Perfect Squares",
            "date_published": "2024-01-16T02:15:29.303Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVyZmVjdC1zcXVhcmVzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>挨个算出最小的组合，然后后面的组合可以由前面的组合拼起来，及 <code>dq[i] = Math.min(dq[i], dq[j] + dq[i - j]);</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1, 1, 1, dq[1]</span></span><br><span class=\"line\"><span class=\"comment\"> * 2, 1 + 1, 2, dq[1] + dq[1]</span></span><br><span class=\"line\"><span class=\"comment\"> * 3, 1 + 1 + 1, 3 dq[1] + dq[2]</span></span><br><span class=\"line\"><span class=\"comment\"> * 4, 4, 1</span></span><br><span class=\"line\"><span class=\"comment\"> * 5, 4 + 1, 2,</span></span><br><span class=\"line\"><span class=\"comment\"> * 6, 4 + 1 + 1, 3</span></span><br><span class=\"line\"><span class=\"comment\"> * 7, 4 + 1 + 1 + 1, 4</span></span><br><span class=\"line\"><span class=\"comment\"> * 8, 4 + 4, 2</span></span><br><span class=\"line\"><span class=\"comment\"> * 9, 9, 1</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">numSquares</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dq = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: n + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sqrt = <span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(sqrt) === sqrt) &#123;</span><br><span class=\"line\">      dq[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i / <span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">        dq[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dq[i], dq[j] + dq[i - j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dq[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>只考虑平方数（1）和  <code>dp[ i - square ]</code>  的组合就够了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numSquares = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Initialize with INT_MAX, except for dp[0] = 0 as base case</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>( n+<span class=\"number\">1</span> ).<span class=\"title function_\">fill</span>( <span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span> );</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">// Base case</span></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> root = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> square = root * root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for each square 1, 4, 9, 16, 25...</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>( square &lt;= n )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//  update dp value for number from square to n</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = square ; i &lt;= n ; i++ )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            dp[ i ] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>( dp[ i ], dp[ i - square ] + <span class=\"number\">1</span> );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// go to next square number</span></span><br><span class=\"line\">        root ++;</span><br><span class=\"line\">        square = root * root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];        </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>数学方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">numSquares</span> = (<span class=\"params\">n</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//returns if the number x is a valid square root ( can be represented as the square of an integer)</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">isSquare</span> = (<span class=\"params\">x</span>) =&gt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(x)) ** <span class=\"number\">2</span> === x;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isSquare</span>(n)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// that would be the fact that its equal to itself</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Legendre&#x27;s three square theorem: A natural number n can be represented as</span></span><br><span class=\"line\">  <span class=\"comment\">// the sum of AT MOST three squares of integers if and only if : n!= 4^x ( 8*m+7)</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (n % <span class=\"number\">4</span> === <span class=\"number\">0</span>) n /= <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"comment\">//Try contradicting Legendre</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n % <span class=\"number\">8</span> === <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Manually checking for result 2, because Legendre states  AT MOST 3,</span></span><br><span class=\"line\">  <span class=\"comment\">// so 2 is possible aswell</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= n; i++)</span><br><span class=\"line\">    <span class=\"comment\">// if x=n-i*i   and x is a valid square then OBVIOUSLY</span></span><br><span class=\"line\">    <span class=\"comment\">// n=i^2 +sqrt(x)^2  ,so n is a square of two numbers</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">isSquare</span>(n - i * i)) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Legendre applies</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/15/leetcode/343.Integer%20Break/index/",
            "url": "http://example.com/2024/01/15/leetcode/343.Integer%20Break/index/",
            "title": "343.Integer Break",
            "date_published": "2024-01-15T06:37:19.656Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaW50ZWdlci1icmVhay8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找数学规律，以 3 为基础是最大的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 2,1 × 1 = 1</span></span><br><span class=\"line\"><span class=\"comment\"> * 3,1 × 2 = 2</span></span><br><span class=\"line\"><span class=\"comment\"> * 4,2 × 2 = 4</span></span><br><span class=\"line\"><span class=\"comment\"> * 5,2 × 3 = 6 3的出现让乘积已经大于和了</span></span><br><span class=\"line\"><span class=\"comment\"> * 6,3 × 3 = 9</span></span><br><span class=\"line\"><span class=\"comment\"> * 7,3 × 2 × 2 = 12</span></span><br><span class=\"line\"><span class=\"comment\"> * 8,3 × 3 × 2 = 18</span></span><br><span class=\"line\"><span class=\"comment\"> * 9,3 × 3 × 3 = 27</span></span><br><span class=\"line\"><span class=\"comment\"> * 10,3 × 3 × 2 × 2 = 36</span></span><br><span class=\"line\"><span class=\"comment\"> * 11,3 × 3 × 2 × 3 = 54</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> integerBreak = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">4</span>) <span class=\"keyword\">return</span> n-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rst = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (sum &lt; n - <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        sum += <span class=\"number\">3</span>;</span><br><span class=\"line\">        rst *= <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    rst *= (n - sum);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>动态规划，把所有的组合都尝试一下，前几项的最大值已经被记录，不需要重复计算</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> integerBreak = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: n + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(j * dp[i - j], j * (i - j)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/413.Arithmetic%20Slices/index/",
            "url": "http://example.com/2024/01/11/leetcode/413.Arithmetic%20Slices/index/",
            "title": "413.Arithmetic Slices",
            "date_published": "2024-01-11T07:47:16.418Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYXJpdGhtZXRpYy1zbGljZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先计算每一项之间的差，然后根据差相同的个数计算数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(nums[i] - nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] !== arr[last]) &#123;</span><br><span class=\"line\">            sum += <span class=\"title function_\">getNum</span>(i - last + <span class=\"number\">1</span>)</span><br><span class=\"line\">            last = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sum += <span class=\"title function_\">getNum</span>(arr.<span class=\"property\">length</span> - last + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getNum</span>(<span class=\"params\">len</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let sum = 0;</span></span><br><span class=\"line\">    <span class=\"comment\">// for (let i = 0; i &lt; len - 2; i++) &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     sum += len - i - 2;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">// return sum;</span></span><br><span class=\"line\">    <span class=\"comment\">// 根据数学推到得出</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (len - <span class=\"number\">1</span>) * (len - <span class=\"number\">2</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>优化一下</p>\n<p>很奇怪，就一次循环，时间居然才超过 8.23%</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sameNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> diff = nums[<span class=\"number\">1</span>] - nums[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> di = nums[i] - nums[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (di !== diff) &#123;</span><br><span class=\"line\">            sum += <span class=\"title function_\">getNum</span>(sameNum + <span class=\"number\">1</span>);</span><br><span class=\"line\">            diff = di;</span><br><span class=\"line\">            sameNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            sameNum += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sum += <span class=\"title function_\">getNum</span>(sameNum + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getNum</span>(<span class=\"params\">len</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (len - <span class=\"number\">1</span>) * (len - <span class=\"number\">2</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>用 table 记住数量，每多一个相同的数，就会多前一个数量 + 1，是一个数学关系，把上面的 getNum 拆分到了每一步中计算了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> table = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>, n = nums.<span class=\"property\">length</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> diff1 = nums[i] - nums[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> diff2 = nums[i-<span class=\"number\">1</span>] - nums[i-<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (diff1 == diff2)&#123;</span><br><span class=\"line\">            table[i] = table[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">            ans += table[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/53.Maximum%20Subarray/index/",
            "url": "http://example.com/2024/01/11/leetcode/53.Maximum%20Subarray/index/",
            "title": "53.Maximum Subarray",
            "date_published": "2024-01-11T07:29:32.270Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4aW11bS1zdWJhcnJheS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>把从开始到结束的最大累加值记录下来，并找到最大的累加值就行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = nums[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> sum = nums[i - <span class=\"number\">1</span>] + nums[i];</span><br><span class=\"line\">        nums[i] = nums[i] &gt; sum ? nums[i] : sum</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, nums[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/303.Range%20Sum%20Query%20-%20Immutable/index/",
            "url": "http://example.com/2024/01/11/leetcode/303.Range%20Sum%20Query%20-%20Immutable/index/",
            "title": "303.Range Sum Query - Immutable",
            "date_published": "2024-01-11T07:13:23.935Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcmFuZ2Utc3VtLXF1ZXJ5LWltbXV0YWJsZS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">NumArray</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span> = nums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">left</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">right</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"title class_\">NumArray</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sumRange</span> = <span class=\"keyword\">function</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = left; i &lt;= right; i++) &#123;</span><br><span class=\"line\">        sum += arr[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a  = <span class=\"keyword\">new</span> <span class=\"title class_\">NumArray</span>([-<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,-<span class=\"number\">5</span>,<span class=\"number\">2</span>,-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a.<span class=\"title function_\">sumRange</span>(<span class=\"number\">0</span>,<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>本来以为这题目没什么好说的，没想到用空间换时间，先算好和，在多次执行的时候速度大大提高</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">NumArray</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = nums.<span class=\"property\">length</span>; <span class=\"comment\">//stores length of array</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span> = <span class=\"title class_\">Array</span>( nums.<span class=\"property\">length</span> ).<span class=\"title function_\">fill</span>( <span class=\"number\">0</span> );<span class=\"comment\">//empty array</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>];<span class=\"comment\">//first value of prefix sum is the same as that of the first element of nums</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> ; i++ )&#123;<span class=\"comment\">//traverse from left to right of array nums</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[i] = <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[i-<span class=\"number\">1</span>] + nums[i];</span><br><span class=\"line\">        <span class=\"comment\">/*stores sum of current value(nums) + previous sum value </span></span><br><span class=\"line\"><span class=\"comment\">        at the index before it(prefixsum)*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; left </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">right</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"title class_\">NumArray</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sumRange</span> = <span class=\"keyword\">function</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( left == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">        <span class=\"comment\">/* if left index isnt mentioned then we return the </span></span><br><span class=\"line\"><span class=\"comment\">        sum up till the right index from the prefix sum array */</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[right];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//if the left index is given, then return the sum up </span></span><br><span class=\"line\">        <span class=\"comment\">//till the right index minus the value of prefix sum at </span></span><br><span class=\"line\">        <span class=\"comment\">//the index before the given left index i.e. value </span></span><br><span class=\"line\">        <span class=\"comment\">//at the (left - 1) index</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[right] - <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[left-<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/62.Unique%20Paths/index/",
            "url": "http://example.com/2024/01/10/leetcode/62.Unique%20Paths/index/",
            "title": "62.Unique Paths",
            "date_published": "2024-01-10T07:13:41.644Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdW5pcXVlLXBhdGhzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>次数  <code>arr[i][j]</code>  =  <code>arr[i][j - 1]</code>  +  <code>arr[i - 1][j]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!arr[i]) &#123;</span><br><span class=\"line\">                arr[i] = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; j &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = arr[i][j - <span class=\"number\">1</span>] + arr[i - <span class=\"number\">1</span>][j]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>是数学！！！</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>∗</mo><mi>k</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\nC(n,k)=\\frac {n!}{(n-k)!*k!}\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.45005399999999995em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.950054em;\"><span style=\"top:-3.0699460000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.45005399999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>机器人总共移动的次数 S=m+n-2，向下移动的次数 D=m-1，那么问题可以看成从 S 从取出 D 个位置的组合数量，这个问题的解为 C (S, D)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> S = m + n - <span class=\"number\">2</span>;  <span class=\"comment\">// 总共的移动次数</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> D = m - <span class=\"number\">1</span>;      <span class=\"comment\">// 向下的移动次数</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *  C(8,3) = (6*7*8)/(1*2*3)</span></span><br><span class=\"line\"><span class=\"comment\">     *  C(6,4) = (3*4*5*6)/(1*2*3*4)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= D; i++) &#123;</span><br><span class=\"line\">        ret = ret * (S - D + i) / i;</span><br><span class=\"line\">        <span class=\"comment\">// 或</span></span><br><span class=\"line\">        <span class=\"comment\">// rst = rst * (S - i + 1) / i</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/64.Minimum%20Path%20Sum/index/",
            "url": "http://example.com/2024/01/10/leetcode/64.Minimum%20Path%20Sum/index/",
            "title": "64.Minimum Path Sum",
            "date_published": "2024-01-10T06:55:17.757Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS1wYXRoLXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>最短路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minPathSum = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> m = grid.<span class=\"property\">length</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span> &amp;&amp; j != <span class=\"number\">0</span>) grid[i][j] += grid[i][j-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i != <span class=\"number\">0</span> &amp;&amp; j == <span class=\"number\">0</span>) grid[i][j] += grid[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; j != <span class=\"number\">0</span>) grid[i][j] += <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(grid[i-<span class=\"number\">1</span>][j], grid[i][j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> grid[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/213.House%20Robber%20II/index/",
            "url": "http://example.com/2024/01/10/leetcode/213.House%20Robber%20II/index/",
            "title": "213.House Robber II",
            "date_published": "2024-01-10T06:46:33.484Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaG91c2Utcm9iYmVyLWlpLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>环形 rob, 有两种可能，0 肯定抢或不强，分别得出最大值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst1 = [nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">    rst1[<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst1[<span class=\"number\">0</span>], rst1[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;i++) &#123;</span><br><span class=\"line\">        rst1[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst1[i - <span class=\"number\">1</span>], rst1[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst2 = [<span class=\"number\">0</span> , nums[<span class=\"number\">1</span>], nums[<span class=\"number\">2</span>]];</span><br><span class=\"line\">    rst2[<span class=\"number\">2</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[<span class=\"number\">1</span>], rst2[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">3</span>; i &lt; nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        rst2[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[i - <span class=\"number\">1</span>], rst2[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[rst2.<span class=\"property\">length</span> - <span class=\"number\">1</span>], rst1[rst1.<span class=\"property\">length</span> - <span class=\"number\">1</span>])</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>其实也没啥，把相似功能提取出去了，改为用变量计算累加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> len = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &lt; <span class=\"number\">4</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"title function_\">robberHelper</span>(nums, <span class=\"number\">0</span>, len-<span class=\"number\">1</span>), <span class=\"title function_\">robberHelper</span>(nums, <span class=\"number\">1</span>, len));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">robberHelper</span>(<span class=\"params\">nums, start, end</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prev=<span class=\"number\">0</span>, beforePrev=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=start;i&lt;end;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = prev;</span><br><span class=\"line\">        prev = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[i] + beforePrev, prev);</span><br><span class=\"line\">        beforePrev= tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/09/leetcode/198.House%20Robber/index/",
            "url": "http://example.com/2024/01/09/leetcode/198.House%20Robber/index/",
            "title": "198.House Robber",
            "date_published": "2024-01-09T06:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaG91c2Utcm9iYmVyL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>从第三个开始，最大总和 S [n] = max (S [n-1], S [n-2] + nums [n]), 在下面把每一次的最大总和记录到 nums 里面了</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\"></span><br><span class=\"line\">    nums[<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        nums[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[i - <span class=\"number\">1</span>], nums[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/09/leetcode/70.Climbing%20Stairs/index/",
            "url": "http://example.com/2024/01/09/leetcode/70.Climbing%20Stairs/index/",
            "title": "70.Climbing Stairs",
            "date_published": "2024-01-09T02:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2xpbWJpbmctc3RhaXJzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>斐波那契数列</p>\n<p>学习算法思想（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWR5bmFtaWMuaHRtbA==\">动态规划算法</span>）的例题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dq[n] = dq[n - <span class=\"number\">1</span>] + dq[n- <span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用数组</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; i &lt; n; i++) &#123;</span><br><span class=\"line\">        arr[i] = arr[i-<span class=\"number\">1</span>] + arr[i-<span class=\"number\">2</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[n-<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 前后相加</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> step1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> step2 = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; n;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> sum = step1 + step2;</span><br><span class=\"line\">        step1 = step2;</span><br><span class=\"line\">        step2 = sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> step2</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/31.Next%20Permutation/index/",
            "url": "http://example.com/2024/01/08/leetcode/31.Next%20Permutation/index/",
            "title": "31.Next Permutation",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGl2aWRlLXR3by1pbnRlZ2Vycy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<p>[2,4,5,1,3] -&gt; [2,4,5,3,1] -&gt; [2,5,1,3,4] -&gt; [2,5,1,4,3] -&gt; [2,5,3,1,4]</p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>组合的整体顺序是以从小到大为开始的组合顺序，所以先排序。<br>\n已排序为基础，找到当前那个的位置，然后位置的下一个就是结果</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sortNums = [...nums].<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title function_\">judgeNums</span>(sortNums, nums, <span class=\"number\">0</span>, obj)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj.<span class=\"property\">isEnd</span>) &#123;</span><br><span class=\"line\">        nums.<span class=\"title function_\">reverse</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">judgeNums</span> (sortNums, nums, times, obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> same = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; sortNums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> num = sortNums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (same[num]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === sortNums.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj[times] === <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">                obj[times] = <span class=\"string\">&#x27;end&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            same[num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[times] === num) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> restNums = [...sortNums]</span><br><span class=\"line\">            restNums.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (restNums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">judgeNums</span>(restNums, nums, times + <span class=\"number\">1</span>, obj)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === sortNums.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                obj[times] = <span class=\"string\">&#x27;end&#x27;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                obj[times] = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.<span class=\"property\">isEnd</span> &amp;&amp; obj[times + <span class=\"number\">1</span>] === <span class=\"string\">&#x27;end&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj[times] === <span class=\"string\">&#x27;number&#x27;</span> &amp;&amp; i &gt; obj[times]) &#123;</span><br><span class=\"line\">            nums[times] = num;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> restNums = [...sortNums]</span><br><span class=\"line\">            restNums.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">            nums.<span class=\"title function_\">splice</span>(times + <span class=\"number\">1</span>, restNums.<span class=\"property\">length</span>, ...restNums)</span><br><span class=\"line\">            obj.<span class=\"property\">isEnd</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.<span class=\"property\">isEnd</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>总结变换规律，找到最后比前一个数字小的数 a，找到最后比 a 大的数字 b,<br>\n 把 a,b 换位置，再把 a（换位前位置）后所有的数 reverse，就是结果（我总结不出，有时候算法要求的真不是逻辑，而是数学或规律）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ind1=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ind2=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// step 1 find breaking point</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=nums.<span class=\"property\">length</span>-<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]&lt;nums[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            ind1=i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// if there is no breaking  point</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ind1 === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">reverse</span>(nums,<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// step 2 find next greater element and swap with ind2</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;nums[ind1])&#123;</span><br><span class=\"line\">                ind2=i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(nums,ind1,ind2);</span><br><span class=\"line\">        <span class=\"comment\">// step 3 reverse the rest right half</span></span><br><span class=\"line\">        <span class=\"title function_\">reverse</span>(nums,ind1+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">nums,i,j</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp=nums[i];</span><br><span class=\"line\">    nums[i]=nums[j];</span><br><span class=\"line\">    nums[j]=temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">nums,start</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i=start;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j=nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;j)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(nums,i,j);</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/32.Longest%20Valid%20Parentheses/index/",
            "url": "http://example.com/2024/01/08/leetcode/32.Longest%20Valid%20Parentheses/index/",
            "title": "32.Longest Valid Parentheses",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC12YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>遍历字符串，记住左括号的序号，如果有右括号，给这两个括号的位置标记 1，然后去到这个左括号，<br>\n这样所有能互相匹配的括号都标记了 1，最后就数最长的连续 1 是多少了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestValidParentheses = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: s.<span class=\"property\">length</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> left = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> z = s[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (z === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">            left.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> last = s[left[left.<span class=\"property\">length</span> - <span class=\"number\">1</span>]];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (last === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> index = left.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">                arr[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                arr[index] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            sum += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(sum, max)</span><br><span class=\"line\">            sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(sum, max)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/29.Divide%20Two%20Integers/index/",
            "url": "http://example.com/2024/01/08/leetcode/29.Divide%20Two%20Integers/index/",
            "title": "29.Divide Two Integers",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGl2aWRlLXR3by1pbnRlZ2Vycy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>使用加法累加，模拟乘法<br>\n未通过，时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">dividend</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">divisor</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> divide = <span class=\"keyword\">function</span>(<span class=\"params\">dividend, divisor</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbol = dividend &gt; <span class=\"number\">0</span> &amp;&amp; divisor &lt; <span class=\"number\">0</span> || dividend &lt; <span class=\"number\">0</span> &amp;&amp; divisor &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;-&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    dividend = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(dividend)</span><br><span class=\"line\">    divisor = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(divisor);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>, <span class=\"number\">31</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (divisor === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (symbol === <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; dividend &gt; max) &#123;</span><br><span class=\"line\">           dividend = max;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> +<span class=\"string\">`<span class=\"subst\">$&#123;symbol&#125;</span><span class=\"subst\">$&#123;dividend&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = divisor;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (dividend - sum &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        sum += divisor;</span><br><span class=\"line\">        time++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> +<span class=\"string\">`<span class=\"subst\">$&#123;symbol&#125;</span><span class=\"subst\">$&#123;time&#125;</span>`</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>使用位运算进行除法（知识面未覆盖）</p>\n<p>位运算一次只能找以 2 为底的除数，先找到最大的以 2 为底的除数，标记到 ans，<br>\n然后把这部分数值减去，在剩下的数中，再找到最大的以 2 为底的除数，以此类推，直到剩下的数小于被除数，ans 的累积结果就是商</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">dividend</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">divisor</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> divide = <span class=\"keyword\">function</span>(<span class=\"params\">A, B</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A === -<span class=\"number\">2147483648</span> &amp;&amp; B === -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">2147483647</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, sign = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A &lt; <span class=\"number\">0</span>) A = -A, sign = -sign</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B &lt; <span class=\"number\">0</span>) B = -B, sign = -sign</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A === B) <span class=\"keyword\">return</span> sign</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, val = B; A &gt;= B; i = <span class=\"number\">0</span>, val = B) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (val &gt; <span class=\"number\">0</span> &amp;&amp; val &lt;= A) val = B &lt;&lt; ++i</span><br><span class=\"line\">        A -= B &lt;&lt; i - <span class=\"number\">1</span>, ans += <span class=\"number\">1</span> &lt;&lt; i - <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sign &lt; <span class=\"number\">0</span> ? -ans : ans</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/07/leetcode/241.Different%20Ways%20to%20Add%20Parentheses/index/",
            "url": "http://example.com/2024/01/07/leetcode/241.Different%20Ways%20to%20Add%20Parentheses/index/",
            "title": "241.Different Ways to Add Parentheses",
            "date_published": "2024-01-07T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGlmZmVyZW50LXdheXMtdG8tYWRkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案1\"><a class=\"markdownIt-Anchor\" href=\"#我的答案1\">#</a> 我的答案 1</h3>\n<p>按照题目思路，先遍历出搜索算式，再挨个计算算式结果<br>\n分两步走，性能太差了</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">expression</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> diffWaysToCompute = <span class=\"keyword\">function</span>(<span class=\"params\">expression</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = expression.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/([\\+\\-\\*])/g</span>, <span class=\"string\">&quot;|$1|&quot;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [+arr[<span class=\"number\">0</span>]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rsts = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sums = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> same = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title function_\">pieceExp</span>(arr, rsts)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rsts);</span><br><span class=\"line\">    rsts.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!same[item]) &#123;</span><br><span class=\"line\">            same[item] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            sums.<span class=\"title function_\">push</span>(<span class=\"title function_\">calcValue</span>(item))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sums);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 会有重复结果</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">pieceExp</span>(<span class=\"params\">arr, rsts</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dealArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; arr.<span class=\"property\">length</span>; index++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> item = arr[index];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ([<span class=\"string\">&#x27;*&#x27;</span>, <span class=\"string\">&#x27;+&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>].<span class=\"title function_\">includes</span>(item)) &#123;</span><br><span class=\"line\">            dealArr.<span class=\"title function_\">push</span>([</span><br><span class=\"line\">                ...arr.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, index - <span class=\"number\">1</span>),</span><br><span class=\"line\">                <span class=\"string\">`(<span class=\"subst\">$&#123;arr[index - <span class=\"number\">1</span>]&#125;</span><span class=\"subst\">$&#123;item&#125;</span><span class=\"subst\">$&#123;arr[index + <span class=\"number\">1</span>]&#125;</span>)`</span>,</span><br><span class=\"line\">                ...arr.<span class=\"title function_\">slice</span>(index + <span class=\"number\">2</span>),</span><br><span class=\"line\">            ]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dealArr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            rsts.<span class=\"title function_\">push</span>(item[<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">pieceExp</span>(item, rsts)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calcValue</span> (str) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/([\\+\\-\\*])/g</span>, <span class=\"string\">&quot;|$1|&quot;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\()/g</span>, <span class=\"string\">&#x27;$1|&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\))/g</span>, <span class=\"string\">&#x27;|$1&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> nums = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> scopes = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// nums.push(&#x27;&#x27;);</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i] === <span class=\"string\">&#x27;)&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scopes.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> expression = scopes.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">const</span> right = nums.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">const</span> left = nums.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;+&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left + right)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left - right)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;*&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left * right)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                sum = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ([<span class=\"string\">&#x27;*&#x27;</span>, <span class=\"string\">&#x27;+&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>].<span class=\"title function_\">includes</span>(arr[i])) &#123;</span><br><span class=\"line\">            scopes.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            nums.<span class=\"title function_\">push</span>(+arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">diffWaysToCompute</span>(<span class=\"string\">&quot;21-12-1&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>利用递归遍历，以加减乘为中间分隔成左算式和右算式，<br>\n返回最小算式的结果，再循环组合<br>\n (哦，原来这是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWRpdmlkZS1hbmQtY29ucXVlci5odG1s\">分治算法</span>)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">input</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> diffWaysToCompute = <span class=\"keyword\">function</span>(<span class=\"params\">input</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; input.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(input[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> left = <span class=\"title function_\">diffWaysToCompute</span>(input.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i));</span><br><span class=\"line\">            <span class=\"keyword\">let</span> right = <span class=\"title function_\">diffWaysToCompute</span>(input.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>));</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> l <span class=\"keyword\">of</span> left) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r <span class=\"keyword\">of</span> right) &#123;</span><br><span class=\"line\">                    l = <span class=\"title class_\">Number</span>(l);</span><br><span class=\"line\">                    r = <span class=\"title class_\">Number</span>(r);</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (input[i]==<span class=\"string\">&#x27;+&#x27;</span>) &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l + r);       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (input[i]==<span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l - r);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l * r);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">length</span>!=<span class=\"number\">0</span>) <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [input];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "分治算法"
            ]
        },
        {
            "id": "http://example.com/2024/01/07/leetcode/6.Zigzag%20Conversion/index/",
            "url": "http://example.com/2024/01/07/leetcode/6.Zigzag%20Conversion/index/",
            "title": "6.Zigzag Conversion",
            "date_published": "2024-01-07T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvemlnemFnLWNvbnZlcnNpb24vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案1\"><a class=\"markdownIt-Anchor\" href=\"#我的答案1\">#</a> 我的答案 1</h3>\n<p>以两列为一组，塞数字到矩阵</p>\n<p><img data-src=\"/my-notes/assets/6.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">numRows</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> convert = <span class=\"keyword\">function</span>(<span class=\"params\">s, numRows</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: numRows&#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> []);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ii = i % (numRows + numRows - <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = numRows - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> index = ii &gt; max ? max - (ii - max) : ii;</span><br><span class=\"line\">        arr[index].<span class=\"title function_\">push</span>(s[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>),<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">convert</span>(<span class=\"string\">&#x27;PAYPALISHIRING&#x27;</span>, <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        }
    ]
}