{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"leetcode\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/06/06/leetcode/209.Minimum%20Size%20Subarray%20Sum/index/",
            "url": "http://example.com/2024/06/06/leetcode/209.Minimum%20Size%20Subarray%20Sum/index/",
            "title": "209.Minimum Size Subarray Sum",
            "date_published": "2024-06-06T06:09:03.490Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS1zaXplLXN1YmFycmF5LXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>在时间上勉强通过</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minSubArrayLen = <span class=\"keyword\">function</span>(<span class=\"params\">target, nums</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rst = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &lt; nums.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">                sum += nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum &gt;= target) &#123;</span><br><span class=\"line\">                    rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(rst, j - i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sum &lt; target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst === <span class=\"title class_\">Infinity</span> ? <span class=\"number\">0</span> : rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minSubArrayLen</span>(<span class=\"number\">7</span>, [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>滑动窗口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minSubArrayLen = <span class=\"keyword\">function</span>(<span class=\"params\">target, nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rst = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt; nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        sum += nums[j];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sum &gt;= target) &#123;</span><br><span class=\"line\">            rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(rst, j - i + <span class=\"number\">1</span>);</span><br><span class=\"line\">            sum -= nums[i];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst === <span class=\"title class_\">Infinity</span> ? <span class=\"number\">0</span> : rst;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "数组"
            ]
        },
        {
            "id": "http://example.com/2024/06/06/leetcode/977.Squares%20of%20a%20Sorted%20Array/index/",
            "url": "http://example.com/2024/06/06/leetcode/977.Squares%20of%20a%20Sorted%20Array/index/",
            "title": "704.Binary Search",
            "date_published": "2024-06-06T02:33:43.958Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3F1YXJlcy1vZi1hLXNvcnRlZC1hcnJheS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>原数组本来就是排好序的，但是有负数，所以平方后，最大值会分布在两端</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sortedSquares = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = n - <span class=\"number\">1</span>, k = n - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left = nums[i] * nums[i],</span><br><span class=\"line\">            right = nums[j] * nums[j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; right) &#123;</span><br><span class=\"line\">            res[k--] = right;</span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res[k--] = left;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "数组"
            ]
        },
        {
            "id": "http://example.com/2024/06/05/leetcode/704.Binary%20Search/index/",
            "url": "http://example.com/2024/06/05/leetcode/704.Binary%20Search/index/",
            "title": "704.Binary Search",
            "date_published": "2024-06-05T08:56:43.991Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmluYXJ5LXNlYXJjaC9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"ai的答案\"><a class=\"markdownIt-Anchor\" href=\"#ai的答案\">#</a> AI 的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> search = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> l = <span class=\"number\">0</span>, r = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (l &lt;= r) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((l + r) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] === target) <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &lt; target) l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> r = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">search</span>([-<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>], <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "数组",
                "二分查找"
            ]
        },
        {
            "id": "http://example.com/2024/06/04/leetcode/51.N-Queens/index/",
            "url": "http://example.com/2024/06/04/leetcode/51.N-Queens/index/",
            "title": "51.N-Queens",
            "date_published": "2024-06-04T09:24:59.085Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbi1xdWVlbnMv\">地址</span></p>\n<h3 id=\"ai的答案\"><a class=\"markdownIt-Anchor\" href=\"#ai的答案\">#</a> AI 的答案</h3>\n<p>对每一个位置都进行判断是否可下，当行走完的时候，输出结果<br>\n这里判断条件可以优化，从上往下只要判断点位上方就够了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveNQueens = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> board = <span class=\"title class_\">Array</span>(n)</span><br><span class=\"line\">        .<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"string\">&#x27;.&#x27;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(board, <span class=\"number\">0</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">board, row, res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (row === board.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(board.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isQueenSafe</span>(board, row, i)) &#123;</span><br><span class=\"line\">            board[row][i] = <span class=\"string\">&#x27;Q&#x27;</span>;</span><br><span class=\"line\">            <span class=\"title function_\">backtrack</span>(board, row + <span class=\"number\">1</span>, res);</span><br><span class=\"line\">            board[row][i] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isQueenSafe</span>(<span class=\"params\">board, row, col</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[row][i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i][col] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row - i &gt;= <span class=\"number\">0</span> &amp;&amp; col - i &gt;= <span class=\"number\">0</span> &amp;&amp; board[row - i][col - i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row - i &gt;= <span class=\"number\">0</span> &amp;&amp; col + i &lt; board.<span class=\"property\">length</span> &amp;&amp; board[row - i][col + i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row + i &lt; board.<span class=\"property\">length</span> &amp;&amp; col - i &gt;= <span class=\"number\">0</span> &amp;&amp; board[row + i][col - i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row + i &lt; board.<span class=\"property\">length</span> &amp;&amp; col + i &lt; board.<span class=\"property\">length</span> &amp;&amp; board[row + i][col + i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">solveNQueens</span>(<span class=\"number\">4</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>因 Queen 是横竖斜线不能共线，所以每一行只有一个 Q (board 只需要一维数组即可)，每一列的位置不能重复 (bc === c)，不在左下斜线 (bc === c + r - br)，不在右下斜线 (bc === c - r + br)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> solveNQueens = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(res, n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">res, n, board = [], r = <span class=\"number\">0</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r === n) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(board.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">c</span> =&gt;</span> <span class=\"string\">&#x27;.&#x27;</span>.<span class=\"title function_\">repeat</span>(c) + <span class=\"string\">&#x27;Q&#x27;</span> + <span class=\"string\">&#x27;.&#x27;</span>.<span class=\"title function_\">repeat</span>(n - c - <span class=\"number\">1</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; n; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!board.<span class=\"title function_\">some</span>(<span class=\"function\">(<span class=\"params\">bc, br</span>) =&gt;</span> bc === c || bc === c + r - br || bc === c - r + br)) &#123;</span><br><span class=\"line\">            board.<span class=\"title function_\">push</span>(c);</span><br><span class=\"line\">            <span class=\"title function_\">backtrack</span>(res, n, board, r + <span class=\"number\">1</span>);</span><br><span class=\"line\">            board.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/28/leetcode/37.Sudoku%20Solver/index/",
            "url": "http://example.com/2024/05/28/leetcode/37.Sudoku%20Solver/index/",
            "title": "37.Sudoku Solver",
            "date_published": "2024-05-28T03:16:10.618Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vkb2t1LXNvbHZlci9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>记录每一行、每一列、每一个块中数字是否出现过，然后遍历空格，尝试填入 1-9，如果填入的数字合法，则递归调用 dfs，如果 dfs 返回 true，则说明填入的数字合法，继续填下一个空格，如果 dfs 返回 false，则说明填入的数字不合法，则尝试下一个数字，如果尝试完 9 个数字都失败，则说明整个数独不合法，返回 false。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify board in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveSudoku = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> row = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> col = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> block = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">3</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> empty = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][j] !== <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> num = board[i][j] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                row[i][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                col[j][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                empty.<span class=\"title function_\">push</span>([i, j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index === empty.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> [i, j] = empty[index];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> rest = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">9</span>; k++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!row[i][k] &amp;&amp; !col[j][k] &amp;&amp; !block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][k]) &#123;</span><br><span class=\"line\">                rest.<span class=\"title function_\">push</span>(k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rest.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> rest) &#123;</span><br><span class=\"line\">            board[i][j] = num + <span class=\"number\">1</span> + <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">            row[i][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            col[j][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(index + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            board[i][j] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            row[i][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            col[j][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> board;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">solveSudoku</span>([</span><br><span class=\"line\">        [<span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>],</span><br><span class=\"line\">    ])</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>更省空间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">solveSudoku</span>(<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> n = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"title function_\">dfs</span>(board, n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">board, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for every cell in the sudoku</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row = <span class=\"number\">0</span>; row &lt; n; row++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> col = <span class=\"number\">0</span>; col &lt; n; col++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// if its empty</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (board[row][col] !== <span class=\"string\">&#x27;.&#x27;</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      <span class=\"comment\">// try every number 1-9</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> c = i.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">        <span class=\"comment\">// if that number is valid</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isValid</span>(board, row, col, n, c)) &#123;</span><br><span class=\"line\">          board[row][col] = c;</span><br><span class=\"line\">          <span class=\"comment\">// continue search for that board, ret true if solution is reached</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(board, n)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// solution wasnt found for any num 1-9 here, must be a dead end...</span></span><br><span class=\"line\">      <span class=\"comment\">// set the current cell back to empty</span></span><br><span class=\"line\">      board[row][col] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">      <span class=\"comment\">// ret false to signal dead end </span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// all cells filled, must be a solution</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isValid</span>(<span class=\"params\">board, row, col, n, c</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blockRow = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(row / <span class=\"number\">3</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blockCol = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(col / <span class=\"number\">3</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (board[row][i] === c || board[i][col] === c) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> curRow = blockRow +  <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> curCol = blockCol +  <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i % <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (board[curRow][curCol] === c) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/24/leetcode/131.Palindrome%20Partitioning/index/",
            "url": "http://example.com/2024/05/24/leetcode/131.Palindrome%20Partitioning/index/",
            "title": "131.Palindrome Partitioning",
            "date_published": "2024-05-24T06:25:25.927Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFsaW5kcm9tZS1wYXJ0aXRpb25pbmcv\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>考虑所有可能的结果，如果是回文，就一步步切割下去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> partition = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> memo = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">s, path</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                rst.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> sub = s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">                memo[sub] = memo[sub] !== <span class=\"literal\">undefined</span> ? memo[sub] : <span class=\"title function_\">isPalindrome</span>(sub);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (memo[sub]) &#123;</span><br><span class=\"line\">                    memo[sub] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"title function_\">dfs</span>(s.<span class=\"title function_\">substring</span>(i), path.<span class=\"title function_\">concat</span>(sub));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(s, [])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isPalindrome</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = s.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] !== s[j]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">partition</span>(<span class=\"string\">&#x27;aab&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> partition = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = s.<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">isPalindrome</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> right = str.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[left] !== str[right]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">            right--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getAllPartitions</span>(<span class=\"params\">curInd, curList</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> isLastPalindrome = <span class=\"title function_\">isPalindrome</span>(curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (curInd === n) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每一个组合都是回文</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isLastPalindrome) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>([...curList]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 当前是回文，curInd+1往下走</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isLastPalindrome) &#123;</span><br><span class=\"line\">            curList.<span class=\"title function_\">push</span>(s[curInd]);</span><br><span class=\"line\">            <span class=\"title function_\">getAllPartitions</span>(curInd + <span class=\"number\">1</span>, curList);</span><br><span class=\"line\">            curList.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 回朔法拼接所有的组合</span></span><br><span class=\"line\">        curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>] += s[curInd];</span><br><span class=\"line\">        <span class=\"title function_\">getAllPartitions</span>(curInd + <span class=\"number\">1</span>, curList);</span><br><span class=\"line\">        curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>] = curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">getAllPartitions</span>(<span class=\"number\">1</span>, [s[<span class=\"number\">0</span>]]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/24/leetcode/90.Subsets%20II/index/",
            "url": "http://example.com/2024/05/24/leetcode/90.Subsets%20II/index/",
            "title": "90.Subsets II",
            "date_published": "2024-05-24T02:42:39.719Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vic2V0cy1paS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> subsetsWithDup = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    rst.<span class=\"title function_\">push</span>([]);</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b)</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(nums, <span class=\"number\">0</span>, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">nums, start, path, res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; start &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        path.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(path.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"title function_\">backtrack</span>(nums, i + <span class=\"number\">1</span>, path, res);</span><br><span class=\"line\">        path.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">subsetsWithDup</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> subsetsWithDup = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ans = [];</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">index, t</span>) &#123;</span><br><span class=\"line\">        ans.<span class=\"title function_\">push</span>([...t]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = index; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i !== index &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            t.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">            <span class=\"title function_\">f</span>(i + <span class=\"number\">1</span>, t);</span><br><span class=\"line\">            t.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">f</span>(<span class=\"number\">0</span>, []);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/216.Combination%20Sum%20III/index/",
            "url": "http://example.com/2024/05/11/leetcode/216.Combination%20Sum%20III/index/",
            "title": "216.Combination Sum III",
            "date_published": "2024-05-11T09:28:22.014Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWlpaS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>根据题 39 的解法，稍作修改即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum3 = <span class=\"keyword\">function</span>(<span class=\"params\">k, n</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(k, <span class=\"number\">1</span>, n, [], rst);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">restNum, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (restNum === <span class=\"number\">0</span> &amp;&amp; target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span> || restNum &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(i)</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(restNum - <span class=\"number\">1</span>, i + <span class=\"number\">1</span>, target - i, res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum3</span>(<span class=\"number\">4</span>,<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum3 = <span class=\"keyword\">function</span> (<span class=\"params\">k, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">backtracking</span> = (<span class=\"params\">currentDigit, sum, elements</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentDigit &gt; <span class=\"number\">9</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum &gt; n) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (elements.<span class=\"property\">length</span> &gt; k) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum === n &amp;&amp; elements.<span class=\"property\">length</span> === k) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">push</span>(elements);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = currentDigit + <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">backtracking</span>(i, sum + i, [...elements, i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">backtracking</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, [])</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/40.Combination%20Sum%20II/index/",
            "url": "http://example.com/2024/05/11/leetcode/40.Combination%20Sum%20II/index/",
            "title": "40.combination-sum II",
            "date_published": "2024-05-11T09:26:27.924Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWlpLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>根据上一题的解法，只需要对 candidates 进行排序，然后去重即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">candidates</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum2 = <span class=\"keyword\">function</span>(<span class=\"params\">candidates, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    candidates.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b)</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(candidates, <span class=\"number\">0</span>, target, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">candidates, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; candidates.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; start &amp;&amp; candidates[i] === candidates[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(candidates[i])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(candidates, i + <span class=\"number\">1</span>, target - candidates[i], res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum2</span>([<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>], <span class=\"number\">8</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/39.Combination%20Sum/index/",
            "url": "http://example.com/2024/05/11/leetcode/39.Combination%20Sum/index/",
            "title": "39.combination-sum",
            "date_published": "2024-05-11T08:45:50.778Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>按顺序递归，但数字可以重复，如果每次都全部循环的话，会出现顺序不同但结果相同的情况，所以需要 start 来避免结果重复</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">candidates</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum = <span class=\"keyword\">function</span>(<span class=\"params\">candidates, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(candidates, <span class=\"number\">0</span>, target, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">candidates, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; candidates.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(candidates[i])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(candidates, i, target - candidates[i], res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum</span>([<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>], <span class=\"number\">7</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum</span>([<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>], <span class=\"number\">8</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/77.Combinations/index/",
            "url": "http://example.com/2024/05/11/leetcode/77.Combinations/index/",
            "title": "77.combinations",
            "date_published": "2024-05-11T07:17:35.353Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combine = <span class=\"keyword\">function</span>(<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: n&#125;).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">dfs</span> = (<span class=\"params\">arr, path, start</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.<span class=\"property\">length</span> === k) &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">push</span>([...path]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            path.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(arr, path, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">            path.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(arr, [], <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combine</span>(<span class=\"number\">5</span>, <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combine = <span class=\"keyword\">function</span>(<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = [];</span><br><span class=\"line\">    <span class=\"title function_\">generateCombinations</span>(<span class=\"number\">1</span>, n, k, [], result);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">generateCombinations</span>(<span class=\"params\">start, n, k, combination, result</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (k === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        result.<span class=\"title function_\">push</span>([...combination]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        combination.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        <span class=\"title function_\">generateCombinations</span>(i + <span class=\"number\">1</span>, n, k - <span class=\"number\">1</span>, combination, result);</span><br><span class=\"line\">        combination.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/47.Permutations%20II/index/",
            "url": "http://example.com/2024/05/06/leetcode/47.Permutations%20II/index/",
            "title": "47.Permutations II",
            "date_published": "2024-05-06T07:28:15.385Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVybXV0YXRpb25zLWlpL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>连续出现相同的数字，需要排除掉</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> permuteUnique = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">nums, path, res</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(nums.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i).<span class=\"title function_\">concat</span>(nums.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)), path.<span class=\"title function_\">concat</span>(nums[i]), res);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(nums, [], res);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">permuteUnique</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/46.Permutations/index/",
            "url": "http://example.com/2024/05/06/leetcode/46.Permutations/index/",
            "title": "46.Permutations",
            "date_published": "2024-05-06T07:26:34.278Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVybXV0YXRpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> permute = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">nums, path, res</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(nums.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i).<span class=\"title function_\">concat</span>(nums.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)), path.<span class=\"title function_\">concat</span>(nums[i]), res);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(nums, [], res);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">permute</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/257.Binary%20Tree%20Paths/index/",
            "url": "http://example.com/2024/05/06/leetcode/257.Binary%20Tree%20Paths/index/",
            "title": "79.Binary Tree Paths",
            "date_published": "2024-05-06T06:34:40.389Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmluYXJ5LXRyZWUtcGF0aHMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> binaryTreePaths = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">node, path</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">left</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">left</span>, path + <span class=\"string\">&#x27;-&gt;&#x27;</span> + node.<span class=\"property\">left</span>.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">right</span>, path + <span class=\"string\">&#x27;-&gt;&#x27;</span> + node.<span class=\"property\">right</span>.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node.<span class=\"property\">left</span> &amp;&amp; !node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(root, root.<span class=\"property\">val</span>.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>大差不差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> binaryTreePaths = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> paths = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">node, path</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        path.<span class=\"title function_\">push</span>(node.<span class=\"property\">val</span>.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node.<span class=\"property\">left</span> &amp;&amp; !node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            paths.<span class=\"title function_\">push</span>(path.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;-&gt;&#x27;</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">left</span>, path.<span class=\"title function_\">slice</span>()); <span class=\"comment\">// Copy the path array</span></span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">right</span>, path.<span class=\"title function_\">slice</span>()); <span class=\"comment\">// Copy the path array</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(root, []);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> paths;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/79.Word%20Search/index/",
            "url": "http://example.com/2024/05/06/leetcode/79.Word%20Search/index/",
            "title": "79.Word Search",
            "date_published": "2024-05-06T03:09:39.557Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1zZWFyY2gvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>但是时间不够，特别在重复字母很多的时候</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; board[<span class=\"number\">0</span>].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> record = &#123;&#125;;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, j, <span class=\"number\">0</span>, record)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, index, record</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= board.<span class=\"property\">length</span> || j &lt; <span class=\"number\">0</span> || j &gt;= board[<span class=\"number\">0</span>].<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      board[i][j] === word[index] &amp;&amp;</span><br><span class=\"line\">      (<span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, &#123;...record&#125;))</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>勉强通过了，不懂上面为什么超时</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; board[<span class=\"number\">0</span>].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, j, <span class=\"number\">0</span>, &#123;&#125;)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, index, record</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= board.<span class=\"property\">length</span> || j &lt; <span class=\"number\">0</span> || j &gt;= board[<span class=\"number\">0</span>].<span class=\"property\">length</span> || board[i][j] !== word[index] || record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, record)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">exist</span>(</span><br><span class=\"line\">        [[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>]],</span><br><span class=\"line\">        <span class=\"string\">&quot;AAAAAAAAAAAAAAB&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">exist</span>(</span><br><span class=\"line\">        [</span><br><span class=\"line\">            [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>],</span><br><span class=\"line\">            [<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>],</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">&#x27;cdba&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>根据参考答案，引入额外的空间记录访问的节点，确实会增加运行时间（1200 -&gt; 350）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span>(<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> m = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">backtrack</span> = (<span class=\"params\">i, j, k</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= m || j &lt; <span class=\"number\">0</span> || j &gt;= n || board[i][j] !== word.<span class=\"title function_\">charAt</span>(k)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">const</span> temp = board[i][j];</span><br><span class=\"line\">        board[i][j] = <span class=\"string\">&#x27;\\0&#x27;</span>; </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">const</span> result = <span class=\"title function_\">backtrack</span>(i + <span class=\"number\">1</span>, j, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i - <span class=\"number\">1</span>, j, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i, j + <span class=\"number\">1</span>, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i, j - <span class=\"number\">1</span>, k + <span class=\"number\">1</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        board[i][j] = temp; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">backtrack</span>(i, j, <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/04/30/leetcode/93.Restore%20IP%20Addresses/index/",
            "url": "http://example.com/2024/04/30/leetcode/93.Restore%20IP%20Addresses/index/",
            "title": "93.Restore IP Addresses",
            "date_published": "2024-04-30T06:32:22.041Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcmVzdG9yZS1pcC1hZGRyZXNzZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>要注意 ‘000’、‘00’、‘0’ 需要额外判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> restoreIpAddresses = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">str, res</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.<span class=\"property\">length</span> === <span class=\"number\">4</span> &amp;&amp; !str.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;.&#x27;</span>));</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(str.<span class=\"property\">length</span>, <span class=\"number\">3</span>); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> numStr = str.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> num = +numStr;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (numStr &amp;&amp; num &gt;= <span class=\"number\">0</span> &amp;&amp; num &lt;= <span class=\"number\">255</span> &amp;&amp; num.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> === numStr.<span class=\"property\">length</span> &amp;&amp; res.<span class=\"property\">length</span> &lt; <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(str.<span class=\"title function_\">slice</span>(i), res.<span class=\"title function_\">concat</span>(numStr))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(s, [])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;25525511135&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;0000&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;101023&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">restoreIpAddresses</span>(<span class=\"params\">s: <span class=\"built_in\">string</span></span>): <span class=\"built_in\">string</span>[] &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">result</span>:<span class=\"built_in\">string</span>[] = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">DFS</span>  = (<span class=\"params\">ip:<span class=\"built_in\">string</span>,index:<span class=\"built_in\">number</span>,octet:<span class=\"built_in\">number</span></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index &gt;= s.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// last octet check</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(octet == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//check if last digit is valid</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.<span class=\"title function_\">substring</span>(index, index+<span class=\"number\">1</span>) != <span class=\"string\">&quot;0&quot;</span> || index+<span class=\"number\">1</span> == s.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(index)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">                    ip += <span class=\"string\">&#x27;.&#x27;</span></span><br><span class=\"line\">                    ip += s.<span class=\"title function_\">substring</span>(index);</span><br><span class=\"line\">                    result.<span class=\"title function_\">push</span>(ip)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span> &amp;&amp; index+i &lt; s.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(index, index+i)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">                <span class=\"title function_\">DFS</span>(ip + <span class=\"string\">&#x27;.&#x27;</span>+ s.<span class=\"title function_\">substring</span>(index, index+i),index+i, octet + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//check for leading zero</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.<span class=\"title function_\">substring</span>(index, index+<span class=\"number\">1</span>) == <span class=\"string\">&quot;0&quot;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span> &amp;&amp; i &lt; s.<span class=\"property\">length</span> ; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">DFS</span>(s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i), i, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//check for leading zero</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>] == <span class=\"string\">&quot;0&quot;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/04/30/leetcode/417.Pacific%20Atlantic%20Water%20Flow/index/",
            "url": "http://example.com/2024/04/30/leetcode/417.Pacific%20Atlantic%20Water%20Flow/index/",
            "title": "417.Pacific Atlantic Water Flow",
            "date_published": "2024-04-30T03:16:39.876Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFjaWZpYy1hdGxhbnRpYy13YXRlci1mbG93L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>需要记录已经访问的节点，防止死循环，速度很慢</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">heights</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pacificAtlantic = <span class=\"keyword\">function</span>(<span class=\"params\">heights</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> m = heights.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> n = heights[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> record = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> r = record[i * n + j] = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">pacific</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                    <span class=\"attr\">atlantic</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> atlantic = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>();</span><br><span class=\"line\">                <span class=\"comment\">// const pacific = new Set();</span></span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(i, j, i * n + j,  record[i * n + j], atlantic, heights[i][j]);</span><br><span class=\"line\">                <span class=\"comment\">// dfs(i, j, i * n + j,  record[i * n + j], pacific, heights[i][j]);</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (r.<span class=\"property\">atlantic</span> &amp;&amp; r.<span class=\"property\">pacific</span>) &#123;</span><br><span class=\"line\">                    res.<span class=\"title function_\">push</span>([i, j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, order, r, set, height</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= m || j &gt;= n) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> ii = i * n + j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (set.<span class=\"title function_\">has</span>(ii)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (heights[i][j] &gt; height) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span> || j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">pacific</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === m - <span class=\"number\">1</span> || j === n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">atlantic</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (r.<span class=\"property\">pacific</span> &amp;&amp; r.<span class=\"property\">atlantic</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (order !== ii &amp;&amp; record[ii] &amp;&amp; record[ii].<span class=\"property\">atlantic</span> &amp;&amp; record[ii].<span class=\"property\">pacific</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">pacific</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                r.<span class=\"property\">atlantic</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            set.<span class=\"title function_\">add</span>(ii)</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, order, r, set, heights[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(pacificAtlantic(19,17,8,11],[4,11,10,0,1,18,11],[11,7,14,4,7,8,9],[12,0,0,3,6,2,12],[0,16,3,3,5,6,6],[6,11,17,12,18,5,15],[16,14,8,4,10,16,6],[9,7,2,13,5,5,5],[14,17,19,4,7,2,5],[11,16,18,14,8,10,12],[5,11,10,17,2,2,13],[7,6,12,3,5,3,12],[12,10,0,19,3,15,12],[13,2,12,1,1,15,19],[11,15,10,8,14,19,8],[16,2,2,16,5,15,16],[9,8,2,17,15,14,16],[17,2,17,17,0,6,3],[3,4,13,9,1,4,0],[1,3,13,10,14,9,4]]));</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">pacificAtlantic</span>([[<span class=\"number\">8</span>,<span class=\"number\">7</span>],[<span class=\"number\">11</span>,<span class=\"number\">2</span>],[<span class=\"number\">1</span>,<span class=\"number\">13</span>],[<span class=\"number\">14</span>,<span class=\"number\">15</span>],[<span class=\"number\">0</span>,<span class=\"number\">10</span>],[<span class=\"number\">19</span>,<span class=\"number\">9</span>],[<span class=\"number\">17</span>,<span class=\"number\">14</span>],[<span class=\"number\">10</span>,<span class=\"number\">10</span>],[<span class=\"number\">5</span>,<span class=\"number\">5</span>],[<span class=\"number\">15</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">10</span>],[<span class=\"number\">11</span>,<span class=\"number\">10</span>],[<span class=\"number\">4</span>,<span class=\"number\">3</span>],[<span class=\"number\">12</span>,<span class=\"number\">13</span>],[<span class=\"number\">11</span>,<span class=\"number\">7</span>],[<span class=\"number\">0</span>,<span class=\"number\">9</span>],[<span class=\"number\">13</span>,<span class=\"number\">5</span>],[<span class=\"number\">11</span>,<span class=\"number\">18</span>],[<span class=\"number\">9</span>,<span class=\"number\">19</span>],[<span class=\"number\">10</span>,<span class=\"number\">11</span>]]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pacificAtlantic = <span class=\"keyword\">function</span>(<span class=\"params\">M</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!M.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> M</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = M.<span class=\"property\">length</span>, x = M[<span class=\"number\">0</span>].<span class=\"property\">length</span>, ans = [],</span><br><span class=\"line\">        dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(x * y)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">dfs</span> = (<span class=\"params\">i, j, w, h</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> ij = i * x + j</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((dp[ij] &amp; w) || M[i][j] &lt; h) <span class=\"keyword\">return</span></span><br><span class=\"line\">        dp[ij] += w, h = M[i][j]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[ij] === <span class=\"number\">3</span>) ans.<span class=\"title function_\">push</span>([i,j])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i + <span class=\"number\">1</span> &lt; y) <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) <span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j + <span class=\"number\">1</span> &lt; x) <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt; <span class=\"number\">0</span>) <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>, w, h)</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; y; i++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, <span class=\"number\">0</span>, <span class=\"number\">1</span>, M[i][<span class=\"number\">0</span>])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, x-<span class=\"number\">1</span>, <span class=\"number\">2</span>, M[i][x-<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; x; j++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>, j, <span class=\"number\">1</span>, M[<span class=\"number\">0</span>][j])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(y-<span class=\"number\">1</span>, j, <span class=\"number\">2</span>, M[y-<span class=\"number\">1</span>][j])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/29/leetcode/130.Surrounded%20Regions/index/",
            "url": "http://example.com/2024/02/29/leetcode/130.Surrounded%20Regions/index/",
            "title": "130.Surrounded Regions",
            "date_published": "2024-02-29T06:49:56.963Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vycm91bmRlZC1yZWdpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先判断区块是否符合，再进行替换，但是性能差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify board in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solve = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> m = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> n = board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> marked = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">judge</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; i &gt;= <span class=\"number\">0</span> &amp;&amp; i &lt;= m - <span class=\"number\">1</span> &amp;&amp; j &gt;= <span class=\"number\">0</span> &amp;&amp; j &lt;= n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b1 = <span class=\"title function_\">judge</span>(i - <span class=\"number\">1</span>, j);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b2 = <span class=\"title function_\">judge</span>(i + <span class=\"number\">1</span>, j);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b3 = <span class=\"title function_\">judge</span>(i, j - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b4 = <span class=\"title function_\">judge</span>(i, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b5 = i === <span class=\"number\">0</span> || i === m - <span class=\"number\">1</span> || j === <span class=\"number\">0</span> || j === n - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b1 &amp;&amp; b2 &amp;&amp; b3 &amp;&amp; b4 &amp;&amp; !b5;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">replace</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">0</span> &amp;&amp; i &lt;= m - <span class=\"number\">1</span> &amp;&amp; j &gt;= <span class=\"number\">0</span> &amp;&amp; j &lt;= n - <span class=\"number\">1</span> &amp;&amp; board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">      board[i][j] = <span class=\"string\">&quot;X&quot;</span>;</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i - <span class=\"number\">1</span>, j);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i + <span class=\"number\">1</span>, j);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i, j - <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> yes = <span class=\"title function_\">judge</span>(i, j);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (yes) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">replace</span>(i, j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(board);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>把不需要替换的’O’标出来，剩下的就都是’X’了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> solve = <span class=\"keyword\">function</span>(<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(board.<span class=\"property\">length</span> ==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span> </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;board.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j] == <span class=\"string\">&#x27;O&#x27;</span> &amp;&amp; (i==<span class=\"number\">0</span> || i==board.<span class=\"property\">length</span>-<span class=\"number\">1</span> || j==<span class=\"number\">0</span> || j==board[<span class=\"number\">0</span>].<span class=\"property\">length</span>-<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">                  <span class=\"title function_\">dfs</span>(board,i,j)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;board.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">                  board[i][j]=<span class=\"string\">&#x27;O&#x27;</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    board[i][j]=<span class=\"string\">&#x27;X&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> board</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">board,i,j</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">0</span> || j&lt;<span class=\"number\">0</span> || i&gt;=board.<span class=\"property\">length</span> || j &gt;=board[<span class=\"number\">0</span>].<span class=\"property\">length</span> || board[i][j]==<span class=\"string\">&#x27;X&#x27;</span> || board[i][j]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> </span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      board[i][j]=<span class=\"string\">&#x27;W&#x27;</span>;</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i+<span class=\"number\">1</span>,j)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i-<span class=\"number\">1</span>,j)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i,j+<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i,j-<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "url": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "title": "547.Number of Provinces",
            "date_published": "2024-02-28T06:50:44.317Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLXByb3ZpbmNlcy9kZXNjcmlwdGlvbi8/c291cmNlPXN1Ym1pc3Npb24tbm9hYw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>有两种 marked，一种是已被其他城市相连，一种是一个城市只需要标记一次</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; isConnected 连通矩阵，表示每个点是否与其它点相连</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; 返回连通的圆的数量</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findCircleNum = <span class=\"keyword\">function</span> (<span class=\"params\">isConnected</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = isConnected.<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的行数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> m = isConnected[<span class=\"number\">0</span>].<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的列数</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 记录已经访问过的点</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">    marked[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    marked[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    isConnected[i][j] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    isConnected[j][i] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; m; k++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j !== k &amp;&amp; isConnected[j][k] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(j, k); <span class=\"comment\">// 递归访问相连的点</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> hasMarked = <span class=\"literal\">false</span>; <span class=\"comment\">// 记录当前连通圆是否已经访问过</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i !== j &amp;&amp; isConnected[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(i, j); <span class=\"comment\">// 访问相连的点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!hasMarked) &#123;</span><br><span class=\"line\">          ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">          hasMarked = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记当前连通圆已经访问过</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!marked[i]) &#123;</span><br><span class=\"line\">      ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findCircleNum</span>(<span class=\"params\">M</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个 Set 数据结构，用于存储已访问的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> visited = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个变量，用于存储朋友圈的数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> circles = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 遍历矩阵 M</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; M.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 检查当前节点是否已访问过</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!visited.<span class=\"title function_\">has</span>(i)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 对当前节点进行深度优先搜索</span></span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i);</span><br><span class=\"line\">            <span class=\"comment\">// 这是一个新的朋友圈</span></span><br><span class=\"line\">            circles++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> circles;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 辅助函数，用于进行深度优先搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历当前节点的邻居节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; M.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检查当前节点是否是邻居节点，并且未被访问过</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (M[i][j] === <span class=\"number\">1</span> &amp;&amp; !visited.<span class=\"title function_\">has</span>(j)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将邻居节点标记为已访问</span></span><br><span class=\"line\">                visited.<span class=\"title function_\">add</span>(j);</span><br><span class=\"line\">                <span class=\"comment\">// 对邻居节点进行深度优先搜索</span></span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "url": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "title": "200.Number of Islands",
            "date_published": "2024-02-28T03:15:17.352Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLWlzbGFuZHMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>答案同<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">题 695</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numIslands = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || grid[i][j] === <span class=\"string\">&#x27;0&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j] === <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">trav</span>(i, j)</span><br><span class=\"line\">                ans += <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "url": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "title": "695.Max Area of Island",
            "date_published": "2024-02-28T02:42:28.956Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找到每一块大陆的大小，返回最大值，因为可能没有，所以初始化 <code>[0]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span> - 二维数组表示的网格</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 用于标记已访问过的岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [<span class=\"number\">0</span>]; <span class=\"comment\">// 存储每个岛屿的面积</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历网格中的每个岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; grid.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; grid[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">                rst.<span class=\"title function_\">push</span>(<span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>); <span class=\"comment\">// 计算当前岛屿的面积并添加到结果数组中</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 深度优先搜索（DFS）计算岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">i</span> - 当前岛屿的行索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">j</span> - 当前岛屿的列索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 当前岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>; <span class=\"comment\">// 递归计算相邻岛屿的面积并加上当前岛屿的面积</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>; <span class=\"comment\">// 如果当前岛屿不是陆地（1），返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...rst); <span class=\"comment\">// 返回结果数组中的最大值</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>看起来好像差不多，但速度快了有一倍</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"comment\">// 定义递归函数，用于计算岛屿的面积</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果越界或者当前位置为水域，则返回0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || !grid[i][j]) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 将当前位置标记为已访问</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 递归计算上下左右四个方向的岛屿面积，并返回最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历整个岛屿，计算每个岛屿的面积，并更新最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j]) ans = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ans, <span class=\"title function_\">trav</span>(i, j))</span><br><span class=\"line\">    <span class=\"comment\">// 返回最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/27/leetcode/127.Word%20Ladder/index/",
            "url": "http://example.com/2024/02/27/leetcode/127.Word%20Ladder/index/",
            "title": "127.Word Ladder",
            "date_published": "2024-02-27T06:21:44.238Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1sYWRkZXIvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      beginWord,</span><br><span class=\"line\">      wordList,</span><br><span class=\"line\">      <span class=\"attr\">links</span>: [beginWord]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(queue);</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.<span class=\"property\">beginWord</span> === endWord) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// console.log(obj.links);</span></span><br><span class=\"line\">      <span class=\"comment\">// rst.push(obj.time)</span></span><br><span class=\"line\">      <span class=\"comment\">// continue;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> obj.<span class=\"property\">time</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; obj.<span class=\"property\">wordList</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">isAdjacent</span>(obj.<span class=\"property\">beginWord</span>, obj.<span class=\"property\">wordList</span>[i])) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log([...obj.wordList.slice(0, i), ...obj.wordList.slice(i + 1)]);</span></span><br><span class=\"line\">        queue.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">time</span>: obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"attr\">beginWord</span>: obj.<span class=\"property\">wordList</span>[i],</span><br><span class=\"line\">          <span class=\"attr\">wordList</span>: [...obj.<span class=\"property\">wordList</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i), ...obj.<span class=\"property\">wordList</span>.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)],</span><br><span class=\"line\">          <span class=\"attr\">links</span>: [...obj.<span class=\"property\">links</span>, obj.<span class=\"property\">wordList</span>[i]]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>先收集关系，再遍历，但内存溢出了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!wordList.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === endWord)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    wordList.<span class=\"title function_\">unshift</span>(beginWord)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> near = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; wordList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      near[i] = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; wordList.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (wordList[i] !== wordList[j] &amp;&amp; <span class=\"title function_\">isAdjacent</span>(wordList[i], wordList[j])) &#123;</span><br><span class=\"line\">              near[i].<span class=\"title function_\">push</span>(j)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// console.log(near);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">ids</span>: near[<span class=\"number\">0</span>],</span><br><span class=\"line\">        <span class=\"attr\">used</span>: &#123;<span class=\"number\">0</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> ids = obj.<span class=\"property\">ids</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">of</span> ids) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (wordList[index] === endWord) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.<span class=\"property\">used</span>[index]) &#123;</span><br><span class=\"line\">            queue.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">time</span>: obj.<span class=\"property\">time</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">ids</span>: near[index],</span><br><span class=\"line\">                <span class=\"attr\">used</span>: &#123;</span><br><span class=\"line\">                    ...obj.<span class=\"property\">used</span>,</span><br><span class=\"line\">                    [index]: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>基于我的答案的改进版</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">beginWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">endWord</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordList</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span> (<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!wordList.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item === endWord)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    wordList.<span class=\"title function_\">unshift</span>(beginWord);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> near = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; wordList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        near[i] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; wordList.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (wordList[i] !== wordList[j] &amp;&amp; <span class=\"title function_\">isAdjacent</span>(wordList[i], wordList[j])) &#123;</span><br><span class=\"line\">                near[i].<span class=\"title function_\">push</span>(j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// console.log(near);</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> used = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> queue = [<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> len = queue.<span class=\"property\">length</span>;</span><br><span class=\"line\">        time += <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (len &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            len -= <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> i = queue.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">of</span> near[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wordList[index] === endWord) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> time;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!used[index]) &#123;</span><br><span class=\"line\">                    used[index] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    queue.<span class=\"title function_\">push</span>(index);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAdjacent</span>(<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (word1[i] !== word2[i]) &#123;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num === <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>找 26 个字母的组合反而更快</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ladderLength = <span class=\"keyword\">function</span>(<span class=\"params\">beginWord, endWord, wordList</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wordSet = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>(wordList)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [beginWord];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> steps = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(queue.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> next = [];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// loop over each word in the queue</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> word <span class=\"keyword\">of</span> queue) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(word === endWord) <span class=\"keyword\">return</span> steps;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// loop over each char of the word </span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; word.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">// and replace the char with letters from [a - z]</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">26</span>; j++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> newWord = word.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i) + <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(j + <span class=\"number\">97</span>) + word.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">// if the new word exist in the word list add it to the queue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(wordSet.<span class=\"title function_\">has</span>(newWord)) &#123;</span><br><span class=\"line\">                        next.<span class=\"title function_\">push</span>(newWord);</span><br><span class=\"line\">                        wordSet.<span class=\"title function_\">delete</span>(newWord);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        queue = next</span><br><span class=\"line\">        steps++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "BFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/23/leetcode/34.Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array/index/",
            "url": "http://example.com/2024/02/23/leetcode/34.Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array/index/",
            "title": "34.Find First and Last Position of Element in Sorted Array",
            "date_published": "2024-02-23T08:48:54.716Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1maXJzdC1hbmQtbGFzdC1wb3NpdGlvbi1vZi1lbGVtZW50LWluLXNvcnRlZC1hcnJheS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先找到位置，然后找边界，但是有 O (n)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> begin = <span class=\"number\">0</span>, end = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            begin = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[begin] !== target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    end = begin + <span class=\"number\">1</span>;</span><br><span class=\"line\">    begin = begin - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (nums[end] === target || nums[begin] === target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[end] === target) &#123;</span><br><span class=\"line\">            end++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[begin] === target) &#123;</span><br><span class=\"line\">            begin--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [begin + <span class=\"number\">1</span>, end - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">searchRange</span>([<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">8</span>,<span class=\"number\">8</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>], <span class=\"number\">8</span>));</span><br></pre></td></tr></table></figure>\n<p>分别找两个边界</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> begin = <span class=\"number\">0</span>, end = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            begin = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[begin] !== target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> first = begin;</span><br><span class=\"line\"></span><br><span class=\"line\">    begin = <span class=\"number\">0</span>, end = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target &gt;= nums[mid]) &#123;</span><br><span class=\"line\">            begin = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[begin] !== target) &#123;</span><br><span class=\"line\">        begin -= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [first, begin]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>通过 isSearchingLeft 判断找哪个方向的边界</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">binarySearch</span> = (<span class=\"params\">nums, target, isSearchingLeft</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> right = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> idx = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right) / <span class=\"number\">2</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[mid] &gt; target) &#123;</span><br><span class=\"line\">                right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[mid] &lt; target) &#123;</span><br><span class=\"line\">                left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                idx = mid;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (isSearchingLeft) &#123;</span><br><span class=\"line\">                    right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">return</span> idx;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> left = <span class=\"title function_\">binarySearch</span>(nums, target, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> right = <span class=\"title function_\">binarySearch</span>(nums, target, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> [left, right];    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/23/leetcode/153.Find%20Minimum%20in%20Rotated%20Sorted%20Array/index/",
            "url": "http://example.com/2024/02/23/leetcode/153.Find%20Minimum%20in%20Rotated%20Sorted%20Array/index/",
            "title": "153.Find Minimum in Rotated Sorted Array",
            "date_published": "2024-02-23T08:02:45.217Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1taW5pbXVtLWluLXJvdGF0ZWQtc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMin = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[<span class=\"number\">0</span>] &lt; nums[len - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> begin = <span class=\"number\">0</span>, end = len - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &gt;= nums[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            begin = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[begin]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMin</span>([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/23/leetcode/278.First%20Bad%20Version/index/",
            "url": "http://example.com/2024/02/23/leetcode/278.First%20Bad%20Version/index/",
            "title": "278.First Bad Version",
            "date_published": "2024-02-23T07:26:07.373Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmlyc3QtYmFkLXZlcnNpb24vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>要注意 <code>isBadVersion(mid)===true</code>  的那个可能就是结果，所以 <code>end = mid</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for isBadVersion()</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">integer</span>&#125; version number</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125; whether the version is bad</span></span><br><span class=\"line\"><span class=\"comment\"> * isBadVersion = function(version) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ...</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">function</span>&#125; isBadVersion()</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">function</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solution = <span class=\"keyword\">function</span>(<span class=\"params\">isBadVersion</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">integer</span>&#125; n Total versions</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">integer</span>&#125; The first bad version</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> begin = <span class=\"number\">1</span>, end = n;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end)/<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">isBadVersion</span>(mid)) &#123;</span><br><span class=\"line\">                end = mid ;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                begin = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> begin;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/23/leetcode/540.Single%20Element%20in%20a%20Sorted%20Array/index/",
            "url": "http://example.com/2024/02/23/leetcode/540.Single%20Element%20in%20a%20Sorted%20Array/index/",
            "title": "69.Sqrt(x)",
            "date_published": "2024-02-23T06:46:08.830Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc2luZ2xlLWVsZW1lbnQtaW4tYS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> singleNonDuplicate = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> begin = <span class=\"number\">0</span>, end = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (begin &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((begin + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mid % <span class=\"number\">2</span> === <span class=\"number\">1</span>) mid--;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] === nums[mid + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            begin = mid + <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[begin];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">singleNonDuplicate</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">8</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">singleNonDuplicate</span>([<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">7</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">11</span>]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/23/leetcode/744.Find%20Smallest%20Letter%20Greater%20Than%20Target/index/",
            "url": "http://example.com/2024/02/23/leetcode/744.Find%20Smallest%20Letter%20Greater%20Than%20Target/index/",
            "title": "744.Find Smallest Letter Greater Than Target",
            "date_published": "2024-02-23T03:33:43.971Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1zbWFsbGVzdC1sZXR0ZXItZ3JlYXRlci10aGFuLXRhcmdldC9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>二分法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[]</span>&#125; <span class=\"variable\">letters</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">character</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextGreatestLetter = <span class=\"keyword\">function</span>(<span class=\"params\">letters, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; letters[<span class=\"number\">0</span>] || target &gt;= letters[letters.<span class=\"property\">length</span> - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> letters[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> beg = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end = letters.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (beg &lt;= end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((beg + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (letters[mid] &lt;= target) &#123;</span><br><span class=\"line\">            beg = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            end = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>  letters[beg];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">nextGreatestLetter</span>([<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"string\">&#x27;j&#x27;</span>], <span class=\"string\">&#x27;e&#x27;</span> ));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/69.Sqrt(x)/index/",
            "url": "http://example.com/2024/02/22/leetcode/69.Sqrt(x)/index/",
            "title": "69.Sqrt(x)",
            "date_published": "2024-02-22T09:17:23.456Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3FydHgvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>用数学<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWFtLnBhZ2UvMjAxNi8wMy8xOS9tYW51YWxseS1zb2x2aW5nLXRoZS1zcXVhcmUtcm9vdC8=\">笔算开方</span>，刚学的，记录一下，说明没有学错</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mySqrt = <span class=\"keyword\">function</span> (<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rst = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> strx = x + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> pre = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> end = strx.<span class=\"property\">length</span> % <span class=\"number\">2</span> === <span class=\"number\">0</span> ? <span class=\"number\">2</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (end &lt;= strx.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> s = strx.<span class=\"title function_\">slice</span>(start, end);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> num = +(pre + s);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rest;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (start === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (n * n &lt;= num) &#123;</span><br><span class=\"line\">        n++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      n--;</span><br><span class=\"line\">      rest = n * n;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> ((<span class=\"number\">20</span> * rst + n) * n &lt;= num) &#123;</span><br><span class=\"line\">        n++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">        n--;</span><br><span class=\"line\">      rest = (<span class=\"number\">20</span> * rst + n) * n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    rst += n;</span><br><span class=\"line\">    pre = num - rest;</span><br><span class=\"line\"></span><br><span class=\"line\">    start = end;</span><br><span class=\"line\">    end = end + <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> +rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">mySqrt</span>(<span class=\"number\">15144</span>));</span><br></pre></td></tr></table></figure>\n<p>穷举法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mySqrt = <span class=\"keyword\">function</span> (<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n * n &lt;= x) &#123;</span><br><span class=\"line\">        n++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n - <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mySqrt = <span class=\"keyword\">function</span> (<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n =  <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(x/<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> half = <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(n/<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!(n * n &lt;= x &amp;&amp; (n+<span class=\"number\">1</span>)*(n+<span class=\"number\">1</span>) &gt; x)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n * n &lt; x) &#123;</span><br><span class=\"line\">            n += half;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            n -= half;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        half = <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(half/<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">mySqrt</span>(<span class=\"number\">15129</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>二分法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mySqrt = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> beg = <span class=\"number\">0</span>, end = x, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(beg &lt;= end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((beg + end)/<span class=\"number\">2</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mid*mid &gt; x) &#123;</span><br><span class=\"line\">            end = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// mid*mid &lt;= x</span></span><br><span class=\"line\">            ans = mid;</span><br><span class=\"line\">            beg = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "二分法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/665.Non-decreasing%20Array/index/",
            "url": "http://example.com/2024/02/22/leetcode/665.Non-decreasing%20Array/index/",
            "title": "665.Non-decreasing Array",
            "date_published": "2024-02-22T07:54:56.172Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLWRlY3JlYXNpbmctYXJyYXkvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> checkPossibility = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[i] &lt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span> &amp;&amp; nums[i]&lt; nums[i -<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        nums[i] = nums[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        nums[i - <span class=\"number\">1</span>] = nums[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([-<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/392.Is%20Subsequence/index/",
            "url": "http://example.com/2024/02/22/leetcode/392.Is%20Subsequence/index/",
            "title": "392.Is Subsequence",
            "date_published": "2024-02-22T03:20:36.570Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaXMtc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>挨个比过去就行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSubsequence = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s === t) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; t.<span class=\"property\">length</span>; i ++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t[i] === s[n]) &#123;</span><br><span class=\"line\">                n++</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n === s.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/605.Can%20Place%20Flowers/index/",
            "url": "http://example.com/2024/02/22/leetcode/605.Can%20Place%20Flowers/index/",
            "title": "605.Can Place Flowers",
            "date_published": "2024-02-22T03:14:18.126Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2FuLXBsYWNlLWZsb3dlcnMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>判断前后是否是 1</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">flowerbed</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPlaceFlowers = <span class=\"keyword\">function</span>(<span class=\"params\">flowerbed, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; flowerbed.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (flowerbed[i] === <span class=\"number\">0</span> &amp;&amp; !flowerbed[i+<span class=\"number\">1</span>] &amp;&amp; !flowerbed[i-<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          flowerbed[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">          n--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">canPlaceFlowers</span>([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], <span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/763.Partition%20Labels/index/",
            "url": "http://example.com/2024/02/22/leetcode/763.Partition%20Labels/index/",
            "title": "763.Partition Labels",
            "date_published": "2024-02-22T02:51:41.043Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWxhYmVscy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>这题完全没有 get 到 (尽可能分组的) 意思，不知道该如何下手，不过基于网友提示，得到下面答案</p>\n<p>思路：先收集每个字符出现的位置间隔，然后排序。判断间隔重叠，则分为一组，否则分为两组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 提示</span></span><br><span class=\"line\"><span class=\"comment\"> * Imo you can entirely approach this as an intervals question. You are merging the intervals of two letters if they overlap at all. &quot;aaaab&quot; is [4, 1] because the intervals are [[0, 3], [4, 4]] aka [[3 - 0 + 1], [4 - 4 + 1]], but &quot;aaaaba&quot; is [6] because the intervals are [[0, 6], [5,5]]. You do this for every letter.</span></span><br><span class=\"line\"><span class=\"comment\"> Note that &quot;aaaabab&quot; would be [[0, 6], [5, 7]] and thus merged to [0, 7] so you return [7 - 0 + 1] aka [8]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> partitionLabels = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> last = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!last[s[i]]) &#123;</span><br><span class=\"line\">            last[s[i]] = [i, i]</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            last[s[i]][<span class=\"number\">1</span>] = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(last).<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">0</span>] === y[<span class=\"number\">0</span>] ? y[<span class=\"number\">1</span>] - x[<span class=\"number\">1</span>] : x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> a = arr[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max &lt; a[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(max - start + <span class=\"number\">1</span>);</span><br><span class=\"line\">            start = max+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(a[<span class=\"number\">1</span>], max)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i === arr.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; max &gt;= a[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(max - start + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">partitionLabels</span>(<span class=\"string\">&#x27;eccbbbbdec&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>字符串的顺序就是位置顺序，不需要额外排序；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> partitionLabels = <span class=\"keyword\">function</span> (<span class=\"params\">s, lastIdx = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    lastIdx[s[i]] = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> curLast = <span class=\"number\">0</span>, res = [], accu = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 取最大的最后出现位置</span></span><br><span class=\"line\">    curLast = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(curLast, lastIdx[s[i]]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后出现位置和序号一样，说明没有重叠了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === curLast) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">push</span>(i + <span class=\"number\">1</span> - accu);</span><br><span class=\"line\">      accu = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/21/leetcode/406.Queue%20Reconstruction%20by%20Height/index/",
            "url": "http://example.com/2024/02/21/leetcode/406.Queue%20Reconstruction%20by%20Height/index/",
            "title": "406.Queue Reconstruction by Height",
            "date_published": "2024-02-21T07:36:49.658Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcXVldWUtcmVjb25zdHJ1Y3Rpb24tYnktaGVpZ2h0L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排列 people，然后比较数值和大小插入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">people</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reconstructQueue = <span class=\"keyword\">function</span> (<span class=\"params\">people</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// people 先按people[n][1]从小到大排序，再按people[n][0]从大到小排序</span></span><br><span class=\"line\">  people.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> (x[<span class=\"number\">1</span>] === y[<span class=\"number\">1</span>] ? y[<span class=\"number\">0</span>] - x[<span class=\"number\">0</span>] : x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [people[<span class=\"number\">0</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; people.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> p = people[i];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; queue.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = queue[j];</span><br><span class=\"line\">      <span class=\"comment\">// 数量吻合，插入数据</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (p[<span class=\"number\">1</span>] === num &amp;&amp; p[<span class=\"number\">0</span>] &lt;= q[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">        queue.<span class=\"title function_\">splice</span>(j, <span class=\"number\">0</span>, p);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p[<span class=\"number\">0</span>] &lt;= q[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 只有&lt;=才增加num</span></span><br><span class=\"line\">        num++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j === queue.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        queue.<span class=\"title function_\">push</span>(p);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> queue;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><code>people[n][1]</code>  在一定程度上已经代表了他在重组数组中的位置，所以不需要一项项比较</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">people</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reconstructQueue = <span class=\"keyword\">function</span>(<span class=\"params\">people</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    people.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a[<span class=\"number\">0</span>] == b[<span class=\"number\">0</span>] ? a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>] : b[<span class=\"number\">0</span>] - a[<span class=\"number\">0</span>])</span><br><span class=\"line\">    people.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">splice</span>(val[<span class=\"number\">1</span>], <span class=\"number\">0</span>, val)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/455.Assign%20Cookies/index/",
            "url": "http://example.com/2024/02/20/leetcode/455.Assign%20Cookies/index/",
            "title": "455.Assign Cookies",
            "date_published": "2024-02-20T07:34:40.706Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYXNzaWduLWNvb2tpZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排序，在比较</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">g</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findContentChildren = <span class=\"keyword\">function</span>(<span class=\"params\">g, s</span>) &#123;</span><br><span class=\"line\">    g.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\">    s.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; g.<span class=\"property\">length</span> &amp;&amp; j &lt; s.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[j] &gt;= g[i]) &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findContentChildren</span>([<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>], [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/452.Minimum%20Number%20of%20Arrows%20to%20Burst%20Balloons/index/",
            "url": "http://example.com/2024/02/20/leetcode/452.Minimum%20Number%20of%20Arrows%20to%20Burst%20Balloons/index/",
            "title": "452.Minimum Number of Arrows to Burst Balloons",
            "date_published": "2024-02-20T07:32:15.872Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS1udW1iZXItb2YtYXJyb3dzLXRvLWJ1cnN0LWJhbGxvb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLW92ZXJsYXBwaW5nLWludGVydmFscy9kZXNjcmlwdGlvbi8=\"> 435</span> 同理，计算重叠点个数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">points</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMinArrowShots = <span class=\"keyword\">function</span>(<span class=\"params\">points</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!points.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        points.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = points[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; points.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (points[i][<span class=\"number\">0</span>] &lt;= min) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">            min = points[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMinArrowShots</span>([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/435.Non-overlapping%20Intervals/index/",
            "url": "http://example.com/2024/02/20/leetcode/435.Non-overlapping%20Intervals/index/",
            "title": "435.Non-overlapping Intervals",
            "date_published": "2024-02-20T06:54:54.119Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLW92ZXJsYXBwaW5nLWludGVydmFscy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排序，然后看是否重合，选择的区间结尾越小，留给后面的区间的空间越大，那么后面能够选择的区间个数也就越大</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">intervals</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> eraseOverlapIntervals = <span class=\"keyword\">function</span>(<span class=\"params\">intervals</span>) &#123;</span><br><span class=\"line\">    intervals.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = intervals[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; intervals.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (intervals[i][<span class=\"number\">0</span>] &lt; max) &#123;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            max = intervals[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/650.2%20Keys%20Keyboard/index/",
            "url": "http://example.com/2024/02/20/leetcode/650.2%20Keys%20Keyboard/index/",
            "title": "650.2 Keys Keyboard",
            "date_published": "2024-02-20T03:24:18.531Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvMi1rZXlzLWtleWJvYXJkL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>数学规律，结果和约数有关</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</span></span><br><span class=\"line\"><span class=\"comment\"> * 0, 2, 3, 4, 5, 5, 7, 6, 6, 7</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minSteps = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: n + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dp[i], dp[j] + i/j)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dp[i], i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minSteps</span>(<span class=\"number\">1</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minSteps</span>(<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minSteps</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minSteps</span>(<span class=\"number\">5</span>));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/02/19/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "url": "http://example.com/2024/02/19/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "title": "动态规划总结",
            "date_published": "2024-02-19T09:17:41.809Z",
            "content_html": "<p>动态规划五部曲</p>\n<ul>\n<li>确定 dp 数组（dp table）以及下标的含义</li>\n<li>确定递推公式</li>\n<li>dp 数组如何初始化</li>\n<li>确定遍历顺序</li>\n<li>举例推导 dp 数组</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU1JThBJUE4JUU2JTgwJTgxJUU4JUE3JTg0JUU1JTg4JTkyJUU2JTgwJUJCJUU3JUJCJTkzJUU3JUFGJTg3Lm1k\">参考文档</span></p>\n",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/02/19/leetcode/72.Edit%20Distance/index/",
            "url": "http://example.com/2024/02/19/leetcode/72.Edit%20Distance/index/",
            "title": "72.Edit Distance",
            "date_published": "2024-02-19T09:16:40.810Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZWRpdC1kaXN0YW5jZS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minDistance = <span class=\"keyword\">function</span> (<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1 === word2) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> len1 = word1.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len2 = word2.<span class=\"property\">length</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: len1 + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">_,i</span>) =&gt;</span></span><br><span class=\"line\">        <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: len2 + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">_,j</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 改变为空字符串需要的步数</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 从空字符串变为目标的步数，其实只要第一个就够了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= len1; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= len2; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word1[i-<span class=\"number\">1</span>] === word2[j-<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                dp[i][j] = dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(</span><br><span class=\"line\">                    dp[i-<span class=\"number\">1</span>][j] + <span class=\"number\">1</span>, <span class=\"comment\">// 删除</span></span><br><span class=\"line\">                    dp[i][j-<span class=\"number\">1</span>] + <span class=\"number\">1</span>,  <span class=\"comment\">// 新增</span></span><br><span class=\"line\">                    dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]+<span class=\"number\">1</span> <span class=\"comment\">// 替换</span></span><br><span class=\"line\">                );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[len1][len2]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/02/18/leetcode/583.Delete%20Operation%20for%20Two%20Strings/index/",
            "url": "http://example.com/2024/02/18/leetcode/583.Delete%20Operation%20for%20Two%20Strings/index/",
            "title": "583.Delete Operation for Two Strings",
            "date_published": "2024-02-18T03:04:18.012Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGVsZXRlLW9wZXJhdGlvbi1mb3ItdHdvLXN0cmluZ3MvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>动态规划找到两个字符串的共同字符串，然后计算得出需要删除的数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minDistance = <span class=\"keyword\">function</span> (<span class=\"params\">word1, word2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (word1 === word2) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> len1 = word1.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> len2 = word2.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: len1 + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span></span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: len2 + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= len1; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= len2; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (word1[i-<span class=\"number\">1</span>] === word2[j-<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            dp[i][j] = dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][j], dp[i][j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> len1 + len2 - <span class=\"number\">2</span> * dp[len1][len2]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">minDistance</span>(<span class=\"string\">&#x27;asd&#x27;</span>, <span class=\"string\">&#x27;ad&#x27;</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/02/02/leetcode/188.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20IV/index/",
            "url": "http://example.com/2024/02/02/leetcode/188.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20IV/index/",
            "title": "188.Best Time to Buy and Sell Stock IV",
            "date_published": "2024-02-02T08:55:55.547Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1pdi9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\">#</a> 答案</h3>\n<p>通用解法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">0</span> &lt;= i &lt;= n:             <span class=\"comment\">// n is the number of days</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt;= k &lt;= k:        <span class=\"comment\">// k is the maximum number of transactions</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> s in &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;:    <span class=\"comment\">// s is the rest state</span></span><br><span class=\"line\">\t\t\t\tdp[i][k][s] = <span class=\"built_in\">max</span>(buy,sell,rest)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">k, prices</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">            dp[i] = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt;= k; j++) &#123;</span><br><span class=\"line\">                dp[i][j] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span> || j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(</span><br><span class=\"line\">                        dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>],</span><br><span class=\"line\">                        dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i]</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    dp[i][j][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[len - <span class=\"number\">1</span>][k][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>(<span class=\"number\">4</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>缩减代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i20 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i21 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">// base case for second transaction</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i11 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">//base case for second transaction</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;prices.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">    d_i10 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i10, d_i11 + prices[i]);</span><br><span class=\"line\">    d_i11 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i11,  <span class=\"number\">0</span> - prices[i]);</span><br><span class=\"line\">    d_i20 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i20, d_i21 + prices[i]);</span><br><span class=\"line\">    d_i21 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i21, d_i10 - prices[i]);</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> d_i20</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/02/leetcode/123.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20III/index/",
            "url": "http://example.com/2024/02/02/leetcode/123.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20III/index/",
            "title": "123.Best Time to Buy and Sell Stock III",
            "date_published": "2024-02-02T08:43:53.026Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paWkvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\">#</a> 答案</h3>\n<p>通用解法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">0</span> &lt;= i &lt;= n:             <span class=\"comment\">// n is the number of days</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt;= k &lt;= k:        <span class=\"comment\">// k is the maximum number of transactions</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> s in &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;:    <span class=\"comment\">// s is the rest state</span></span><br><span class=\"line\">\t\t\t\tdp[i][k][s] = <span class=\"built_in\">max</span>(buy,sell,rest)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    dp[i] = []</span><br><span class=\"line\">    dp[i][<span class=\"number\">1</span>] = []</span><br><span class=\"line\">    dp[i][<span class=\"number\">2</span>] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>], <span class=\"number\">0</span> - prices[i])</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">2</span>][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len-<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>缩减代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i20 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i21 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">// base case for second transaction</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d_i11 = -<span class=\"title class_\">Infinity</span>; <span class=\"comment\">//base case for second transaction</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;prices.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">    d_i10 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i10, d_i11 + prices[i]);</span><br><span class=\"line\">    d_i11 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i11,  <span class=\"number\">0</span> - prices[i]);</span><br><span class=\"line\">    d_i20 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i20, d_i21 + prices[i]);</span><br><span class=\"line\">    d_i21 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d_i21, d_i10 - prices[i]);</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> d_i20</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/02/leetcode/%E4%B9%B0%E8%82%A1%E7%A5%A8/",
            "url": "http://example.com/2024/02/02/leetcode/%E4%B9%B0%E8%82%A1%E7%A5%A8/",
            "title": "买股票总结",
            "date_published": "2024-02-02T08:01:23.138Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paWkvc29sdXRpb25zLzEzMjY4MjQvY29tcGxldGUtZXhwbGFuYXRpb24tb2YtdGhlLWJ1eS1hbmQtc2VsbC1zdG9jay1wcm9ibGVtcy11c2luZy1kcC8=\">参考文章</span></p>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/02/01/leetcode/122.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II/index/",
            "url": "http://example.com/2024/02/01/leetcode/122.Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II/index/",
            "title": "122.Best Time to Buy and Sell Stock II",
            "date_published": "2024-02-01T06:35:10.576Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paS8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>动态规划</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: prices.<span class=\"property\">length</span> + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>] + prices[i-<span class=\"number\">1</span>] - prices[i-<span class=\"number\">2</span>])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[prices.<span class=\"property\">length</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvMDEyMi4lRTQlQjklQjAlRTUlOEQlOTYlRTglODIlQTElRTclQTUlQTglRTclOUElODQlRTYlOUMlODAlRTQlQkQlQjMlRTYlOTclQjYlRTYlOUMlQkFJSS5tZA==\">看这里</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            rst += <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(prices[i] - prices[i - <span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxProfit);</span><br></pre></td></tr></table></figure>\n<p>动态规划解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    dp[i] = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>] - prices[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len-<span class=\"number\">1</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/01/31/leetcode/121.Best%20Time%20to%20Buy%20and%20Sell%20Stock/index/",
            "url": "http://example.com/2024/01/31/leetcode/121.Best%20Time%20to%20Buy%20and%20Sell%20Stock/index/",
            "title": "121.Best Time to Buy and Sell Stock",
            "date_published": "2024-01-31T02:28:56.295Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找出所有的结果，取最大的，但是时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; prices.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst, prices[j] - prices[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">maxProfit</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvMDEyMS4lRTQlQjklQjAlRTUlOEQlOTYlRTglODIlQTElRTclQTUlQTglRTclOUElODQlRTYlOUMlODAlRTQlQkQlQjMlRTYlOTclQjYlRTYlOUMlQkEubWQ=\">看这里</span></p>\n<p>先找最小值，再找最大差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> rst = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = prices[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(min, prices[i])</span><br><span class=\"line\">    rst = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst, prices[i]- min)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>动态规划解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dp = [];</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">    dp[i] = [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i-<span class=\"number\">1</span> === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      dp[i][<span class=\"number\">0</span>] = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"comment\">// Explanation：</span></span><br><span class=\"line\">        <span class=\"comment\">//   dp[i][0] </span></span><br><span class=\"line\">        <span class=\"comment\">// = max(dp[-1][0], dp[-1][1] + prices[i])</span></span><br><span class=\"line\">        <span class=\"comment\">// = max(0, -infinity + prices[i]) = 0</span></span><br><span class=\"line\">      dp[i][<span class=\"number\">1</span>] = -prices[i];</span><br><span class=\"line\">        <span class=\"comment\">// Explanation：</span></span><br><span class=\"line\">        <span class=\"comment\">//   dp[i][1] </span></span><br><span class=\"line\">        <span class=\"comment\">// = max(dp[-1][1], dp[-1][0] - prices[i])</span></span><br><span class=\"line\">        <span class=\"comment\">// = max(-infinity, 0 - prices[i]) </span></span><br><span class=\"line\">        <span class=\"comment\">// = -prices[i]</span></span><br><span class=\"line\">      <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>] + prices[i]);</span><br><span class=\"line\">    dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-<span class=\"number\">1</span>][<span class=\"number\">1</span>],  -prices[i])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[n-<span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "买股票"
            ]
        },
        {
            "id": "http://example.com/2024/01/30/leetcode/377.Combination%20Sum%20IV/index/",
            "url": "http://example.com/2024/01/30/leetcode/377.Combination%20Sum%20IV/index/",
            "title": "377.Combination Sum IV",
            "date_published": "2024-01-30T06:38:22.969Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWl2L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>完全背包的遍历顺序会影响结果是排列 (有顺序) 还是组合，当然只算最大 / 小值就无所谓遍历顺序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDUxOC4lRTklOUIlQjYlRTklOTIlQjElRTUlODUlOTElRTYlOEQlQTJJSS5odG1s\">参考</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum4 = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: target + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= target; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> coin <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt;= coin) &#123;</span><br><span class=\"line\">        dp[j] += dp[j - coin];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[target];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum4</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/30/leetcode/322.Coin%20Change/index/",
            "url": "http://example.com/2024/01/30/leetcode/322.Coin%20Change/index/",
            "title": "322.Coin Change",
            "date_published": "2024-01-30T02:19:50.642Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29pbi1jaGFuZ2UvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>完全背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">coins</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">amount</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> coinChange = <span class=\"keyword\">function</span>(<span class=\"params\">coins, amount</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (amount === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> max = <span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: amount + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(max);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> coin <span class=\"keyword\">of</span> coins) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = coin; j &lt;= amount; j++) &#123;</span><br><span class=\"line\">            dp[j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dp[j], dp[j - coin] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[amount] &gt;= max ? -<span class=\"number\">1</span> : dp[amount];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>], <span class=\"number\">11</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">2</span>], <span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>], <span class=\"number\">27</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">coinChange</span>([<span class=\"number\">186</span>,<span class=\"number\">419</span>,<span class=\"number\">83</span>,<span class=\"number\">408</span>], <span class=\"number\">6249</span>));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "url": "http://example.com/2024/01/29/leetcode/474.Ones%20and%20Zeroes/index/",
            "title": "474.Ones and Zeroes",
            "date_published": "2024-01-29T07:31:35.788Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvb25lcy1hbmQtemVyb2VzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>01 背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">strs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span> (<span class=\"params\">strs, m, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: m + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span></span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: n + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> str <span class=\"keyword\">of</span> strs) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _m = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _n = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> s <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (s === <span class=\"string\">&quot;0&quot;</span>) &#123;</span><br><span class=\"line\">              _m += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              _n += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = m; i &gt;= _m; i--) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n; j &gt;= _n; j--) &#123;</span><br><span class=\"line\">              dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i-_m][j-_n] + <span class=\"number\">1</span>, dp[i][j]);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[m][n];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMaxForm</span>([<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;111001&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;0&quot;</span>], <span class=\"number\">5</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>速度很快！！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findMaxForm = <span class=\"keyword\">function</span>(<span class=\"params\">S, M, N</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>:M+<span class=\"number\">1</span>&#125;,<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(N+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; S.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = S[i], zeros = <span class=\"number\">0</span>, ones = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; str.<span class=\"property\">length</span>; j++)</span><br><span class=\"line\">            str.<span class=\"title function_\">charAt</span>(j) === <span class=\"string\">&quot;0&quot;</span> ? zeros++ : ones++</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = M; j &gt;= zeros; j--)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = N; k &gt;= ones; k--)</span><br><span class=\"line\">                dp[j][k] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][k], dp[j-zeros][k-ones] + <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[M][N]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/25/leetcode/139.Word%20Break/index/",
            "url": "http://example.com/2024/01/25/leetcode/139.Word%20Break/index/",
            "title": "139.Word Break",
            "date_published": "2024-01-25T07:34:19.707Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1icmVhay9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>用字符串匹配 <code>wordDict</code> ，并收集匹配到的 index，然后判断 index 能否从头连到尾</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordDict</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wordBreak = <span class=\"keyword\">function</span> (<span class=\"params\">s, wordDict</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w <span class=\"keyword\">of</span> wordDict) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> startArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> endArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = w.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (w[<span class=\"number\">0</span>] === s[i]) &#123;</span><br><span class=\"line\">          startArr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">          endArr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (endArr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> j = endArr.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j--)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> start = startArr[j];</span><br><span class=\"line\">          <span class=\"keyword\">let</span> end = endArr[j];</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (w[end - start] === s[i]) &#123;</span><br><span class=\"line\">            end += <span class=\"number\">1</span>;</span><br><span class=\"line\">            endArr[j] = end;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (end - start === len) &#123;</span><br><span class=\"line\">              arr.<span class=\"title function_\">push</span>([start, end]);</span><br><span class=\"line\">              startArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">              endArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            startArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            endArr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!arr.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>] !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(s.<span class=\"property\">length</span> + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dp[item[<span class=\"number\">0</span>]]) &#123;</span><br><span class=\"line\">      dp[item[<span class=\"number\">1</span>]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[s.<span class=\"property\">length</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;cbca&quot;</span>, [<span class=\"string\">&quot;bc&quot;</span>,<span class=\"string\">&quot;ca&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;aaaaaaa&quot;</span>, [<span class=\"string\">&quot;aaaa&quot;</span>, <span class=\"string\">&quot;aaa&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;codedd&quot;</span>, [<span class=\"string\">&quot;edd&quot;</span>,<span class=\"string\">&quot;code&quot;</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wordBreak</span>(<span class=\"string\">&quot;cars&quot;</span>, [<span class=\"string\">&quot;car&quot;</span>,<span class=\"string\">&quot;ca&quot;</span>,<span class=\"string\">&quot;rs&quot;</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>完全背包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string[]</span>&#125; <span class=\"variable\">wordDict</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wordBreak = <span class=\"keyword\">function</span> (<span class=\"params\">s, wordDict</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(s.<span class=\"property\">length</span> + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> w <span class=\"keyword\">of</span> wordDict) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> len = w.<span class=\"property\">length</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &gt;= len &amp;&amp; s.<span class=\"title function_\">slice</span>(i-len, i) === w) &#123;</span><br><span class=\"line\">        dp[i] = dp[i] || dp[i-len];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[s.<span class=\"property\">length</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "完全背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/494.Target%20Sum/index/",
            "title": "494.Target Sum",
            "date_published": "2024-01-24T08:54:17.023Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdGFyZ2V0LXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以将这组数看成两部分，P 和 N，其中 P 使用正号，N 使用负号，有以下推导:</span><br><span class=\"line\"></span><br><span class=\"line\">sum(P) - sum(N) = target</span><br><span class=\"line\">sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)</span><br><span class=\"line\">2 * sum(P) = target + sum(nums)</span><br></pre></td></tr></table></figure>\n<p>受上面公式启发，以及<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">题 416</span>，使用 <code>01背包</code> 解决问题</p>\n<p>这里 dp [i] 表示 nums 里面相加能产生的和的数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">S</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTargetSumWays = <span class=\"keyword\">function</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = (sum + S) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(W) !== W || W &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W+<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;</span><br><span class=\"line\">            dp[i] = dp[i] + dp[i - num]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">100</span>], -<span class=\"number\">200</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>DPS 解法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWays</span>(<span class=\"params\">nums, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">findTargetSumWay</span>(nums, <span class=\"number\">0</span>, S);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findTargetSumWay</span>(<span class=\"params\">nums, start, S</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (start === nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S === <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S + nums[start]) +</span><br><span class=\"line\">    <span class=\"title function_\">findTargetSumWay</span>(nums, start + <span class=\"number\">1</span>, S - nums[start])</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findTargetSumWays</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>], <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2024/01/24/leetcode/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "title": "背包问题总结",
            "date_published": "2024-01-24T03:12:05.268Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU4JTgzJThDJUU1JThDJTg1JUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwMDElRTglODMlOEMlRTUlOEMlODUtMS5tZA==\">参考文档</span></p>\n",
            "tags": [
                "leetcode",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "url": "http://example.com/2024/01/24/leetcode/416.Partition%20Equal%20Subset%20Sum/index/",
            "title": "416.Partition Equal Subset Sum",
            "date_published": "2024-01-24T02:11:50.314Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWVxdWFsLXN1YnNldC1zdW0vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找两组和相同的数，就是找是否有和是 <code>sum/2</code>  的组合</p>\n<p>通用方法，但是时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">calc</span>(nums, sum / <span class=\"number\">2</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calc</span>(<span class=\"params\">nums, rest</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rest &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">calc</span>(nums.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>), rest - nums[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>可以勉强在时间内通过，通过 dp 记录，可以减少一些判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalSum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">acc, item</span>) =&gt;</span> acc + item, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (totalSum % <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = totalSum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(target + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(-<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">idx, target</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[idx][target] !== -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> dp[idx][target];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = idx + <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, target - nums[idx]) || <span class=\"title function_\">dfs</span>(i, target)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[idx][target] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>, target);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>下面应该是最佳方案了</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9sZWV0Y29kZS1tYXN0ZXIvYmxvYi9tYXN0ZXIvcHJvYmxlbXMvJUU4JTgzJThDJUU1JThDJTg1JUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwMDElRTglODMlOEMlRTUlOEMlODUtMi5tZA==\">01 背包参考文章</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWR5bmFtaWMuaHRtbCMlRTUlODglOTIlRTUlODglODYlRTYlOTUlQjAlRTclQkIlODQlRTQlQjglQkElRTUlOTIlOEMlRTclOUIlQjglRTclQUQlODklRTclOUElODQlRTQlQjglQTQlRTklODMlQTglRTUlODglODY=\">答案来源</span></p>\n<p>从 dp 的结果来看，dp 是在不断的把 nums 各个数累加的和设为 true，其实到 dp [W]=true 就可以停止了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPartition = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = nums.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> W = sum / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(W + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> nums) &#123;                 <span class=\"comment\">// 0-1 背包一个物品只能用一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = W; i &gt;= num; i--) &#123;   <span class=\"comment\">// 从后往前，先计算 dp[i] 再计算 dp[i-num]</span></span><br><span class=\"line\">            dp[i] = dp[i] || dp[i - num];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[W];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">canPartition</span>([<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,10])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true,  true, false]</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * canPartition([1,2,5,8])</span></span><br><span class=\"line\"><span class=\"comment\"> * [true,  true,  true, true,  false, true, true,  true]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP",
                "01背包"
            ]
        },
        {
            "id": "http://example.com/2024/01/23/leetcode/376.Wiggle%20Subsequence/index/",
            "url": "http://example.com/2024/01/23/leetcode/376.Wiggle%20Subsequence/index/",
            "title": "376.Wiggle Subsequence",
            "date_published": "2024-01-23T02:14:44.817Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd2lnZ2xlLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先找出差，0 不要，最后比较差的正负情况</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wiggleMaxLength = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> diffs = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] - nums[i-<span class=\"number\">1</span>] !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            diffs.<span class=\"title function_\">push</span>(nums[i] - nums[i-<span class=\"number\">1</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!diffs.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = diffs[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; diffs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (last &lt; <span class=\"number\">0</span> &amp;&amp; diffs[i] &gt; <span class=\"number\">0</span> || last &gt; <span class=\"number\">0</span> &amp;&amp; diffs[i] &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">            last = diffs[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wiggleMaxLength</span>([<span class=\"number\">1</span>,<span class=\"number\">17</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">5</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">wiggleMaxLength</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">wiggleMaxLength</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums == <span class=\"literal\">null</span> || nums.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> up = <span class=\"number\">1</span>, down = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] &gt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            up = down + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[i] &lt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            down = up + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(up, down);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>DP</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wiggleMaxLength = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"comment\">// [[DEC, INC]]</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: len&#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] == nums[j]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] &gt; nums[j]) &#123;</span><br><span class=\"line\">                dp[i][<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][<span class=\"number\">0</span>] + <span class=\"number\">1</span>, dp[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dp[i][<span class=\"number\">0</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[j][<span class=\"number\">1</span>] + <span class=\"number\">1</span>, dp[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, ...dp[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// console.log(dp);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/22/leetcode/646.Maximum%20Length%20of%20Pair%20Chain/index/",
            "url": "http://example.com/2024/01/22/leetcode/646.Maximum%20Length%20of%20Pair%20Chain/index/",
            "title": "646.Maximum Length of Pair Chain",
            "date_published": "2024-01-22T08:42:45.806Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4aW11bS1sZW5ndGgtb2YtcGFpci1jaGFpbi9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>借用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1pbmNyZWFzaW5nLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\"> 300 题</span>的思路，先排序，再算数量，不过时间和空间都很差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">pairs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findLongestChain = <span class=\"keyword\">function</span>(<span class=\"params\">pairs</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!pairs.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pairs.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    pairs.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= pairs.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pairs[i][<span class=\"number\">0</span>] &gt; pairs[j][<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], dp[j] + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], max)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findLongestChain</span>([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">pairs</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findLongestChain = <span class=\"keyword\">function</span>(<span class=\"params\">pairs</span>) &#123;</span><br><span class=\"line\">        pairs.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> prev = pairs[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; pairs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> cur = pairs[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cur[<span class=\"number\">0</span>] &gt; prev[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                res++;</span><br><span class=\"line\">                prev = cur;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/22/leetcode/300.Longest%20Increasing%20Subsequence/index/",
            "url": "http://example.com/2024/01/22/leetcode/300.Longest%20Increasing%20Subsequence/index/",
            "title": "300.Longest Increasing Subsequence",
            "date_published": "2024-01-22T02:23:05.826Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1pbmNyZWFzaW5nLXN1YnNlcXVlbmNlL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>把所有的情况都列出来，答案应该是对的，但是超时了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLIS = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!nums.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [[nums[<span class=\"number\">0</span>]]];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> has = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; dp.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &gt; dp[j][dp[j].<span class=\"property\">length</span> - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                dp.<span class=\"title function_\">push</span>([...dp[j], nums[i]])</span><br><span class=\"line\">                has = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, dp[j].<span class=\"property\">length</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!has) &#123;</span><br><span class=\"line\">            dp.<span class=\"title function_\">push</span>([nums[i]])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">101</span>,<span class=\"number\">18</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这位老哥说的好，在明确知道使用 dp 来解决后，dp [i] 其实都是有迹可循的</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here is an confusion fo mine when understanding what really the dp[i] is in the method, hope it might help the people who face the same problem like me.</span><br><span class=\"line\"></span><br><span class=\"line\">When you do DP/Max-Travese method, actually your steps is like this:</span><br><span class=\"line\">First, give a start, here &#x27;[1] * len(nums)&#x27;, becasue for each points in array, at least itself is a increasing subsequence;</span><br><span class=\"line\">Then, use DP/Max-Travese method to fill in the DP[] step by step, here comes what confused me.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**What really DP[i] represents? **</span></span><br><span class=\"line\">You might say, &#x27;&#x27;DP[i] represents LIS of the array[start to i]&#x27;&#x27;, but this kind of saying is only partly right, which is the key point of confusing, it needed to be added a constrain, together should be like this, &#x27;&#x27;DP[i] represents &#x27;fake LIS&#x27; which ended by array[i] of the array [start to i]&#x27;&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Now let me explain with an example array, [2,5,4,3,1], and the related DP array is dp[],</span><br><span class=\"line\">if you consider the &#x27;dp[i] represents LIS of the array[start to i]&#x27;, the related dp[] should be,[1,2,2,2,2];</span><br><span class=\"line\">if you consider the &#x27;dp[i] represents &#x27;fake LIS&#x27; which ended by array[i] of the array[start to i]&#x27;, dp[], should be [1,2,2,2,1], and only by this is realy what the code says.</span><br><span class=\"line\"></span><br><span class=\"line\">This &#x27;fake LIS&#x27; is really important, for it can help you to store an &#x27;fake LIS&#x27; ended by array[i],</span><br><span class=\"line\">so you can use it later to see if you can get a longer array after. But a &#x27;real LIS&#x27; can&#x27;t help store the result needed.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for your reading.</span><br></pre></td></tr></table></figure>\n<p>每次循环，但凡前面出现比 <code>nums[i]</code>  小的值， <code>dp[i]</code>  至少是 <code>dp[j]+1</code> ，然后是他们中的最大一个</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** [10,9,2,5,3,7,101,18]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1, 1,1,2,2,3,4  ,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  [0,1,0,3,2,3]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1,2,1,3,3,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *  [0,7,8,9,1,2,3,4]</span></span><br><span class=\"line\"><span class=\"comment\"> *  [1,2,3,4,2,3,4,5]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLIS = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!nums.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &gt; nums[j]) &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], dp[j] + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], max)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">101</span>,<span class=\"number\">18</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">lengthOfLIS</span>([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/19/leetcode/91.Decode%20Ways/index/",
            "url": "http://example.com/2024/01/19/leetcode/91.Decode%20Ways/index/",
            "title": "91.Decode Ways",
            "date_published": "2024-01-19T06:53:06.787Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGVjb2RlLXdheXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>尝试了这么多例子才出，已经搞懵了</p>\n<p>这个题目本质是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2xpbWJpbmctc3RhaXJzL2Rlc2NyaXB0aW9uLw==\">爬楼梯</span>，但是要考虑 <code>0</code>  和 <code>&gt;26</code>  的情况</p>\n<ul>\n<li>当  <code>s[i] === 0</code>  的时候，如果和前一个字母组成的数  <code>&gt;26</code>  或者  <code>=0</code> ，整个结果就是 0 了；不然他们只能是一个整体，所以 <code>dp[i] = dp[i-2]</code></li>\n<li>当  <code>s[i-1] === 0</code>  时，他和前一个字母只能是一个整体，所以  <code>dp[i] = dp[i-1]</code></li>\n<li>其他的时候就符合爬楼梯， <code>dp[i] = dp[i-2] + dp[i-1]</code></li>\n<li>另外， <code>i=1</code>  的时候需要额外处理或者事先处理</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numDecodings = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!s) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dp = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> len = s.<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> str = s.<span class=\"title function_\">slice</span>(i-<span class=\"number\">1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (+s[i-<span class=\"number\">1</span>] &gt; <span class=\"number\">2</span> || +s[i-<span class=\"number\">1</span>] === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = i === <span class=\"number\">1</span> ? dp[i-<span class=\"number\">1</span>] : dp[i-<span class=\"number\">2</span>]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (s[i-<span class=\"number\">1</span>] === <span class=\"string\">&#x27;0&#x27;</span> || +str &gt; <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">            dp[i] = dp[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = i === <span class=\"number\">1</span> ? dp[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span> : dp[i-<span class=\"number\">2</span>] + dp[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[len - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;12&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;226&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;06&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;10&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;2101&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;18011&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;27&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;1123&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">numDecodings</span>(<span class=\"string\">&quot;1201234&quot;</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>判断更加的简化了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numDecodings = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!s || s[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> oneDigit = <span class=\"built_in\">parseInt</span>(s[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> twoDigits = <span class=\"built_in\">parseInt</span>(s.<span class=\"title function_\">substring</span>(i - <span class=\"number\">2</span>, i));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oneDigit !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            dp[i] += dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">10</span> &lt;= twoDigits &amp;&amp; twoDigits &lt;= <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">            dp[i] += dp[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/16/leetcode/279.Perfect%20Squares/index/",
            "url": "http://example.com/2024/01/16/leetcode/279.Perfect%20Squares/index/",
            "title": "279.Perfect Squares",
            "date_published": "2024-01-16T02:15:29.303Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVyZmVjdC1zcXVhcmVzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>挨个算出最小的组合，然后后面的组合可以由前面的组合拼起来，及 <code>dq[i] = Math.min(dq[i], dq[j] + dq[i - j]);</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1, 1, 1, dq[1]</span></span><br><span class=\"line\"><span class=\"comment\"> * 2, 1 + 1, 2, dq[1] + dq[1]</span></span><br><span class=\"line\"><span class=\"comment\"> * 3, 1 + 1 + 1, 3 dq[1] + dq[2]</span></span><br><span class=\"line\"><span class=\"comment\"> * 4, 4, 1</span></span><br><span class=\"line\"><span class=\"comment\"> * 5, 4 + 1, 2,</span></span><br><span class=\"line\"><span class=\"comment\"> * 6, 4 + 1 + 1, 3</span></span><br><span class=\"line\"><span class=\"comment\"> * 7, 4 + 1 + 1 + 1, 4</span></span><br><span class=\"line\"><span class=\"comment\"> * 8, 4 + 4, 2</span></span><br><span class=\"line\"><span class=\"comment\"> * 9, 9, 1</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">numSquares</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dq = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: n + <span class=\"number\">1</span> &#125;).<span class=\"title function_\">fill</span>(<span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sqrt = <span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(sqrt) === sqrt) &#123;</span><br><span class=\"line\">      dq[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i / <span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">        dq[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(dq[i], dq[j] + dq[i - j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> dq[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>只考虑平方数（1）和  <code>dp[ i - square ]</code>  的组合就够了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numSquares = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Initialize with INT_MAX, except for dp[0] = 0 as base case</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>( n+<span class=\"number\">1</span> ).<span class=\"title function_\">fill</span>( <span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span> );</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">// Base case</span></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> root = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> square = root * root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for each square 1, 4, 9, 16, 25...</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>( square &lt;= n )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//  update dp value for number from square to n</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = square ; i &lt;= n ; i++ )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            dp[ i ] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>( dp[ i ], dp[ i - square ] + <span class=\"number\">1</span> );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// go to next square number</span></span><br><span class=\"line\">        root ++;</span><br><span class=\"line\">        square = root * root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];        </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>数学方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">numSquares</span> = (<span class=\"params\">n</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//returns if the number x is a valid square root ( can be represented as the square of an integer)</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">isSquare</span> = (<span class=\"params\">x</span>) =&gt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(x)) ** <span class=\"number\">2</span> === x;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isSquare</span>(n)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// that would be the fact that its equal to itself</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Legendre&#x27;s three square theorem: A natural number n can be represented as</span></span><br><span class=\"line\">  <span class=\"comment\">// the sum of AT MOST three squares of integers if and only if : n!= 4^x ( 8*m+7)</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (n % <span class=\"number\">4</span> === <span class=\"number\">0</span>) n /= <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"comment\">//Try contradicting Legendre</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n % <span class=\"number\">8</span> === <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Manually checking for result 2, because Legendre states  AT MOST 3,</span></span><br><span class=\"line\">  <span class=\"comment\">// so 2 is possible aswell</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= n; i++)</span><br><span class=\"line\">    <span class=\"comment\">// if x=n-i*i   and x is a valid square then OBVIOUSLY</span></span><br><span class=\"line\">    <span class=\"comment\">// n=i^2 +sqrt(x)^2  ,so n is a square of two numbers</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">isSquare</span>(n - i * i)) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Legendre applies</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/15/leetcode/343.Integer%20Break/index/",
            "url": "http://example.com/2024/01/15/leetcode/343.Integer%20Break/index/",
            "title": "343.Integer Break",
            "date_published": "2024-01-15T06:37:19.656Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaW50ZWdlci1icmVhay8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找数学规律，以 3 为基础是最大的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 2,1 × 1 = 1</span></span><br><span class=\"line\"><span class=\"comment\"> * 3,1 × 2 = 2</span></span><br><span class=\"line\"><span class=\"comment\"> * 4,2 × 2 = 4</span></span><br><span class=\"line\"><span class=\"comment\"> * 5,2 × 3 = 6 3的出现让乘积已经大于和了</span></span><br><span class=\"line\"><span class=\"comment\"> * 6,3 × 3 = 9</span></span><br><span class=\"line\"><span class=\"comment\"> * 7,3 × 2 × 2 = 12</span></span><br><span class=\"line\"><span class=\"comment\"> * 8,3 × 3 × 2 = 18</span></span><br><span class=\"line\"><span class=\"comment\"> * 9,3 × 3 × 3 = 27</span></span><br><span class=\"line\"><span class=\"comment\"> * 10,3 × 3 × 2 × 2 = 36</span></span><br><span class=\"line\"><span class=\"comment\"> * 11,3 × 3 × 2 × 3 = 54</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> integerBreak = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">4</span>) <span class=\"keyword\">return</span> n-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rst = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (sum &lt; n - <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        sum += <span class=\"number\">3</span>;</span><br><span class=\"line\">        rst *= <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    rst *= (n - sum);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>动态规划，把所有的组合都尝试一下，前几项的最大值已经被记录，不需要重复计算</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> integerBreak = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: n + <span class=\"number\">1</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(j * dp[i - j], j * (i - j)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/413.Arithmetic%20Slices/index/",
            "url": "http://example.com/2024/01/11/leetcode/413.Arithmetic%20Slices/index/",
            "title": "413.Arithmetic Slices",
            "date_published": "2024-01-11T07:47:16.418Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYXJpdGhtZXRpYy1zbGljZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先计算每一项之间的差，然后根据差相同的个数计算数量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(nums[i] - nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] !== arr[last]) &#123;</span><br><span class=\"line\">            sum += <span class=\"title function_\">getNum</span>(i - last + <span class=\"number\">1</span>)</span><br><span class=\"line\">            last = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sum += <span class=\"title function_\">getNum</span>(arr.<span class=\"property\">length</span> - last + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getNum</span>(<span class=\"params\">len</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let sum = 0;</span></span><br><span class=\"line\">    <span class=\"comment\">// for (let i = 0; i &lt; len - 2; i++) &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     sum += len - i - 2;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">// return sum;</span></span><br><span class=\"line\">    <span class=\"comment\">// 根据数学推到得出</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (len - <span class=\"number\">1</span>) * (len - <span class=\"number\">2</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>优化一下</p>\n<p>很奇怪，就一次循环，时间居然才超过 8.23%</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sameNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> diff = nums[<span class=\"number\">1</span>] - nums[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> di = nums[i] - nums[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (di !== diff) &#123;</span><br><span class=\"line\">            sum += <span class=\"title function_\">getNum</span>(sameNum + <span class=\"number\">1</span>);</span><br><span class=\"line\">            diff = di;</span><br><span class=\"line\">            sameNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            sameNum += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sum += <span class=\"title function_\">getNum</span>(sameNum + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getNum</span>(<span class=\"params\">len</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (len - <span class=\"number\">1</span>) * (len - <span class=\"number\">2</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>用 table 记住数量，每多一个相同的数，就会多前一个数量 + 1，是一个数学关系，把上面的 getNum 拆分到了每一步中计算了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numberOfArithmeticSlices = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> table = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>, n = nums.<span class=\"property\">length</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> diff1 = nums[i] - nums[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> diff2 = nums[i-<span class=\"number\">1</span>] - nums[i-<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (diff1 == diff2)&#123;</span><br><span class=\"line\">            table[i] = table[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">            ans += table[i-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/53.Maximum%20Subarray/index/",
            "url": "http://example.com/2024/01/11/leetcode/53.Maximum%20Subarray/index/",
            "title": "53.Maximum Subarray",
            "date_published": "2024-01-11T07:29:32.270Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4aW11bS1zdWJhcnJheS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>把从开始到结束的最大累加值记录下来，并找到最大的累加值就行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = nums[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> sum = nums[i - <span class=\"number\">1</span>] + nums[i];</span><br><span class=\"line\">        nums[i] = nums[i] &gt; sum ? nums[i] : sum</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, nums[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/11/leetcode/303.Range%20Sum%20Query%20-%20Immutable/index/",
            "url": "http://example.com/2024/01/11/leetcode/303.Range%20Sum%20Query%20-%20Immutable/index/",
            "title": "303.Range Sum Query - Immutable",
            "date_published": "2024-01-11T07:13:23.935Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcmFuZ2Utc3VtLXF1ZXJ5LWltbXV0YWJsZS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">NumArray</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span> = nums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">left</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">right</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"title class_\">NumArray</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sumRange</span> = <span class=\"keyword\">function</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = left; i &lt;= right; i++) &#123;</span><br><span class=\"line\">        sum += arr[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a  = <span class=\"keyword\">new</span> <span class=\"title class_\">NumArray</span>([-<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,-<span class=\"number\">5</span>,<span class=\"number\">2</span>,-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a.<span class=\"title function_\">sumRange</span>(<span class=\"number\">0</span>,<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>本来以为这题目没什么好说的，没想到用空间换时间，先算好和，在多次执行的时候速度大大提高</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">NumArray</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = nums.<span class=\"property\">length</span>; <span class=\"comment\">//stores length of array</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span> = <span class=\"title class_\">Array</span>( nums.<span class=\"property\">length</span> ).<span class=\"title function_\">fill</span>( <span class=\"number\">0</span> );<span class=\"comment\">//empty array</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>];<span class=\"comment\">//first value of prefix sum is the same as that of the first element of nums</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> ; i++ )&#123;<span class=\"comment\">//traverse from left to right of array nums</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[i] = <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[i-<span class=\"number\">1</span>] + nums[i];</span><br><span class=\"line\">        <span class=\"comment\">/*stores sum of current value(nums) + previous sum value </span></span><br><span class=\"line\"><span class=\"comment\">        at the index before it(prefixsum)*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; left </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">right</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"title class_\">NumArray</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sumRange</span> = <span class=\"keyword\">function</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( left == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">        <span class=\"comment\">/* if left index isnt mentioned then we return the </span></span><br><span class=\"line\"><span class=\"comment\">        sum up till the right index from the prefix sum array */</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[right];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//if the left index is given, then return the sum up </span></span><br><span class=\"line\">        <span class=\"comment\">//till the right index minus the value of prefix sum at </span></span><br><span class=\"line\">        <span class=\"comment\">//the index before the given left index i.e. value </span></span><br><span class=\"line\">        <span class=\"comment\">//at the (left - 1) index</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[right] - <span class=\"variable language_\">this</span>.<span class=\"property\">prefixSum</span>[left-<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/62.Unique%20Paths/index/",
            "url": "http://example.com/2024/01/10/leetcode/62.Unique%20Paths/index/",
            "title": "62.Unique Paths",
            "date_published": "2024-01-10T07:13:41.644Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdW5pcXVlLXBhdGhzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>次数  <code>arr[i][j]</code>  =  <code>arr[i][j - 1]</code>  +  <code>arr[i - 1][j]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!arr[i]) &#123;</span><br><span class=\"line\">                arr[i] = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; j &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = arr[i][j - <span class=\"number\">1</span>] + arr[i - <span class=\"number\">1</span>][j]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>是数学！！！</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>∗</mo><mi>k</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\nC(n,k)=\\frac {n!}{(n-k)!*k!}\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.45005399999999995em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.950054em;\"><span style=\"top:-3.0699460000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.45005399999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>机器人总共移动的次数 S=m+n-2，向下移动的次数 D=m-1，那么问题可以看成从 S 从取出 D 个位置的组合数量，这个问题的解为 C (S, D)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> S = m + n - <span class=\"number\">2</span>;  <span class=\"comment\">// 总共的移动次数</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> D = m - <span class=\"number\">1</span>;      <span class=\"comment\">// 向下的移动次数</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *  C(8,3) = (6*7*8)/(1*2*3)</span></span><br><span class=\"line\"><span class=\"comment\">     *  C(6,4) = (3*4*5*6)/(1*2*3*4)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= D; i++) &#123;</span><br><span class=\"line\">        ret = ret * (S - D + i) / i;</span><br><span class=\"line\">        <span class=\"comment\">// 或</span></span><br><span class=\"line\">        <span class=\"comment\">// rst = rst * (S - i + 1) / i</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/64.Minimum%20Path%20Sum/index/",
            "url": "http://example.com/2024/01/10/leetcode/64.Minimum%20Path%20Sum/index/",
            "title": "64.Minimum Path Sum",
            "date_published": "2024-01-10T06:55:17.757Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS1wYXRoLXN1bS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>最短路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minPathSum = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> m = grid.<span class=\"property\">length</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span> &amp;&amp; j != <span class=\"number\">0</span>) grid[i][j] += grid[i][j-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i != <span class=\"number\">0</span> &amp;&amp; j == <span class=\"number\">0</span>) grid[i][j] += grid[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; j != <span class=\"number\">0</span>) grid[i][j] += <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(grid[i-<span class=\"number\">1</span>][j], grid[i][j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> grid[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/10/leetcode/213.House%20Robber%20II/index/",
            "url": "http://example.com/2024/01/10/leetcode/213.House%20Robber%20II/index/",
            "title": "213.House Robber II",
            "date_published": "2024-01-10T06:46:33.484Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaG91c2Utcm9iYmVyLWlpLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>环形 rob, 有两种可能，0 肯定抢或不强，分别得出最大值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst1 = [nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">    rst1[<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst1[<span class=\"number\">0</span>], rst1[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;i++) &#123;</span><br><span class=\"line\">        rst1[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst1[i - <span class=\"number\">1</span>], rst1[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst2 = [<span class=\"number\">0</span> , nums[<span class=\"number\">1</span>], nums[<span class=\"number\">2</span>]];</span><br><span class=\"line\">    rst2[<span class=\"number\">2</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[<span class=\"number\">1</span>], rst2[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">3</span>; i &lt; nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        rst2[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[i - <span class=\"number\">1</span>], rst2[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(rst2[rst2.<span class=\"property\">length</span> - <span class=\"number\">1</span>], rst1[rst1.<span class=\"property\">length</span> - <span class=\"number\">1</span>])</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>其实也没啥，把相似功能提取出去了，改为用变量计算累加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> len = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &lt; <span class=\"number\">4</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"title function_\">robberHelper</span>(nums, <span class=\"number\">0</span>, len-<span class=\"number\">1</span>), <span class=\"title function_\">robberHelper</span>(nums, <span class=\"number\">1</span>, len));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">robberHelper</span>(<span class=\"params\">nums, start, end</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prev=<span class=\"number\">0</span>, beforePrev=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=start;i&lt;end;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = prev;</span><br><span class=\"line\">        prev = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[i] + beforePrev, prev);</span><br><span class=\"line\">        beforePrev= tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/09/leetcode/198.House%20Robber/index/",
            "url": "http://example.com/2024/01/09/leetcode/198.House%20Robber/index/",
            "title": "198.House Robber",
            "date_published": "2024-01-09T06:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaG91c2Utcm9iYmVyL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>从第三个开始，最大总和 S [n] = max (S [n-1], S [n-2] + nums [n]), 在下面把每一次的最大总和记录到 nums 里面了</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rob = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...nums);</span><br><span class=\"line\"></span><br><span class=\"line\">    nums[<span class=\"number\">1</span>] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        nums[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(nums[i - <span class=\"number\">1</span>], nums[i - <span class=\"number\">2</span>] + nums[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/09/leetcode/70.Climbing%20Stairs/index/",
            "url": "http://example.com/2024/01/09/leetcode/70.Climbing%20Stairs/index/",
            "title": "70.Climbing Stairs",
            "date_published": "2024-01-09T02:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2xpbWJpbmctc3RhaXJzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>斐波那契数列</p>\n<p>学习算法思想（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWR5bmFtaWMuaHRtbA==\">动态规划算法</span>）的例题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dq[n] = dq[n - <span class=\"number\">1</span>] + dq[n- <span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用数组</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; i &lt; n; i++) &#123;</span><br><span class=\"line\">        arr[i] = arr[i-<span class=\"number\">1</span>] + arr[i-<span class=\"number\">2</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[n-<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 前后相加</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> step1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> step2 = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; n;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> sum = step1 + step2;</span><br><span class=\"line\">        step1 = step2;</span><br><span class=\"line\">        step2 = sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> step2</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "动态规划",
                "DP"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/29.Divide%20Two%20Integers/index/",
            "url": "http://example.com/2024/01/08/leetcode/29.Divide%20Two%20Integers/index/",
            "title": "29.Divide Two Integers",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGl2aWRlLXR3by1pbnRlZ2Vycy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>使用加法累加，模拟乘法<br>\n未通过，时间不够</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">dividend</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">divisor</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> divide = <span class=\"keyword\">function</span>(<span class=\"params\">dividend, divisor</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbol = dividend &gt; <span class=\"number\">0</span> &amp;&amp; divisor &lt; <span class=\"number\">0</span> || dividend &lt; <span class=\"number\">0</span> &amp;&amp; divisor &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;-&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    dividend = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(dividend)</span><br><span class=\"line\">    divisor = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(divisor);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>, <span class=\"number\">31</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (divisor === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (symbol === <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; dividend &gt; max) &#123;</span><br><span class=\"line\">           dividend = max;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> +<span class=\"string\">`<span class=\"subst\">$&#123;symbol&#125;</span><span class=\"subst\">$&#123;dividend&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = divisor;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (dividend - sum &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        sum += divisor;</span><br><span class=\"line\">        time++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> +<span class=\"string\">`<span class=\"subst\">$&#123;symbol&#125;</span><span class=\"subst\">$&#123;time&#125;</span>`</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>使用位运算进行除法（知识面未覆盖）</p>\n<p>位运算一次只能找以 2 为底的除数，先找到最大的以 2 为底的除数，标记到 ans，<br>\n然后把这部分数值减去，在剩下的数中，再找到最大的以 2 为底的除数，以此类推，直到剩下的数小于被除数，ans 的累积结果就是商</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">dividend</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">divisor</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> divide = <span class=\"keyword\">function</span>(<span class=\"params\">A, B</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A === -<span class=\"number\">2147483648</span> &amp;&amp; B === -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">2147483647</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, sign = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A &lt; <span class=\"number\">0</span>) A = -A, sign = -sign</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B &lt; <span class=\"number\">0</span>) B = -B, sign = -sign</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A === B) <span class=\"keyword\">return</span> sign</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, val = B; A &gt;= B; i = <span class=\"number\">0</span>, val = B) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (val &gt; <span class=\"number\">0</span> &amp;&amp; val &lt;= A) val = B &lt;&lt; ++i</span><br><span class=\"line\">        A -= B &lt;&lt; i - <span class=\"number\">1</span>, ans += <span class=\"number\">1</span> &lt;&lt; i - <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sign &lt; <span class=\"number\">0</span> ? -ans : ans</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/31.Next%20Permutation/index/",
            "url": "http://example.com/2024/01/08/leetcode/31.Next%20Permutation/index/",
            "title": "31.Next Permutation",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGl2aWRlLXR3by1pbnRlZ2Vycy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<p>[2,4,5,1,3] -&gt; [2,4,5,3,1] -&gt; [2,5,1,3,4] -&gt; [2,5,1,4,3] -&gt; [2,5,3,1,4]</p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>组合的整体顺序是以从小到大为开始的组合顺序，所以先排序。<br>\n已排序为基础，找到当前那个的位置，然后位置的下一个就是结果</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sortNums = [...nums].<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> obj = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title function_\">judgeNums</span>(sortNums, nums, <span class=\"number\">0</span>, obj)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj.<span class=\"property\">isEnd</span>) &#123;</span><br><span class=\"line\">        nums.<span class=\"title function_\">reverse</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">judgeNums</span> (sortNums, nums, times, obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> same = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; sortNums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> num = sortNums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (same[num]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === sortNums.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj[times] === <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">                obj[times] = <span class=\"string\">&#x27;end&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            same[num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[times] === num) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> restNums = [...sortNums]</span><br><span class=\"line\">            restNums.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (restNums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">judgeNums</span>(restNums, nums, times + <span class=\"number\">1</span>, obj)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === sortNums.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                obj[times] = <span class=\"string\">&#x27;end&#x27;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                obj[times] = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.<span class=\"property\">isEnd</span> &amp;&amp; obj[times + <span class=\"number\">1</span>] === <span class=\"string\">&#x27;end&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj[times] === <span class=\"string\">&#x27;number&#x27;</span> &amp;&amp; i &gt; obj[times]) &#123;</span><br><span class=\"line\">            nums[times] = num;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> restNums = [...sortNums]</span><br><span class=\"line\">            restNums.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">            nums.<span class=\"title function_\">splice</span>(times + <span class=\"number\">1</span>, restNums.<span class=\"property\">length</span>, ...restNums)</span><br><span class=\"line\">            obj.<span class=\"property\">isEnd</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.<span class=\"property\">isEnd</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>总结变换规律，找到最后比前一个数字小的数 a，找到最后比 a 大的数字 b,<br>\n 把 a,b 换位置，再把 a（换位前位置）后所有的数 reverse，就是结果（我总结不出，有时候算法要求的真不是逻辑，而是数学或规律）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ind1=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ind2=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// step 1 find breaking point</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=nums.<span class=\"property\">length</span>-<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]&lt;nums[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            ind1=i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// if there is no breaking  point</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ind1 === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">reverse</span>(nums,<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// step 2 find next greater element and swap with ind2</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;nums[ind1])&#123;</span><br><span class=\"line\">                ind2=i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(nums,ind1,ind2);</span><br><span class=\"line\">        <span class=\"comment\">// step 3 reverse the rest right half</span></span><br><span class=\"line\">        <span class=\"title function_\">reverse</span>(nums,ind1+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">nums,i,j</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp=nums[i];</span><br><span class=\"line\">    nums[i]=nums[j];</span><br><span class=\"line\">    nums[j]=temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">nums,start</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i=start;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j=nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;j)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(nums,i,j);</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/08/leetcode/32.Longest%20Valid%20Parentheses/index/",
            "url": "http://example.com/2024/01/08/leetcode/32.Longest%20Valid%20Parentheses/index/",
            "title": "32.Longest Valid Parentheses",
            "date_published": "2024-01-08T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC12YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>遍历字符串，记住左括号的序号，如果有右括号，给这两个括号的位置标记 1，然后去到这个左括号，<br>\n这样所有能互相匹配的括号都标记了 1，最后就数最长的连续 1 是多少了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestValidParentheses = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: s.<span class=\"property\">length</span>&#125;).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> left = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> z = s[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (z === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">            left.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> last = s[left[left.<span class=\"property\">length</span> - <span class=\"number\">1</span>]];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (last === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> index = left.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">                arr[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                arr[index] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            sum += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(sum, max)</span><br><span class=\"line\">            sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(sum, max)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2024/01/07/leetcode/241.Different%20Ways%20to%20Add%20Parentheses/index/",
            "url": "http://example.com/2024/01/07/leetcode/241.Different%20Ways%20to%20Add%20Parentheses/index/",
            "title": "241.Different Ways to Add Parentheses",
            "date_published": "2024-01-07T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZGlmZmVyZW50LXdheXMtdG8tYWRkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案1\"><a class=\"markdownIt-Anchor\" href=\"#我的答案1\">#</a> 我的答案 1</h3>\n<p>按照题目思路，先遍历出搜索算式，再挨个计算算式结果<br>\n分两步走，性能太差了</p>\n<p><img data-src=\"img.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">expression</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> diffWaysToCompute = <span class=\"keyword\">function</span>(<span class=\"params\">expression</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = expression.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/([\\+\\-\\*])/g</span>, <span class=\"string\">&quot;|$1|&quot;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [+arr[<span class=\"number\">0</span>]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rsts = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sums = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> same = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title function_\">pieceExp</span>(arr, rsts)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rsts);</span><br><span class=\"line\">    rsts.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!same[item]) &#123;</span><br><span class=\"line\">            same[item] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            sums.<span class=\"title function_\">push</span>(<span class=\"title function_\">calcValue</span>(item))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sums);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 会有重复结果</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">pieceExp</span>(<span class=\"params\">arr, rsts</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dealArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; arr.<span class=\"property\">length</span>; index++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> item = arr[index];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ([<span class=\"string\">&#x27;*&#x27;</span>, <span class=\"string\">&#x27;+&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>].<span class=\"title function_\">includes</span>(item)) &#123;</span><br><span class=\"line\">            dealArr.<span class=\"title function_\">push</span>([</span><br><span class=\"line\">                ...arr.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, index - <span class=\"number\">1</span>),</span><br><span class=\"line\">                <span class=\"string\">`(<span class=\"subst\">$&#123;arr[index - <span class=\"number\">1</span>]&#125;</span><span class=\"subst\">$&#123;item&#125;</span><span class=\"subst\">$&#123;arr[index + <span class=\"number\">1</span>]&#125;</span>)`</span>,</span><br><span class=\"line\">                ...arr.<span class=\"title function_\">slice</span>(index + <span class=\"number\">2</span>),</span><br><span class=\"line\">            ]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dealArr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            rsts.<span class=\"title function_\">push</span>(item[<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">pieceExp</span>(item, rsts)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calcValue</span> (str) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/([\\+\\-\\*])/g</span>, <span class=\"string\">&quot;|$1|&quot;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\()/g</span>, <span class=\"string\">&#x27;$1|&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\))/g</span>, <span class=\"string\">&#x27;|$1&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> nums = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> scopes = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] === <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// nums.push(&#x27;&#x27;);</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i] === <span class=\"string\">&#x27;)&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scopes.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> expression = scopes.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">const</span> right = nums.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">const</span> left = nums.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;+&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left + right)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left - right)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (expression === <span class=\"string\">&#x27;*&#x27;</span>) &#123;</span><br><span class=\"line\">                    nums.<span class=\"title function_\">push</span>(left * right)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                sum = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ([<span class=\"string\">&#x27;*&#x27;</span>, <span class=\"string\">&#x27;+&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>].<span class=\"title function_\">includes</span>(arr[i])) &#123;</span><br><span class=\"line\">            scopes.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            nums.<span class=\"title function_\">push</span>(+arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">diffWaysToCompute</span>(<span class=\"string\">&quot;21-12-1&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>利用递归遍历，以加减乘为中间分隔成左算式和右算式，<br>\n返回最小算式的结果，再循环组合<br>\n (哦，原来这是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZGFpLnRlY2gvbWQvYWxnb3JpdGhtL2FsZy1jb3JlLWRpdmlkZS1hbmQtY29ucXVlci5odG1s\">分治算法</span>)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">input</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> diffWaysToCompute = <span class=\"keyword\">function</span>(<span class=\"params\">input</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; input.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(input[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> left = <span class=\"title function_\">diffWaysToCompute</span>(input.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i));</span><br><span class=\"line\">            <span class=\"keyword\">let</span> right = <span class=\"title function_\">diffWaysToCompute</span>(input.<span class=\"title function_\">slice</span>(i+<span class=\"number\">1</span>));</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> l <span class=\"keyword\">of</span> left) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r <span class=\"keyword\">of</span> right) &#123;</span><br><span class=\"line\">                    l = <span class=\"title class_\">Number</span>(l);</span><br><span class=\"line\">                    r = <span class=\"title class_\">Number</span>(r);</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (input[i]==<span class=\"string\">&#x27;+&#x27;</span>) &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l + r);       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (input[i]==<span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l - r);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        res.<span class=\"title function_\">push</span>(l * r);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">length</span>!=<span class=\"number\">0</span>) <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [input];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "分治算法"
            ]
        },
        {
            "id": "http://example.com/2024/01/07/leetcode/6.Zigzag%20Conversion/index/",
            "url": "http://example.com/2024/01/07/leetcode/6.Zigzag%20Conversion/index/",
            "title": "6.Zigzag Conversion",
            "date_published": "2024-01-07T08:00:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvemlnemFnLWNvbnZlcnNpb24vZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案1\"><a class=\"markdownIt-Anchor\" href=\"#我的答案1\">#</a> 我的答案 1</h3>\n<p>以两列为一组，塞数字到矩阵</p>\n<p><img data-src=\"/my-notes/assets/6.png\" alt=\"img.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">numRows</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> convert = <span class=\"keyword\">function</span>(<span class=\"params\">s, numRows</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: numRows&#125;).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> []);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ii = i % (numRows + numRows - <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = numRows - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> index = ii &gt; max ? max - (ii - max) : ii;</span><br><span class=\"line\">        arr[index].<span class=\"title function_\">push</span>(s[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + y.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>),<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">convert</span>(<span class=\"string\">&#x27;PAYPALISHIRING&#x27;</span>, <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode"
            ]
        }
    ]
}