{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"dfs\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "url": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "title": "547.Number of Provinces",
            "date_published": "2024-02-28T06:50:44.317Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLXByb3ZpbmNlcy9kZXNjcmlwdGlvbi8/c291cmNlPXN1Ym1pc3Npb24tbm9hYw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>有两种 marked，一种是已被其他城市相连，一种是一个城市只需要标记一次</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; isConnected 连通矩阵，表示每个点是否与其它点相连</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; 返回连通的圆的数量</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findCircleNum = <span class=\"keyword\">function</span> (<span class=\"params\">isConnected</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = isConnected.<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的行数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> m = isConnected[<span class=\"number\">0</span>].<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的列数</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 记录已经访问过的点</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">    marked[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    marked[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    isConnected[i][j] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    isConnected[j][i] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; m; k++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j !== k &amp;&amp; isConnected[j][k] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(j, k); <span class=\"comment\">// 递归访问相连的点</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> hasMarked = <span class=\"literal\">false</span>; <span class=\"comment\">// 记录当前连通圆是否已经访问过</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i !== j &amp;&amp; isConnected[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(i, j); <span class=\"comment\">// 访问相连的点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!hasMarked) &#123;</span><br><span class=\"line\">          ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">          hasMarked = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记当前连通圆已经访问过</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!marked[i]) &#123;</span><br><span class=\"line\">      ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findCircleNum</span>(<span class=\"params\">M</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个 Set 数据结构，用于存储已访问的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> visited = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个变量，用于存储朋友圈的数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> circles = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 遍历矩阵 M</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; M.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 检查当前节点是否已访问过</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!visited.<span class=\"title function_\">has</span>(i)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 对当前节点进行深度优先搜索</span></span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i);</span><br><span class=\"line\">            <span class=\"comment\">// 这是一个新的朋友圈</span></span><br><span class=\"line\">            circles++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> circles;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 辅助函数，用于进行深度优先搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历当前节点的邻居节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; M.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检查当前节点是否是邻居节点，并且未被访问过</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (M[i][j] === <span class=\"number\">1</span> &amp;&amp; !visited.<span class=\"title function_\">has</span>(j)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将邻居节点标记为已访问</span></span><br><span class=\"line\">                visited.<span class=\"title function_\">add</span>(j);</span><br><span class=\"line\">                <span class=\"comment\">// 对邻居节点进行深度优先搜索</span></span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "url": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "title": "200.Number of Islands",
            "date_published": "2024-02-28T03:15:17.352Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLWlzbGFuZHMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>答案同<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">题 695</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numIslands = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || grid[i][j] === <span class=\"string\">&#x27;0&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j] === <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">trav</span>(i, j)</span><br><span class=\"line\">                ans += <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "url": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "title": "695.Max Area of Island",
            "date_published": "2024-02-28T02:42:28.956Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找到每一块大陆的大小，返回最大值，因为可能没有，所以初始化 <code>[0]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span> - 二维数组表示的网格</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 用于标记已访问过的岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [<span class=\"number\">0</span>]; <span class=\"comment\">// 存储每个岛屿的面积</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历网格中的每个岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; grid.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; grid[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">                rst.<span class=\"title function_\">push</span>(<span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>); <span class=\"comment\">// 计算当前岛屿的面积并添加到结果数组中</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 深度优先搜索（DFS）计算岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">i</span> - 当前岛屿的行索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">j</span> - 当前岛屿的列索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 当前岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>; <span class=\"comment\">// 递归计算相邻岛屿的面积并加上当前岛屿的面积</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>; <span class=\"comment\">// 如果当前岛屿不是陆地（1），返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...rst); <span class=\"comment\">// 返回结果数组中的最大值</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>看起来好像差不多，但速度快了有一倍</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"comment\">// 定义递归函数，用于计算岛屿的面积</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果越界或者当前位置为水域，则返回0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || !grid[i][j]) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 将当前位置标记为已访问</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 递归计算上下左右四个方向的岛屿面积，并返回最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历整个岛屿，计算每个岛屿的面积，并更新最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j]) ans = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ans, <span class=\"title function_\">trav</span>(i, j))</span><br><span class=\"line\">    <span class=\"comment\">// 返回最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        }
    ]
}