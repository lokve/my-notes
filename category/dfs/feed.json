{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"dfs\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/06/04/leetcode/51.N-Queens/index/",
            "url": "http://example.com/2024/06/04/leetcode/51.N-Queens/index/",
            "title": "51.N-Queens",
            "date_published": "2024-06-04T09:24:59.085Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbi1xdWVlbnMv\">地址</span></p>\n<h3 id=\"ai的答案\"><a class=\"markdownIt-Anchor\" href=\"#ai的答案\">#</a> AI 的答案</h3>\n<p>对每一个位置都进行判断是否可下，当行走完的时候，输出结果<br>\n这里判断条件可以优化，从上往下只要判断点位上方就够了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveNQueens = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> board = <span class=\"title class_\">Array</span>(n)</span><br><span class=\"line\">        .<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"string\">&#x27;.&#x27;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(board, <span class=\"number\">0</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">board, row, res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (row === board.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(board.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isQueenSafe</span>(board, row, i)) &#123;</span><br><span class=\"line\">            board[row][i] = <span class=\"string\">&#x27;Q&#x27;</span>;</span><br><span class=\"line\">            <span class=\"title function_\">backtrack</span>(board, row + <span class=\"number\">1</span>, res);</span><br><span class=\"line\">            board[row][i] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isQueenSafe</span>(<span class=\"params\">board, row, col</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[row][i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i][col] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row - i &gt;= <span class=\"number\">0</span> &amp;&amp; col - i &gt;= <span class=\"number\">0</span> &amp;&amp; board[row - i][col - i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row - i &gt;= <span class=\"number\">0</span> &amp;&amp; col + i &lt; board.<span class=\"property\">length</span> &amp;&amp; board[row - i][col + i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row + i &lt; board.<span class=\"property\">length</span> &amp;&amp; col - i &gt;= <span class=\"number\">0</span> &amp;&amp; board[row + i][col - i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row + i &lt; board.<span class=\"property\">length</span> &amp;&amp; col + i &lt; board.<span class=\"property\">length</span> &amp;&amp; board[row + i][col + i] === <span class=\"string\">&#x27;Q&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">solveNQueens</span>(<span class=\"number\">4</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>因 Queen 是横竖斜线不能共线，所以每一行只有一个 Q (board 只需要一维数组即可)，每一列的位置不能重复 (bc === c)，不在左下斜线 (bc === c + r - br)，不在右下斜线 (bc === c - r + br)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> solveNQueens = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(res, n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">res, n, board = [], r = <span class=\"number\">0</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r === n) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(board.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">c</span> =&gt;</span> <span class=\"string\">&#x27;.&#x27;</span>.<span class=\"title function_\">repeat</span>(c) + <span class=\"string\">&#x27;Q&#x27;</span> + <span class=\"string\">&#x27;.&#x27;</span>.<span class=\"title function_\">repeat</span>(n - c - <span class=\"number\">1</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; n; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!board.<span class=\"title function_\">some</span>(<span class=\"function\">(<span class=\"params\">bc, br</span>) =&gt;</span> bc === c || bc === c + r - br || bc === c - r + br)) &#123;</span><br><span class=\"line\">            board.<span class=\"title function_\">push</span>(c);</span><br><span class=\"line\">            <span class=\"title function_\">backtrack</span>(res, n, board, r + <span class=\"number\">1</span>);</span><br><span class=\"line\">            board.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/28/leetcode/37.Sudoku%20Solver/index/",
            "url": "http://example.com/2024/05/28/leetcode/37.Sudoku%20Solver/index/",
            "title": "37.Sudoku Solver",
            "date_published": "2024-05-28T03:16:10.618Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vkb2t1LXNvbHZlci9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>记录每一行、每一列、每一个块中数字是否出现过，然后遍历空格，尝试填入 1-9，如果填入的数字合法，则递归调用 dfs，如果 dfs 返回 true，则说明填入的数字合法，继续填下一个空格，如果 dfs 返回 false，则说明填入的数字不合法，则尝试下一个数字，如果尝试完 9 个数字都失败，则说明整个数独不合法，返回 false。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify board in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveSudoku = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> row = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> col = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> block = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">3</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">9</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">false</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> empty = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][j] !== <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> num = board[i][j] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                row[i][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                col[j][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                empty.<span class=\"title function_\">push</span>([i, j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index === empty.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> [i, j] = empty[index];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> rest = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">9</span>; k++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!row[i][k] &amp;&amp; !col[j][k] &amp;&amp; !block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][k]) &#123;</span><br><span class=\"line\">                rest.<span class=\"title function_\">push</span>(k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rest.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> num <span class=\"keyword\">of</span> rest) &#123;</span><br><span class=\"line\">            board[i][j] = num + <span class=\"number\">1</span> + <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">            row[i][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            col[j][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(index + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            board[i][j] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            row[i][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            col[j][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            block[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>)][<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(j / <span class=\"number\">3</span>)][num] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> board;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">solveSudoku</span>([</span><br><span class=\"line\">        [<span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>],</span><br><span class=\"line\">    ])</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>更省空间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">solveSudoku</span>(<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> n = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"title function_\">dfs</span>(board, n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">board, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for every cell in the sudoku</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row = <span class=\"number\">0</span>; row &lt; n; row++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> col = <span class=\"number\">0</span>; col &lt; n; col++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// if its empty</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (board[row][col] !== <span class=\"string\">&#x27;.&#x27;</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      <span class=\"comment\">// try every number 1-9</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> c = i.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">        <span class=\"comment\">// if that number is valid</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isValid</span>(board, row, col, n, c)) &#123;</span><br><span class=\"line\">          board[row][col] = c;</span><br><span class=\"line\">          <span class=\"comment\">// continue search for that board, ret true if solution is reached</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(board, n)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// solution wasnt found for any num 1-9 here, must be a dead end...</span></span><br><span class=\"line\">      <span class=\"comment\">// set the current cell back to empty</span></span><br><span class=\"line\">      board[row][col] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">      <span class=\"comment\">// ret false to signal dead end </span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// all cells filled, must be a solution</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isValid</span>(<span class=\"params\">board, row, col, n, c</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blockRow = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(row / <span class=\"number\">3</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blockCol = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(col / <span class=\"number\">3</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (board[row][i] === c || board[i][col] === c) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> curRow = blockRow +  <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i / <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> curCol = blockCol +  <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(i % <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (board[curRow][curCol] === c) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/24/leetcode/131.Palindrome%20Partitioning/index/",
            "url": "http://example.com/2024/05/24/leetcode/131.Palindrome%20Partitioning/index/",
            "title": "131.Palindrome Partitioning",
            "date_published": "2024-05-24T06:25:25.927Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFsaW5kcm9tZS1wYXJ0aXRpb25pbmcv\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>考虑所有可能的结果，如果是回文，就一步步切割下去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> partition = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> memo = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">s, path</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                rst.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> sub = s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">                memo[sub] = memo[sub] !== <span class=\"literal\">undefined</span> ? memo[sub] : <span class=\"title function_\">isPalindrome</span>(sub);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (memo[sub]) &#123;</span><br><span class=\"line\">                    memo[sub] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"title function_\">dfs</span>(s.<span class=\"title function_\">substring</span>(i), path.<span class=\"title function_\">concat</span>(sub));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(s, [])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isPalindrome</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = s.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] !== s[j]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">partition</span>(<span class=\"string\">&#x27;aab&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> partition = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = s.<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">isPalindrome</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> right = str.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[left] !== str[right]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">            right--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getAllPartitions</span>(<span class=\"params\">curInd, curList</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> isLastPalindrome = <span class=\"title function_\">isPalindrome</span>(curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (curInd === n) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每一个组合都是回文</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isLastPalindrome) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>([...curList]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 当前是回文，curInd+1往下走</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isLastPalindrome) &#123;</span><br><span class=\"line\">            curList.<span class=\"title function_\">push</span>(s[curInd]);</span><br><span class=\"line\">            <span class=\"title function_\">getAllPartitions</span>(curInd + <span class=\"number\">1</span>, curList);</span><br><span class=\"line\">            curList.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 回朔法拼接所有的组合</span></span><br><span class=\"line\">        curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>] += s[curInd];</span><br><span class=\"line\">        <span class=\"title function_\">getAllPartitions</span>(curInd + <span class=\"number\">1</span>, curList);</span><br><span class=\"line\">        curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>] = curList[curList.<span class=\"property\">length</span> - <span class=\"number\">1</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">getAllPartitions</span>(<span class=\"number\">1</span>, [s[<span class=\"number\">0</span>]]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/24/leetcode/90.Subsets%20II/index/",
            "url": "http://example.com/2024/05/24/leetcode/90.Subsets%20II/index/",
            "title": "90.Subsets II",
            "date_published": "2024-05-24T02:42:39.719Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vic2V0cy1paS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> subsetsWithDup = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    rst.<span class=\"title function_\">push</span>([]);</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b)</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(nums, <span class=\"number\">0</span>, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">backtrack</span>(<span class=\"params\">nums, start, path, res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; start &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        path.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(path.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"title function_\">backtrack</span>(nums, i + <span class=\"number\">1</span>, path, res);</span><br><span class=\"line\">        path.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">subsetsWithDup</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> subsetsWithDup = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ans = [];</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">index, t</span>) &#123;</span><br><span class=\"line\">        ans.<span class=\"title function_\">push</span>([...t]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = index; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i !== index &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            t.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">            <span class=\"title function_\">f</span>(i + <span class=\"number\">1</span>, t);</span><br><span class=\"line\">            t.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">f</span>(<span class=\"number\">0</span>, []);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/216.Combination%20Sum%20III/index/",
            "url": "http://example.com/2024/05/11/leetcode/216.Combination%20Sum%20III/index/",
            "title": "216.Combination Sum III",
            "date_published": "2024-05-11T09:28:22.014Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWlpaS9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>根据题 39 的解法，稍作修改即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum3 = <span class=\"keyword\">function</span>(<span class=\"params\">k, n</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(k, <span class=\"number\">1</span>, n, [], rst);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">restNum, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (restNum === <span class=\"number\">0</span> &amp;&amp; target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span> || restNum &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(i)</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(restNum - <span class=\"number\">1</span>, i + <span class=\"number\">1</span>, target - i, res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum3</span>(<span class=\"number\">4</span>,<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum3 = <span class=\"keyword\">function</span> (<span class=\"params\">k, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">backtracking</span> = (<span class=\"params\">currentDigit, sum, elements</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentDigit &gt; <span class=\"number\">9</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum &gt; n) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (elements.<span class=\"property\">length</span> &gt; k) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum === n &amp;&amp; elements.<span class=\"property\">length</span> === k) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">push</span>(elements);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = currentDigit + <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">backtracking</span>(i, sum + i, [...elements, i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">backtracking</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, [])</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/40.Combination%20Sum%20II/index/",
            "url": "http://example.com/2024/05/11/leetcode/40.Combination%20Sum%20II/index/",
            "title": "40.combination-sum II",
            "date_published": "2024-05-11T09:26:27.924Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLWlpLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>根据上一题的解法，只需要对 candidates 进行排序，然后去重即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">candidates</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum2 = <span class=\"keyword\">function</span>(<span class=\"params\">candidates, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    candidates.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b)</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(candidates, <span class=\"number\">0</span>, target, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">candidates, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; candidates.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; start &amp;&amp; candidates[i] === candidates[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(candidates[i])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(candidates, i + <span class=\"number\">1</span>, target - candidates[i], res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum2</span>([<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>], <span class=\"number\">8</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/39.Combination%20Sum/index/",
            "url": "http://example.com/2024/05/11/leetcode/39.Combination%20Sum/index/",
            "title": "39.combination-sum",
            "date_published": "2024-05-11T08:45:50.778Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb24tc3VtLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>按顺序递归，但数字可以重复，如果每次都全部循环的话，会出现顺序不同但结果相同的情况，所以需要 start 来避免结果重复</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">candidates</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combinationSum = <span class=\"keyword\">function</span>(<span class=\"params\">candidates, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(candidates, <span class=\"number\">0</span>, target, [], rst);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">candidates, start, target, res, rst</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; candidates.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(candidates[i])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(candidates, i, target - candidates[i], res, rst)</span><br><span class=\"line\">        res.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum</span>([<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>], <span class=\"number\">7</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combinationSum</span>([<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>], <span class=\"number\">8</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/11/leetcode/77.Combinations/index/",
            "url": "http://example.com/2024/05/11/leetcode/77.Combinations/index/",
            "title": "77.combinations",
            "date_published": "2024-05-11T07:17:35.353Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29tYmluYXRpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combine = <span class=\"keyword\">function</span>(<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: n&#125;).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">dfs</span> = (<span class=\"params\">arr, path, start</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.<span class=\"property\">length</span> === k) &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">push</span>([...path]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            path.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(arr, path, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">            path.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(arr, [], <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">combine</span>(<span class=\"number\">5</span>, <span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">k</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> combine = <span class=\"keyword\">function</span>(<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = [];</span><br><span class=\"line\">    <span class=\"title function_\">generateCombinations</span>(<span class=\"number\">1</span>, n, k, [], result);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">generateCombinations</span>(<span class=\"params\">start, n, k, combination, result</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (k === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        result.<span class=\"title function_\">push</span>([...combination]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        combination.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        <span class=\"title function_\">generateCombinations</span>(i + <span class=\"number\">1</span>, n, k - <span class=\"number\">1</span>, combination, result);</span><br><span class=\"line\">        combination.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/47.Permutations%20II/index/",
            "url": "http://example.com/2024/05/06/leetcode/47.Permutations%20II/index/",
            "title": "47.Permutations II",
            "date_published": "2024-05-06T07:28:15.385Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVybXV0YXRpb25zLWlpL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>连续出现相同的数字，需要排除掉</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> permuteUnique = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">nums, path, res</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; nums[i] === nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(nums.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i).<span class=\"title function_\">concat</span>(nums.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)), path.<span class=\"title function_\">concat</span>(nums[i]), res);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(nums, [], res);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">permuteUnique</span>([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/46.Permutations/index/",
            "url": "http://example.com/2024/05/06/leetcode/46.Permutations/index/",
            "title": "46.Permutations",
            "date_published": "2024-05-06T07:26:34.278Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGVybXV0YXRpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> permute = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">nums, path, res</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(nums.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i).<span class=\"title function_\">concat</span>(nums.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>)), path.<span class=\"title function_\">concat</span>(nums[i]), res);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(nums, [], res);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">permute</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/257.Binary%20Tree%20Paths/index/",
            "url": "http://example.com/2024/05/06/leetcode/257.Binary%20Tree%20Paths/index/",
            "title": "79.Binary Tree Paths",
            "date_published": "2024-05-06T06:34:40.389Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmluYXJ5LXRyZWUtcGF0aHMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> binaryTreePaths = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">node, path</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">left</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">left</span>, path + <span class=\"string\">&#x27;-&gt;&#x27;</span> + node.<span class=\"property\">left</span>.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">right</span>, path + <span class=\"string\">&#x27;-&gt;&#x27;</span> + node.<span class=\"property\">right</span>.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node.<span class=\"property\">left</span> &amp;&amp; !node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(root, root.<span class=\"property\">val</span>.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>大差不差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> binaryTreePaths = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> paths = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">node, path</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        path.<span class=\"title function_\">push</span>(node.<span class=\"property\">val</span>.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!node.<span class=\"property\">left</span> &amp;&amp; !node.<span class=\"property\">right</span>) &#123;</span><br><span class=\"line\">            paths.<span class=\"title function_\">push</span>(path.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;-&gt;&#x27;</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">left</span>, path.<span class=\"title function_\">slice</span>()); <span class=\"comment\">// Copy the path array</span></span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(node.<span class=\"property\">right</span>, path.<span class=\"title function_\">slice</span>()); <span class=\"comment\">// Copy the path array</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(root, []);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> paths;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/05/06/leetcode/79.Word%20Search/index/",
            "url": "http://example.com/2024/05/06/leetcode/79.Word%20Search/index/",
            "title": "79.Word Search",
            "date_published": "2024-05-06T03:09:39.557Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvd29yZC1zZWFyY2gvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>但是时间不够，特别在重复字母很多的时候</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; board[<span class=\"number\">0</span>].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> record = &#123;&#125;;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, j, <span class=\"number\">0</span>, record)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, index, record</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= board.<span class=\"property\">length</span> || j &lt; <span class=\"number\">0</span> || j &gt;= board[<span class=\"number\">0</span>].<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      board[i][j] === word[index] &amp;&amp;</span><br><span class=\"line\">      (<span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, &#123;...record&#125;) ||</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, &#123;...record&#125;))</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>勉强通过了，不懂上面为什么超时</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; board[<span class=\"number\">0</span>].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i, j, <span class=\"number\">0</span>, &#123;&#125;)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, index, record</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= board.<span class=\"property\">length</span> || j &lt; <span class=\"number\">0</span> || j &gt;= board[<span class=\"number\">0</span>].<span class=\"property\">length</span> || board[i][j] !== word[index] || record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, record) ||</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, index + <span class=\"number\">1</span>, record)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        record[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span><span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">exist</span>(</span><br><span class=\"line\">        [[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>],[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;A&quot;</span>]],</span><br><span class=\"line\">        <span class=\"string\">&quot;AAAAAAAAAAAAAAB&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"title function_\">exist</span>(</span><br><span class=\"line\">        [</span><br><span class=\"line\">            [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>],</span><br><span class=\"line\">            [<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>],</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">&#x27;cdba&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>根据参考答案，引入额外的空间记录访问的节点，确实会增加运行时间（1200 -&gt; 350）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"keyword\">function</span>(<span class=\"params\">board, word</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> m = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n = board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">backtrack</span> = (<span class=\"params\">i, j, k</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k === word.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= m || j &lt; <span class=\"number\">0</span> || j &gt;= n || board[i][j] !== word.<span class=\"title function_\">charAt</span>(k)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">const</span> temp = board[i][j];</span><br><span class=\"line\">        board[i][j] = <span class=\"string\">&#x27;\\0&#x27;</span>; </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">const</span> result = <span class=\"title function_\">backtrack</span>(i + <span class=\"number\">1</span>, j, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i - <span class=\"number\">1</span>, j, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i, j + <span class=\"number\">1</span>, k + <span class=\"number\">1</span>) || </span><br><span class=\"line\">                       <span class=\"title function_\">backtrack</span>(i, j - <span class=\"number\">1</span>, k + <span class=\"number\">1</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        board[i][j] = temp; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">backtrack</span>(i, j, <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/04/30/leetcode/93.Restore%20IP%20Addresses/index/",
            "url": "http://example.com/2024/04/30/leetcode/93.Restore%20IP%20Addresses/index/",
            "title": "93.Restore IP Addresses",
            "date_published": "2024-04-30T06:32:22.041Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcmVzdG9yZS1pcC1hZGRyZXNzZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>要注意 ‘000’、‘00’、‘0’ 需要额外判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> restoreIpAddresses = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">str, res</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.<span class=\"property\">length</span> === <span class=\"number\">4</span> &amp;&amp; !str.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(res.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;.&#x27;</span>));</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(str.<span class=\"property\">length</span>, <span class=\"number\">3</span>); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> numStr = str.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> num = +numStr;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (numStr &amp;&amp; num &gt;= <span class=\"number\">0</span> &amp;&amp; num &lt;= <span class=\"number\">255</span> &amp;&amp; num.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> === numStr.<span class=\"property\">length</span> &amp;&amp; res.<span class=\"property\">length</span> &lt; <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(str.<span class=\"title function_\">slice</span>(i), res.<span class=\"title function_\">concat</span>(numStr))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">dfs</span>(s, [])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;25525511135&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;0000&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">restoreIpAddresses</span>(<span class=\"string\">&#x27;101023&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">restoreIpAddresses</span>(<span class=\"params\">s: <span class=\"built_in\">string</span></span>): <span class=\"built_in\">string</span>[] &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">result</span>:<span class=\"built_in\">string</span>[] = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">DFS</span>  = (<span class=\"params\">ip:<span class=\"built_in\">string</span>,index:<span class=\"built_in\">number</span>,octet:<span class=\"built_in\">number</span></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index &gt;= s.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// last octet check</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(octet == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//check if last digit is valid</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.<span class=\"title function_\">substring</span>(index, index+<span class=\"number\">1</span>) != <span class=\"string\">&quot;0&quot;</span> || index+<span class=\"number\">1</span> == s.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(index)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">                    ip += <span class=\"string\">&#x27;.&#x27;</span></span><br><span class=\"line\">                    ip += s.<span class=\"title function_\">substring</span>(index);</span><br><span class=\"line\">                    result.<span class=\"title function_\">push</span>(ip)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span> &amp;&amp; index+i &lt; s.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(index, index+i)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">                <span class=\"title function_\">DFS</span>(ip + <span class=\"string\">&#x27;.&#x27;</span>+ s.<span class=\"title function_\">substring</span>(index, index+i),index+i, octet + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//check for leading zero</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.<span class=\"title function_\">substring</span>(index, index+<span class=\"number\">1</span>) == <span class=\"string\">&quot;0&quot;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span> &amp;&amp; i &lt; s.<span class=\"property\">length</span> ; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title class_\">Number</span>(s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i)) &lt; <span class=\"number\">256</span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">DFS</span>(s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, i), i, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//check for leading zero</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>] == <span class=\"string\">&quot;0&quot;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/04/30/leetcode/417.Pacific%20Atlantic%20Water%20Flow/index/",
            "url": "http://example.com/2024/04/30/leetcode/417.Pacific%20Atlantic%20Water%20Flow/index/",
            "title": "417.Pacific Atlantic Water Flow",
            "date_published": "2024-04-30T03:16:39.876Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFjaWZpYy1hdGxhbnRpYy13YXRlci1mbG93L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>需要记录已经访问的节点，防止死循环，速度很慢</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">heights</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pacificAtlantic = <span class=\"keyword\">function</span>(<span class=\"params\">heights</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> m = heights.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> n = heights[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> record = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> r = record[i * n + j] = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">pacific</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                    <span class=\"attr\">atlantic</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> atlantic = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>();</span><br><span class=\"line\">                <span class=\"comment\">// const pacific = new Set();</span></span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(i, j, i * n + j,  record[i * n + j], atlantic, heights[i][j]);</span><br><span class=\"line\">                <span class=\"comment\">// dfs(i, j, i * n + j,  record[i * n + j], pacific, heights[i][j]);</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (r.<span class=\"property\">atlantic</span> &amp;&amp; r.<span class=\"property\">pacific</span>) &#123;</span><br><span class=\"line\">                    res.<span class=\"title function_\">push</span>([i, j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j, order, r, set, height</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= m || j &gt;= n) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> ii = i * n + j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (set.<span class=\"title function_\">has</span>(ii)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (heights[i][j] &gt; height) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span> || j === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">pacific</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === m - <span class=\"number\">1</span> || j === n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">atlantic</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (r.<span class=\"property\">pacific</span> &amp;&amp; r.<span class=\"property\">atlantic</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (order !== ii &amp;&amp; record[ii] &amp;&amp; record[ii].<span class=\"property\">atlantic</span> &amp;&amp; record[ii].<span class=\"property\">pacific</span>) &#123;</span><br><span class=\"line\">                r.<span class=\"property\">pacific</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                r.<span class=\"property\">atlantic</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            set.<span class=\"title function_\">add</span>(ii)</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i + <span class=\"number\">1</span>, j, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i - <span class=\"number\">1</span>, j, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j + <span class=\"number\">1</span>, order, r, set, heights[i][j]);</span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i, j - <span class=\"number\">1</span>, order, r, set, heights[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(pacificAtlantic(19,17,8,11],[4,11,10,0,1,18,11],[11,7,14,4,7,8,9],[12,0,0,3,6,2,12],[0,16,3,3,5,6,6],[6,11,17,12,18,5,15],[16,14,8,4,10,16,6],[9,7,2,13,5,5,5],[14,17,19,4,7,2,5],[11,16,18,14,8,10,12],[5,11,10,17,2,2,13],[7,6,12,3,5,3,12],[12,10,0,19,3,15,12],[13,2,12,1,1,15,19],[11,15,10,8,14,19,8],[16,2,2,16,5,15,16],[9,8,2,17,15,14,16],[17,2,17,17,0,6,3],[3,4,13,9,1,4,0],[1,3,13,10,14,9,4]]));</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">pacificAtlantic</span>([[<span class=\"number\">8</span>,<span class=\"number\">7</span>],[<span class=\"number\">11</span>,<span class=\"number\">2</span>],[<span class=\"number\">1</span>,<span class=\"number\">13</span>],[<span class=\"number\">14</span>,<span class=\"number\">15</span>],[<span class=\"number\">0</span>,<span class=\"number\">10</span>],[<span class=\"number\">19</span>,<span class=\"number\">9</span>],[<span class=\"number\">17</span>,<span class=\"number\">14</span>],[<span class=\"number\">10</span>,<span class=\"number\">10</span>],[<span class=\"number\">5</span>,<span class=\"number\">5</span>],[<span class=\"number\">15</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">10</span>],[<span class=\"number\">11</span>,<span class=\"number\">10</span>],[<span class=\"number\">4</span>,<span class=\"number\">3</span>],[<span class=\"number\">12</span>,<span class=\"number\">13</span>],[<span class=\"number\">11</span>,<span class=\"number\">7</span>],[<span class=\"number\">0</span>,<span class=\"number\">9</span>],[<span class=\"number\">13</span>,<span class=\"number\">5</span>],[<span class=\"number\">11</span>,<span class=\"number\">18</span>],[<span class=\"number\">9</span>,<span class=\"number\">19</span>],[<span class=\"number\">10</span>,<span class=\"number\">11</span>]]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pacificAtlantic = <span class=\"keyword\">function</span>(<span class=\"params\">M</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!M.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> M</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = M.<span class=\"property\">length</span>, x = M[<span class=\"number\">0</span>].<span class=\"property\">length</span>, ans = [],</span><br><span class=\"line\">        dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(x * y)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">dfs</span> = (<span class=\"params\">i, j, w, h</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> ij = i * x + j</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((dp[ij] &amp; w) || M[i][j] &lt; h) <span class=\"keyword\">return</span></span><br><span class=\"line\">        dp[ij] += w, h = M[i][j]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[ij] === <span class=\"number\">3</span>) ans.<span class=\"title function_\">push</span>([i,j])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i + <span class=\"number\">1</span> &lt; y) <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) <span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j + <span class=\"number\">1</span> &lt; x) <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>, w, h)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt; <span class=\"number\">0</span>) <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>, w, h)</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; y; i++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, <span class=\"number\">0</span>, <span class=\"number\">1</span>, M[i][<span class=\"number\">0</span>])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(i, x-<span class=\"number\">1</span>, <span class=\"number\">2</span>, M[i][x-<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; x; j++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(<span class=\"number\">0</span>, j, <span class=\"number\">1</span>, M[<span class=\"number\">0</span>][j])</span><br><span class=\"line\">        <span class=\"title function_\">dfs</span>(y-<span class=\"number\">1</span>, j, <span class=\"number\">2</span>, M[y-<span class=\"number\">1</span>][j])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/29/leetcode/130.Surrounded%20Regions/index/",
            "url": "http://example.com/2024/02/29/leetcode/130.Surrounded%20Regions/index/",
            "title": "130.Surrounded Regions",
            "date_published": "2024-02-29T06:49:56.963Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvc3Vycm91bmRlZC1yZWdpb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先判断区块是否符合，再进行替换，但是性能差</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">character[][]</span>&#125; <span class=\"variable\">board</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify board in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> solve = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> m = board.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> n = board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> marked = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">judge</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; i &gt;= <span class=\"number\">0</span> &amp;&amp; i &lt;= m - <span class=\"number\">1</span> &amp;&amp; j &gt;= <span class=\"number\">0</span> &amp;&amp; j &lt;= n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b1 = <span class=\"title function_\">judge</span>(i - <span class=\"number\">1</span>, j);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b2 = <span class=\"title function_\">judge</span>(i + <span class=\"number\">1</span>, j);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b3 = <span class=\"title function_\">judge</span>(i, j - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b4 = <span class=\"title function_\">judge</span>(i, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> b5 = i === <span class=\"number\">0</span> || i === m - <span class=\"number\">1</span> || j === <span class=\"number\">0</span> || j === n - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b1 &amp;&amp; b2 &amp;&amp; b3 &amp;&amp; b4 &amp;&amp; !b5;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">replace</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">0</span> &amp;&amp; i &lt;= m - <span class=\"number\">1</span> &amp;&amp; j &gt;= <span class=\"number\">0</span> &amp;&amp; j &lt;= n - <span class=\"number\">1</span> &amp;&amp; board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">      board[i][j] = <span class=\"string\">&quot;X&quot;</span>;</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i - <span class=\"number\">1</span>, j);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i + <span class=\"number\">1</span>, j);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i, j - <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"title function_\">replace</span>(i, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; board[i][j] === <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> yes = <span class=\"title function_\">judge</span>(i, j);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (yes) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">replace</span>(i, j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(board);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>把不需要替换的’O’标出来，剩下的就都是’X’了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> solve = <span class=\"keyword\">function</span>(<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(board.<span class=\"property\">length</span> ==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span> </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;board.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j] == <span class=\"string\">&#x27;O&#x27;</span> &amp;&amp; (i==<span class=\"number\">0</span> || i==board.<span class=\"property\">length</span>-<span class=\"number\">1</span> || j==<span class=\"number\">0</span> || j==board[<span class=\"number\">0</span>].<span class=\"property\">length</span>-<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">                  <span class=\"title function_\">dfs</span>(board,i,j)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;board.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;board[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(board[i][j]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">                  board[i][j]=<span class=\"string\">&#x27;O&#x27;</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    board[i][j]=<span class=\"string\">&#x27;X&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> board</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">board,i,j</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">0</span> || j&lt;<span class=\"number\">0</span> || i&gt;=board.<span class=\"property\">length</span> || j &gt;=board[<span class=\"number\">0</span>].<span class=\"property\">length</span> || board[i][j]==<span class=\"string\">&#x27;X&#x27;</span> || board[i][j]==<span class=\"string\">&#x27;W&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> </span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      board[i][j]=<span class=\"string\">&#x27;W&#x27;</span>;</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i+<span class=\"number\">1</span>,j)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i-<span class=\"number\">1</span>,j)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i,j+<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"title function_\">dfs</span>(board,i,j-<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "url": "http://example.com/2024/02/28/leetcode/547.Number%20of%20Provinces/index/",
            "title": "547.Number of Provinces",
            "date_published": "2024-02-28T06:50:44.317Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLXByb3ZpbmNlcy9kZXNjcmlwdGlvbi8/c291cmNlPXN1Ym1pc3Npb24tbm9hYw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>有两种 marked，一种是已被其他城市相连，一种是一个城市只需要标记一次</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; isConnected 连通矩阵，表示每个点是否与其它点相连</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; 返回连通的圆的数量</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findCircleNum = <span class=\"keyword\">function</span> (<span class=\"params\">isConnected</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = isConnected.<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的行数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> m = isConnected[<span class=\"number\">0</span>].<span class=\"property\">length</span>; <span class=\"comment\">// 连通矩阵的列数</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 记录已经访问过的点</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">    marked[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    marked[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    isConnected[i][j] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    isConnected[j][i] = <span class=\"number\">0</span>; <span class=\"comment\">// 将相连的点标记为0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; m; k++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j !== k &amp;&amp; isConnected[j][k] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(j, k); <span class=\"comment\">// 递归访问相连的点</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> hasMarked = <span class=\"literal\">false</span>; <span class=\"comment\">// 记录当前连通圆是否已经访问过</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i !== j &amp;&amp; isConnected[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">trav</span>(i, j); <span class=\"comment\">// 访问相连的点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!hasMarked) &#123;</span><br><span class=\"line\">          ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">          hasMarked = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记当前连通圆已经访问过</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!marked[i]) &#123;</span><br><span class=\"line\">      ans += <span class=\"number\">1</span>; <span class=\"comment\">// 记录连通圆的数量</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findCircleNum</span>(<span class=\"params\">M</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个 Set 数据结构，用于存储已访问的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> visited = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个变量，用于存储朋友圈的数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> circles = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 遍历矩阵 M</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; M.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 检查当前节点是否已访问过</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!visited.<span class=\"title function_\">has</span>(i)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 对当前节点进行深度优先搜索</span></span><br><span class=\"line\">            <span class=\"title function_\">dfs</span>(i);</span><br><span class=\"line\">            <span class=\"comment\">// 这是一个新的朋友圈</span></span><br><span class=\"line\">            circles++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> circles;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 辅助函数，用于进行深度优先搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历当前节点的邻居节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; M.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检查当前节点是否是邻居节点，并且未被访问过</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (M[i][j] === <span class=\"number\">1</span> &amp;&amp; !visited.<span class=\"title function_\">has</span>(j)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将邻居节点标记为已访问</span></span><br><span class=\"line\">                visited.<span class=\"title function_\">add</span>(j);</span><br><span class=\"line\">                <span class=\"comment\">// 对邻居节点进行深度优先搜索</span></span><br><span class=\"line\">                <span class=\"title function_\">dfs</span>(j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "url": "http://example.com/2024/02/28/leetcode/200.Number%20of%20Islands/index/",
            "title": "200.Number of Islands",
            "date_published": "2024-02-28T03:15:17.352Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbnVtYmVyLW9mLWlzbGFuZHMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>答案同<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">题 695</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numIslands = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || grid[i][j] === <span class=\"string\">&#x27;0&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j] === <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">trav</span>(i, j)</span><br><span class=\"line\">                ans += <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        },
        {
            "id": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "url": "http://example.com/2024/02/28/leetcode/695.Max%20Area%20of%20Island/index/",
            "title": "695.Max Area of Island",
            "date_published": "2024-02-28T02:42:28.956Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4LWFyZWEtb2YtaXNsYW5kL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>找到每一块大陆的大小，返回最大值，因为可能没有，所以初始化 <code>[0]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span> - 二维数组表示的网格</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 最大面积</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> marked = &#123;&#125;; <span class=\"comment\">// 用于标记已访问过的岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [<span class=\"number\">0</span>]; <span class=\"comment\">// 存储每个岛屿的面积</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历网格中的每个岛屿</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; grid.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; grid[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">                rst.<span class=\"title function_\">push</span>(<span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>); <span class=\"comment\">// 计算当前岛屿的面积并添加到结果数组中</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 深度优先搜索（DFS）计算岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">i</span> - 当前岛屿的行索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">j</span> - 当前岛屿的列索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125; - 当前岛屿的面积</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">i, j</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果当前岛屿未被访问过且为陆地（1）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] &amp;&amp; grid[i] &amp;&amp; grid[i][j] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            marked[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>-<span class=\"subst\">$&#123;j&#125;</span>`</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// 标记为已访问</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">dfs</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">dfs</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">dfs</span>(i, j+<span class=\"number\">1</span>) + <span class=\"number\">1</span>; <span class=\"comment\">// 递归计算相邻岛屿的面积并加上当前岛屿的面积</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>; <span class=\"comment\">// 如果当前岛屿不是陆地（1），返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...rst); <span class=\"comment\">// 返回结果数组中的最大值</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>看起来好像差不多，但速度快了有一倍</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算岛屿的最大面积</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxAreaOfIsland = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"number\">0</span>, n = grid.<span class=\"property\">length</span>, m = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"comment\">// 定义递归函数，用于计算岛屿的面积</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">trav</span> = (<span class=\"params\">i, j</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果越界或者当前位置为水域，则返回0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || j &lt; <span class=\"number\">0</span> || i &gt;= n || j &gt;= m || !grid[i][j]) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 将当前位置标记为已访问</span></span><br><span class=\"line\">        grid[i][j] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\">// 递归计算上下左右四个方向的岛屿面积，并返回最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">trav</span>(i-<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j-<span class=\"number\">1</span>) + <span class=\"title function_\">trav</span>(i+<span class=\"number\">1</span>, j) + <span class=\"title function_\">trav</span>(i, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历整个岛屿，计算每个岛屿的面积，并更新最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j]) ans = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ans, <span class=\"title function_\">trav</span>(i, j))</span><br><span class=\"line\">    <span class=\"comment\">// 返回最大面积</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "DFS"
            ]
        }
    ]
}