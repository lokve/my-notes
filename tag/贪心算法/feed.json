{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记 • All posts by \"贪心算法\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/22/leetcode/665.Non-decreasing%20Array/index/",
            "url": "http://example.com/2024/02/22/leetcode/665.Non-decreasing%20Array/index/",
            "title": "665.Non-decreasing Array",
            "date_published": "2024-02-22T07:54:56.172Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLWRlY3JlYXNpbmctYXJyYXkvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> checkPossibility = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[i] &lt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span> &amp;&amp; nums[i]&lt; nums[i -<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        nums[i] = nums[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        nums[i - <span class=\"number\">1</span>] = nums[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      num++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([-<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">checkPossibility</span>([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/392.Is%20Subsequence/index/",
            "url": "http://example.com/2024/02/22/leetcode/392.Is%20Subsequence/index/",
            "title": "392.Is Subsequence",
            "date_published": "2024-02-22T03:20:36.570Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaXMtc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>挨个比过去就行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSubsequence = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s === t) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; t.<span class=\"property\">length</span>; i ++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t[i] === s[n]) &#123;</span><br><span class=\"line\">                n++</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n === s.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/605.Can%20Place%20Flowers/index/",
            "url": "http://example.com/2024/02/22/leetcode/605.Can%20Place%20Flowers/index/",
            "title": "605.Can Place Flowers",
            "date_published": "2024-02-22T03:14:18.126Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2FuLXBsYWNlLWZsb3dlcnMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>判断前后是否是 1</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">flowerbed</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canPlaceFlowers = <span class=\"keyword\">function</span>(<span class=\"params\">flowerbed, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; flowerbed.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (flowerbed[i] === <span class=\"number\">0</span> &amp;&amp; !flowerbed[i+<span class=\"number\">1</span>] &amp;&amp; !flowerbed[i-<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          flowerbed[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">          n--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">canPlaceFlowers</span>([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], <span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/22/leetcode/763.Partition%20Labels/index/",
            "url": "http://example.com/2024/02/22/leetcode/763.Partition%20Labels/index/",
            "title": "763.Partition Labels",
            "date_published": "2024-02-22T02:51:41.043Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWxhYmVscy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>这题完全没有 get 到 (尽可能分组的) 意思，不知道该如何下手，不过基于网友提示，得到下面答案</p>\n<p>思路：先收集每个字符出现的位置间隔，然后排序。判断间隔重叠，则分为一组，否则分为两组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 提示</span></span><br><span class=\"line\"><span class=\"comment\"> * Imo you can entirely approach this as an intervals question. You are merging the intervals of two letters if they overlap at all. &quot;aaaab&quot; is [4, 1] because the intervals are [[0, 3], [4, 4]] aka [[3 - 0 + 1], [4 - 4 + 1]], but &quot;aaaaba&quot; is [6] because the intervals are [[0, 6], [5,5]]. You do this for every letter.</span></span><br><span class=\"line\"><span class=\"comment\"> Note that &quot;aaaabab&quot; would be [[0, 6], [5, 7]] and thus merged to [0, 7] so you return [7 - 0 + 1] aka [8]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> partitionLabels = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> last = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!last[s[i]]) &#123;</span><br><span class=\"line\">            last[s[i]] = [i, i]</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            last[s[i]][<span class=\"number\">1</span>] = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = <span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(last).<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">0</span>] === y[<span class=\"number\">0</span>] ? y[<span class=\"number\">1</span>] - x[<span class=\"number\">1</span>] : x[<span class=\"number\">0</span>] - y[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rst = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> a = arr[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max &lt; a[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(max - start + <span class=\"number\">1</span>);</span><br><span class=\"line\">            start = max+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(a[<span class=\"number\">1</span>], max)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i === arr.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; max &gt;= a[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            rst.<span class=\"title function_\">push</span>(max - start + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rst;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">partitionLabels</span>(<span class=\"string\">&#x27;eccbbbbdec&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p>字符串的顺序就是位置顺序，不需要额外排序；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> partitionLabels = <span class=\"keyword\">function</span> (<span class=\"params\">s, lastIdx = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    lastIdx[s[i]] = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> curLast = <span class=\"number\">0</span>, res = [], accu = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 取最大的最后出现位置</span></span><br><span class=\"line\">    curLast = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(curLast, lastIdx[s[i]]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后出现位置和序号一样，说明没有重叠了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === curLast) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">push</span>(i + <span class=\"number\">1</span> - accu);</span><br><span class=\"line\">      accu = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/21/leetcode/406.Queue%20Reconstruction%20by%20Height/index/",
            "url": "http://example.com/2024/02/21/leetcode/406.Queue%20Reconstruction%20by%20Height/index/",
            "title": "406.Queue Reconstruction by Height",
            "date_published": "2024-02-21T07:36:49.658Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcXVldWUtcmVjb25zdHJ1Y3Rpb24tYnktaGVpZ2h0L2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排列 people，然后比较数值和大小插入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">people</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reconstructQueue = <span class=\"keyword\">function</span> (<span class=\"params\">people</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// people 先按people[n][1]从小到大排序，再按people[n][0]从大到小排序</span></span><br><span class=\"line\">  people.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> (x[<span class=\"number\">1</span>] === y[<span class=\"number\">1</span>] ? y[<span class=\"number\">0</span>] - x[<span class=\"number\">0</span>] : x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queue = [people[<span class=\"number\">0</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; people.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> p = people[i];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; queue.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = queue[j];</span><br><span class=\"line\">      <span class=\"comment\">// 数量吻合，插入数据</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (p[<span class=\"number\">1</span>] === num &amp;&amp; p[<span class=\"number\">0</span>] &lt;= q[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">        queue.<span class=\"title function_\">splice</span>(j, <span class=\"number\">0</span>, p);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p[<span class=\"number\">0</span>] &lt;= q[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 只有&lt;=才增加num</span></span><br><span class=\"line\">        num++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j === queue.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        queue.<span class=\"title function_\">push</span>(p);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> queue;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考答案\"><a class=\"markdownIt-Anchor\" href=\"#参考答案\">#</a> 参考答案</h3>\n<p><code>people[n][1]</code>  在一定程度上已经代表了他在重组数组中的位置，所以不需要一项项比较</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">people</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[][]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reconstructQueue = <span class=\"keyword\">function</span>(<span class=\"params\">people</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    people.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a[<span class=\"number\">0</span>] == b[<span class=\"number\">0</span>] ? a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>] : b[<span class=\"number\">0</span>] - a[<span class=\"number\">0</span>])</span><br><span class=\"line\">    people.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">splice</span>(val[<span class=\"number\">1</span>], <span class=\"number\">0</span>, val)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/455.Assign%20Cookies/index/",
            "url": "http://example.com/2024/02/20/leetcode/455.Assign%20Cookies/index/",
            "title": "455.Assign Cookies",
            "date_published": "2024-02-20T07:34:40.706Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYXNzaWduLWNvb2tpZXMvZGVzY3JpcHRpb24v\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排序，在比较</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">g</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findContentChildren = <span class=\"keyword\">function</span>(<span class=\"params\">g, s</span>) &#123;</span><br><span class=\"line\">    g.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\">    s.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x - y);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; g.<span class=\"property\">length</span> &amp;&amp; j &lt; s.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[j] &gt;= g[i]) &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findContentChildren</span>([<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>], [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/452.Minimum%20Number%20of%20Arrows%20to%20Burst%20Balloons/index/",
            "url": "http://example.com/2024/02/20/leetcode/452.Minimum%20Number%20of%20Arrows%20to%20Burst%20Balloons/index/",
            "title": "452.Minimum Number of Arrows to Burst Balloons",
            "date_published": "2024-02-20T07:32:15.872Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS1udW1iZXItb2YtYXJyb3dzLXRvLWJ1cnN0LWJhbGxvb25zL2Rlc2NyaXB0aW9uLw==\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLW92ZXJsYXBwaW5nLWludGVydmFscy9kZXNjcmlwdGlvbi8=\"> 435</span> 同理，计算重叠点个数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">points</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMinArrowShots = <span class=\"keyword\">function</span>(<span class=\"params\">points</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!points.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        points.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = points[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; points.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (points[i][<span class=\"number\">0</span>] &lt;= min) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">            min = points[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">findMinArrowShots</span>([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]));</span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2024/02/20/leetcode/435.Non-overlapping%20Intervals/index/",
            "url": "http://example.com/2024/02/20/leetcode/435.Non-overlapping%20Intervals/index/",
            "title": "435.Non-overlapping Intervals",
            "date_published": "2024-02-20T06:54:54.119Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbm9uLW92ZXJsYXBwaW5nLWludGVydmFscy9kZXNjcmlwdGlvbi8=\">地址</span></p>\n<h3 id=\"我的答案\"><a class=\"markdownIt-Anchor\" href=\"#我的答案\">#</a> 我的答案</h3>\n<p>先排序，然后看是否重合，选择的区间结尾越小，留给后面的区间的空间越大，那么后面能够选择的区间个数也就越大</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">intervals</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> eraseOverlapIntervals = <span class=\"keyword\">function</span>(<span class=\"params\">intervals</span>) &#123;</span><br><span class=\"line\">    intervals.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x[<span class=\"number\">1</span>] - y[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = intervals[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; intervals.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (intervals[i][<span class=\"number\">0</span>] &lt; max) &#123;</span><br><span class=\"line\">            num += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            max = intervals[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "贪心算法"
            ]
        }
    ]
}